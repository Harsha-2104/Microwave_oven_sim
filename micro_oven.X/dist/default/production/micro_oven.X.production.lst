

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Feb 27 18:31:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,space=0,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F877A Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0004                     fsr             equ	4
    78     0004                     fsr0            equ	4
    79     0000                     indf            equ	0
    80     0000                     indf0           equ	0
    81     0002                     pc              equ	2
    82     0002                     pcl             equ	2
    83     000A                     pclath          equ	10
    84     0003                     status          equ	3
    85     0000                     INDF            equ	0	;# 
    86     0001                     TMR0            equ	1	;# 
    87     0002                     PCL             equ	2	;# 
    88     0003                     STATUS          equ	3	;# 
    89     0004                     FSR             equ	4	;# 
    90     0005                     PORTA           equ	5	;# 
    91     0006                     PORTB           equ	6	;# 
    92     0007                     PORTC           equ	7	;# 
    93     0008                     PORTD           equ	8	;# 
    94     0009                     PORTE           equ	9	;# 
    95     000A                     PCLATH          equ	10	;# 
    96     000B                     INTCON          equ	11	;# 
    97     000C                     PIR1            equ	12	;# 
    98     000D                     PIR2            equ	13	;# 
    99     000E                     TMR1            equ	14	;# 
   100     000E                     TMR1L           equ	14	;# 
   101     000F                     TMR1H           equ	15	;# 
   102     0010                     T1CON           equ	16	;# 
   103     0011                     TMR2            equ	17	;# 
   104     0012                     T2CON           equ	18	;# 
   105     0013                     SSPBUF          equ	19	;# 
   106     0014                     SSPCON          equ	20	;# 
   107     0015                     CCPR1           equ	21	;# 
   108     0015                     CCPR1L          equ	21	;# 
   109     0016                     CCPR1H          equ	22	;# 
   110     0017                     CCP1CON         equ	23	;# 
   111     0018                     RCSTA           equ	24	;# 
   112     0019                     TXREG           equ	25	;# 
   113     001A                     RCREG           equ	26	;# 
   114     001B                     CCPR2           equ	27	;# 
   115     001B                     CCPR2L          equ	27	;# 
   116     001C                     CCPR2H          equ	28	;# 
   117     001D                     CCP2CON         equ	29	;# 
   118     001E                     ADRESH          equ	30	;# 
   119     001F                     ADCON0          equ	31	;# 
   120     0081                     OPTION_REG      equ	129	;# 
   121     0085                     TRISA           equ	133	;# 
   122     0086                     TRISB           equ	134	;# 
   123     0087                     TRISC           equ	135	;# 
   124     0088                     TRISD           equ	136	;# 
   125     0089                     TRISE           equ	137	;# 
   126     008C                     PIE1            equ	140	;# 
   127     008D                     PIE2            equ	141	;# 
   128     008E                     PCON            equ	142	;# 
   129     0091                     SSPCON2         equ	145	;# 
   130     0092                     PR2             equ	146	;# 
   131     0093                     SSPADD          equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0098                     TXSTA           equ	152	;# 
   134     0099                     SPBRG           equ	153	;# 
   135     009C                     CMCON           equ	156	;# 
   136     009D                     CVRCON          equ	157	;# 
   137     009E                     ADRESL          equ	158	;# 
   138     009F                     ADCON1          equ	159	;# 
   139     010C                     EEDATA          equ	268	;# 
   140     010D                     EEADR           equ	269	;# 
   141     010E                     EEDATH          equ	270	;# 
   142     010F                     EEADRH          equ	271	;# 
   143     018C                     EECON1          equ	396	;# 
   144     018D                     EECON2          equ	397	;# 
   145     0000                     INDF            equ	0	;# 
   146     0001                     TMR0            equ	1	;# 
   147     0002                     PCL             equ	2	;# 
   148     0003                     STATUS          equ	3	;# 
   149     0004                     FSR             equ	4	;# 
   150     0005                     PORTA           equ	5	;# 
   151     0006                     PORTB           equ	6	;# 
   152     0007                     PORTC           equ	7	;# 
   153     0008                     PORTD           equ	8	;# 
   154     0009                     PORTE           equ	9	;# 
   155     000A                     PCLATH          equ	10	;# 
   156     000B                     INTCON          equ	11	;# 
   157     000C                     PIR1            equ	12	;# 
   158     000D                     PIR2            equ	13	;# 
   159     000E                     TMR1            equ	14	;# 
   160     000E                     TMR1L           equ	14	;# 
   161     000F                     TMR1H           equ	15	;# 
   162     0010                     T1CON           equ	16	;# 
   163     0011                     TMR2            equ	17	;# 
   164     0012                     T2CON           equ	18	;# 
   165     0013                     SSPBUF          equ	19	;# 
   166     0014                     SSPCON          equ	20	;# 
   167     0015                     CCPR1           equ	21	;# 
   168     0015                     CCPR1L          equ	21	;# 
   169     0016                     CCPR1H          equ	22	;# 
   170     0017                     CCP1CON         equ	23	;# 
   171     0018                     RCSTA           equ	24	;# 
   172     0019                     TXREG           equ	25	;# 
   173     001A                     RCREG           equ	26	;# 
   174     001B                     CCPR2           equ	27	;# 
   175     001B                     CCPR2L          equ	27	;# 
   176     001C                     CCPR2H          equ	28	;# 
   177     001D                     CCP2CON         equ	29	;# 
   178     001E                     ADRESH          equ	30	;# 
   179     001F                     ADCON0          equ	31	;# 
   180     0081                     OPTION_REG      equ	129	;# 
   181     0085                     TRISA           equ	133	;# 
   182     0086                     TRISB           equ	134	;# 
   183     0087                     TRISC           equ	135	;# 
   184     0088                     TRISD           equ	136	;# 
   185     0089                     TRISE           equ	137	;# 
   186     008C                     PIE1            equ	140	;# 
   187     008D                     PIE2            equ	141	;# 
   188     008E                     PCON            equ	142	;# 
   189     0091                     SSPCON2         equ	145	;# 
   190     0092                     PR2             equ	146	;# 
   191     0093                     SSPADD          equ	147	;# 
   192     0094                     SSPSTAT         equ	148	;# 
   193     0098                     TXSTA           equ	152	;# 
   194     0099                     SPBRG           equ	153	;# 
   195     009C                     CMCON           equ	156	;# 
   196     009D                     CVRCON          equ	157	;# 
   197     009E                     ADRESL          equ	158	;# 
   198     009F                     ADCON1          equ	159	;# 
   199     010C                     EEDATA          equ	268	;# 
   200     010D                     EEADR           equ	269	;# 
   201     010E                     EEDATH          equ	270	;# 
   202     010F                     EEADRH          equ	271	;# 
   203     018C                     EECON1          equ	396	;# 
   204     018D                     EECON2          equ	397	;# 
   205     0000                     INDF            equ	0	;# 
   206     0001                     TMR0            equ	1	;# 
   207     0002                     PCL             equ	2	;# 
   208     0003                     STATUS          equ	3	;# 
   209     0004                     FSR             equ	4	;# 
   210     0005                     PORTA           equ	5	;# 
   211     0006                     PORTB           equ	6	;# 
   212     0007                     PORTC           equ	7	;# 
   213     0008                     PORTD           equ	8	;# 
   214     0009                     PORTE           equ	9	;# 
   215     000A                     PCLATH          equ	10	;# 
   216     000B                     INTCON          equ	11	;# 
   217     000C                     PIR1            equ	12	;# 
   218     000D                     PIR2            equ	13	;# 
   219     000E                     TMR1            equ	14	;# 
   220     000E                     TMR1L           equ	14	;# 
   221     000F                     TMR1H           equ	15	;# 
   222     0010                     T1CON           equ	16	;# 
   223     0011                     TMR2            equ	17	;# 
   224     0012                     T2CON           equ	18	;# 
   225     0013                     SSPBUF          equ	19	;# 
   226     0014                     SSPCON          equ	20	;# 
   227     0015                     CCPR1           equ	21	;# 
   228     0015                     CCPR1L          equ	21	;# 
   229     0016                     CCPR1H          equ	22	;# 
   230     0017                     CCP1CON         equ	23	;# 
   231     0018                     RCSTA           equ	24	;# 
   232     0019                     TXREG           equ	25	;# 
   233     001A                     RCREG           equ	26	;# 
   234     001B                     CCPR2           equ	27	;# 
   235     001B                     CCPR2L          equ	27	;# 
   236     001C                     CCPR2H          equ	28	;# 
   237     001D                     CCP2CON         equ	29	;# 
   238     001E                     ADRESH          equ	30	;# 
   239     001F                     ADCON0          equ	31	;# 
   240     0081                     OPTION_REG      equ	129	;# 
   241     0085                     TRISA           equ	133	;# 
   242     0086                     TRISB           equ	134	;# 
   243     0087                     TRISC           equ	135	;# 
   244     0088                     TRISD           equ	136	;# 
   245     0089                     TRISE           equ	137	;# 
   246     008C                     PIE1            equ	140	;# 
   247     008D                     PIE2            equ	141	;# 
   248     008E                     PCON            equ	142	;# 
   249     0091                     SSPCON2         equ	145	;# 
   250     0092                     PR2             equ	146	;# 
   251     0093                     SSPADD          equ	147	;# 
   252     0094                     SSPSTAT         equ	148	;# 
   253     0098                     TXSTA           equ	152	;# 
   254     0099                     SPBRG           equ	153	;# 
   255     009C                     CMCON           equ	156	;# 
   256     009D                     CVRCON          equ	157	;# 
   257     009E                     ADRESL          equ	158	;# 
   258     009F                     ADCON1          equ	159	;# 
   259     010C                     EEDATA          equ	268	;# 
   260     010D                     EEADR           equ	269	;# 
   261     010E                     EEDATH          equ	270	;# 
   262     010F                     EEADRH          equ	271	;# 
   263     018C                     EECON1          equ	396	;# 
   264     018D                     EECON2          equ	397	;# 
   265     0000                     INDF            equ	0	;# 
   266     0001                     TMR0            equ	1	;# 
   267     0002                     PCL             equ	2	;# 
   268     0003                     STATUS          equ	3	;# 
   269     0004                     FSR             equ	4	;# 
   270     0005                     PORTA           equ	5	;# 
   271     0006                     PORTB           equ	6	;# 
   272     0007                     PORTC           equ	7	;# 
   273     0008                     PORTD           equ	8	;# 
   274     0009                     PORTE           equ	9	;# 
   275     000A                     PCLATH          equ	10	;# 
   276     000B                     INTCON          equ	11	;# 
   277     000C                     PIR1            equ	12	;# 
   278     000D                     PIR2            equ	13	;# 
   279     000E                     TMR1            equ	14	;# 
   280     000E                     TMR1L           equ	14	;# 
   281     000F                     TMR1H           equ	15	;# 
   282     0010                     T1CON           equ	16	;# 
   283     0011                     TMR2            equ	17	;# 
   284     0012                     T2CON           equ	18	;# 
   285     0013                     SSPBUF          equ	19	;# 
   286     0014                     SSPCON          equ	20	;# 
   287     0015                     CCPR1           equ	21	;# 
   288     0015                     CCPR1L          equ	21	;# 
   289     0016                     CCPR1H          equ	22	;# 
   290     0017                     CCP1CON         equ	23	;# 
   291     0018                     RCSTA           equ	24	;# 
   292     0019                     TXREG           equ	25	;# 
   293     001A                     RCREG           equ	26	;# 
   294     001B                     CCPR2           equ	27	;# 
   295     001B                     CCPR2L          equ	27	;# 
   296     001C                     CCPR2H          equ	28	;# 
   297     001D                     CCP2CON         equ	29	;# 
   298     001E                     ADRESH          equ	30	;# 
   299     001F                     ADCON0          equ	31	;# 
   300     0081                     OPTION_REG      equ	129	;# 
   301     0085                     TRISA           equ	133	;# 
   302     0086                     TRISB           equ	134	;# 
   303     0087                     TRISC           equ	135	;# 
   304     0088                     TRISD           equ	136	;# 
   305     0089                     TRISE           equ	137	;# 
   306     008C                     PIE1            equ	140	;# 
   307     008D                     PIE2            equ	141	;# 
   308     008E                     PCON            equ	142	;# 
   309     0091                     SSPCON2         equ	145	;# 
   310     0092                     PR2             equ	146	;# 
   311     0093                     SSPADD          equ	147	;# 
   312     0094                     SSPSTAT         equ	148	;# 
   313     0098                     TXSTA           equ	152	;# 
   314     0099                     SPBRG           equ	153	;# 
   315     009C                     CMCON           equ	156	;# 
   316     009D                     CVRCON          equ	157	;# 
   317     009E                     ADRESL          equ	158	;# 
   318     009F                     ADCON1          equ	159	;# 
   319     010C                     EEDATA          equ	268	;# 
   320     010D                     EEADR           equ	269	;# 
   321     010E                     EEDATH          equ	270	;# 
   322     010F                     EEADRH          equ	271	;# 
   323     018C                     EECON1          equ	396	;# 
   324     018D                     EECON2          equ	397	;# 
   325     0000                     INDF            equ	0	;# 
   326     0001                     TMR0            equ	1	;# 
   327     0002                     PCL             equ	2	;# 
   328     0003                     STATUS          equ	3	;# 
   329     0004                     FSR             equ	4	;# 
   330     0005                     PORTA           equ	5	;# 
   331     0006                     PORTB           equ	6	;# 
   332     0007                     PORTC           equ	7	;# 
   333     0008                     PORTD           equ	8	;# 
   334     0009                     PORTE           equ	9	;# 
   335     000A                     PCLATH          equ	10	;# 
   336     000B                     INTCON          equ	11	;# 
   337     000C                     PIR1            equ	12	;# 
   338     000D                     PIR2            equ	13	;# 
   339     000E                     TMR1            equ	14	;# 
   340     000E                     TMR1L           equ	14	;# 
   341     000F                     TMR1H           equ	15	;# 
   342     0010                     T1CON           equ	16	;# 
   343     0011                     TMR2            equ	17	;# 
   344     0012                     T2CON           equ	18	;# 
   345     0013                     SSPBUF          equ	19	;# 
   346     0014                     SSPCON          equ	20	;# 
   347     0015                     CCPR1           equ	21	;# 
   348     0015                     CCPR1L          equ	21	;# 
   349     0016                     CCPR1H          equ	22	;# 
   350     0017                     CCP1CON         equ	23	;# 
   351     0018                     RCSTA           equ	24	;# 
   352     0019                     TXREG           equ	25	;# 
   353     001A                     RCREG           equ	26	;# 
   354     001B                     CCPR2           equ	27	;# 
   355     001B                     CCPR2L          equ	27	;# 
   356     001C                     CCPR2H          equ	28	;# 
   357     001D                     CCP2CON         equ	29	;# 
   358     001E                     ADRESH          equ	30	;# 
   359     001F                     ADCON0          equ	31	;# 
   360     0081                     OPTION_REG      equ	129	;# 
   361     0085                     TRISA           equ	133	;# 
   362     0086                     TRISB           equ	134	;# 
   363     0087                     TRISC           equ	135	;# 
   364     0088                     TRISD           equ	136	;# 
   365     0089                     TRISE           equ	137	;# 
   366     008C                     PIE1            equ	140	;# 
   367     008D                     PIE2            equ	141	;# 
   368     008E                     PCON            equ	142	;# 
   369     0091                     SSPCON2         equ	145	;# 
   370     0092                     PR2             equ	146	;# 
   371     0093                     SSPADD          equ	147	;# 
   372     0094                     SSPSTAT         equ	148	;# 
   373     0098                     TXSTA           equ	152	;# 
   374     0099                     SPBRG           equ	153	;# 
   375     009C                     CMCON           equ	156	;# 
   376     009D                     CVRCON          equ	157	;# 
   377     009E                     ADRESL          equ	158	;# 
   378     009F                     ADCON1          equ	159	;# 
   379     010C                     EEDATA          equ	268	;# 
   380     010D                     EEADR           equ	269	;# 
   381     010E                     EEDATH          equ	270	;# 
   382     010F                     EEADRH          equ	271	;# 
   383     018C                     EECON1          equ	396	;# 
   384     018D                     EECON2          equ	397	;# 
   385     0000                     INDF            equ	0	;# 
   386     0001                     TMR0            equ	1	;# 
   387     0002                     PCL             equ	2	;# 
   388     0003                     STATUS          equ	3	;# 
   389     0004                     FSR             equ	4	;# 
   390     0005                     PORTA           equ	5	;# 
   391     0006                     PORTB           equ	6	;# 
   392     0007                     PORTC           equ	7	;# 
   393     0008                     PORTD           equ	8	;# 
   394     0009                     PORTE           equ	9	;# 
   395     000A                     PCLATH          equ	10	;# 
   396     000B                     INTCON          equ	11	;# 
   397     000C                     PIR1            equ	12	;# 
   398     000D                     PIR2            equ	13	;# 
   399     000E                     TMR1            equ	14	;# 
   400     000E                     TMR1L           equ	14	;# 
   401     000F                     TMR1H           equ	15	;# 
   402     0010                     T1CON           equ	16	;# 
   403     0011                     TMR2            equ	17	;# 
   404     0012                     T2CON           equ	18	;# 
   405     0013                     SSPBUF          equ	19	;# 
   406     0014                     SSPCON          equ	20	;# 
   407     0015                     CCPR1           equ	21	;# 
   408     0015                     CCPR1L          equ	21	;# 
   409     0016                     CCPR1H          equ	22	;# 
   410     0017                     CCP1CON         equ	23	;# 
   411     0018                     RCSTA           equ	24	;# 
   412     0019                     TXREG           equ	25	;# 
   413     001A                     RCREG           equ	26	;# 
   414     001B                     CCPR2           equ	27	;# 
   415     001B                     CCPR2L          equ	27	;# 
   416     001C                     CCPR2H          equ	28	;# 
   417     001D                     CCP2CON         equ	29	;# 
   418     001E                     ADRESH          equ	30	;# 
   419     001F                     ADCON0          equ	31	;# 
   420     0081                     OPTION_REG      equ	129	;# 
   421     0085                     TRISA           equ	133	;# 
   422     0086                     TRISB           equ	134	;# 
   423     0087                     TRISC           equ	135	;# 
   424     0088                     TRISD           equ	136	;# 
   425     0089                     TRISE           equ	137	;# 
   426     008C                     PIE1            equ	140	;# 
   427     008D                     PIE2            equ	141	;# 
   428     008E                     PCON            equ	142	;# 
   429     0091                     SSPCON2         equ	145	;# 
   430     0092                     PR2             equ	146	;# 
   431     0093                     SSPADD          equ	147	;# 
   432     0094                     SSPSTAT         equ	148	;# 
   433     0098                     TXSTA           equ	152	;# 
   434     0099                     SPBRG           equ	153	;# 
   435     009C                     CMCON           equ	156	;# 
   436     009D                     CVRCON          equ	157	;# 
   437     009E                     ADRESL          equ	158	;# 
   438     009F                     ADCON1          equ	159	;# 
   439     010C                     EEDATA          equ	268	;# 
   440     010D                     EEADR           equ	269	;# 
   441     010E                     EEDATH          equ	270	;# 
   442     010F                     EEADRH          equ	271	;# 
   443     018C                     EECON1          equ	396	;# 
   444     018D                     EECON2          equ	397	;# 
   445     0000                     INDF            equ	0	;# 
   446     0001                     TMR0            equ	1	;# 
   447     0002                     PCL             equ	2	;# 
   448     0003                     STATUS          equ	3	;# 
   449     0004                     FSR             equ	4	;# 
   450     0005                     PORTA           equ	5	;# 
   451     0006                     PORTB           equ	6	;# 
   452     0007                     PORTC           equ	7	;# 
   453     0008                     PORTD           equ	8	;# 
   454     0009                     PORTE           equ	9	;# 
   455     000A                     PCLATH          equ	10	;# 
   456     000B                     INTCON          equ	11	;# 
   457     000C                     PIR1            equ	12	;# 
   458     000D                     PIR2            equ	13	;# 
   459     000E                     TMR1            equ	14	;# 
   460     000E                     TMR1L           equ	14	;# 
   461     000F                     TMR1H           equ	15	;# 
   462     0010                     T1CON           equ	16	;# 
   463     0011                     TMR2            equ	17	;# 
   464     0012                     T2CON           equ	18	;# 
   465     0013                     SSPBUF          equ	19	;# 
   466     0014                     SSPCON          equ	20	;# 
   467     0015                     CCPR1           equ	21	;# 
   468     0015                     CCPR1L          equ	21	;# 
   469     0016                     CCPR1H          equ	22	;# 
   470     0017                     CCP1CON         equ	23	;# 
   471     0018                     RCSTA           equ	24	;# 
   472     0019                     TXREG           equ	25	;# 
   473     001A                     RCREG           equ	26	;# 
   474     001B                     CCPR2           equ	27	;# 
   475     001B                     CCPR2L          equ	27	;# 
   476     001C                     CCPR2H          equ	28	;# 
   477     001D                     CCP2CON         equ	29	;# 
   478     001E                     ADRESH          equ	30	;# 
   479     001F                     ADCON0          equ	31	;# 
   480     0081                     OPTION_REG      equ	129	;# 
   481     0085                     TRISA           equ	133	;# 
   482     0086                     TRISB           equ	134	;# 
   483     0087                     TRISC           equ	135	;# 
   484     0088                     TRISD           equ	136	;# 
   485     0089                     TRISE           equ	137	;# 
   486     008C                     PIE1            equ	140	;# 
   487     008D                     PIE2            equ	141	;# 
   488     008E                     PCON            equ	142	;# 
   489     0091                     SSPCON2         equ	145	;# 
   490     0092                     PR2             equ	146	;# 
   491     0093                     SSPADD          equ	147	;# 
   492     0094                     SSPSTAT         equ	148	;# 
   493     0098                     TXSTA           equ	152	;# 
   494     0099                     SPBRG           equ	153	;# 
   495     009C                     CMCON           equ	156	;# 
   496     009D                     CVRCON          equ	157	;# 
   497     009E                     ADRESL          equ	158	;# 
   498     009F                     ADCON1          equ	159	;# 
   499     010C                     EEDATA          equ	268	;# 
   500     010D                     EEADR           equ	269	;# 
   501     010E                     EEDATH          equ	270	;# 
   502     010F                     EEADRH          equ	271	;# 
   503     018C                     EECON1          equ	396	;# 
   504     018D                     EECON2          equ	397	;# 
   505                           
   506                           	psect	idataCOMMON
   507     07FD                     __pidataCOMMON:
   508                           
   509                           ;initializer for read_matrix_keypad@once
   510     07FD  3401               	retlw	1
   511                           
   512                           	psect	idataBANK0
   513     07FE                     __pidataBANK0:
   514                           
   515                           ;initializer for _operational_flag
   516     07FE  3401               	retlw	1
   517     0008                     _PORTD          set	8
   518     0061                     _TMR2IF         set	97
   519     0090                     _T2CKPS0        set	144
   520     0091                     _T2CKPS1        set	145
   521     0093                     _TOUTPS0        set	147
   522     0094                     _TOUTPS1        set	148
   523     0095                     _TOUTPS2        set	149
   524     0096                     _TOUTPS3        set	150
   525     0032                     _RB2            set	50
   526     0031                     _RB1            set	49
   527     0030                     _RB0            set	48
   528     0040                     _RD0            set	64
   529     0041                     _RD1            set	65
   530     0042                     _RD2            set	66
   531     0043                     _RD3            set	67
   532     0049                     _RE1            set	73
   533     004A                     _RE2            set	74
   534     0092                     _TMR2ON         set	146
   535     0039                     _RC1            set	57
   536     005F                     _GIE            set	95
   537     005E                     _PEIE           set	94
   538     003A                     _RC2            set	58
   539     0092                     _PR2            set	146
   540     0086                     _TRISB          set	134
   541     0088                     _TRISD          set	136
   542     0461                     _TMR2IE         set	1121
   543     040F                     _nRBPU          set	1039
   544     0449                     _TRISE1         set	1097
   545     044A                     _TRISE2         set	1098
   546     0439                     _TRISC1         set	1081
   547     043A                     _TRISC2         set	1082
   548                           
   549                           	psect	strings
   550     0500                     __pstrings:
   551     0500                     stringtab:
   552     0500                     __stringtab:
   553     0500                     stringcode:	
   554                           ;	String table - string pointers are 1 byte each
   555                           
   556     0500                     stringdir:
   557     0500  3005               	movlw	high stringdir
   558     0501  008A               	movwf	10
   559     0502  0804               	movf	4,w
   560     0503  0A84               	incf	4,f
   561     0504  0782               	addwf	2,f
   562     0505                     __stringbase:
   563     0505  3400               	retlw	0
   564     0506                     __end_of__stringtab:
   565     0506                     STR_10:
   566     0506  342A               	retlw	42	;'*'
   567     0507  343A               	retlw	58	;':'
   568     0508  3443               	retlw	67	;'C'
   569     0509  344C               	retlw	76	;'L'
   570     050A  3445               	retlw	69	;'E'
   571     050B  3441               	retlw	65	;'A'
   572     050C  3452               	retlw	82	;'R'
   573     050D  3420               	retlw	32	;' '
   574     050E  3420               	retlw	32	;' '
   575     050F  3423               	retlw	35	;'#'
   576     0510  343A               	retlw	58	;':'
   577     0511  3445               	retlw	69	;'E'
   578     0512  344E               	retlw	78	;'N'
   579     0513  3454               	retlw	84	;'T'
   580     0514  3445               	retlw	69	;'E'
   581     0515  3452               	retlw	82	;'R'
   582     0516  3400               	retlw	0
   583     0517                     STR_8:
   584     0517  3453               	retlw	83	;'S'
   585     0518  3445               	retlw	69	;'E'
   586     0519  3454               	retlw	84	;'T'
   587     051A  3420               	retlw	32	;' '
   588     051B  3454               	retlw	84	;'T'
   589     051C  3449               	retlw	73	;'I'
   590     051D  344D               	retlw	77	;'M'
   591     051E  3445               	retlw	69	;'E'
   592     051F  3428               	retlw	40	;'('
   593     0520  344D               	retlw	77	;'M'
   594     0521  344D               	retlw	77	;'M'
   595     0522  343A               	retlw	58	;':'
   596     0523  3453               	retlw	83	;'S'
   597     0524  3453               	retlw	83	;'S'
   598     0525  3429               	retlw	41	;')'
   599     0526  3400               	retlw	0
   600     0527                     STR_16:
   601     0527  3445               	retlw	69	;'E'
   602     0528  344E               	retlw	78	;'N'
   603     0529  344A               	retlw	74	;'J'
   604     052A  344F               	retlw	79	;'O'
   605     052B  3459               	retlw	89	;'Y'
   606     052C  3420               	retlw	32	;' '
   607     052D  3459               	retlw	89	;'Y'
   608     052E  344F               	retlw	79	;'O'
   609     052F  3455               	retlw	85	;'U'
   610     0530  3452               	retlw	82	;'R'
   611     0531  3420               	retlw	32	;' '
   612     0532  344D               	retlw	77	;'M'
   613     0533  3445               	retlw	69	;'E'
   614     0534  3441               	retlw	65	;'A'
   615     0535  344C               	retlw	76	;'L'
   616     0536  3400               	retlw	0
   617     0537                     STR_12:
   618     0537  3434               	retlw	52	;'4'
   619     0538  342E               	retlw	46	;'.'
   620     0539  3453               	retlw	83	;'S'
   621     053A  3454               	retlw	84	;'T'
   622     053B  3441               	retlw	65	;'A'
   623     053C  3452               	retlw	82	;'R'
   624     053D  3454               	retlw	84	;'T'
   625     053E  342F               	retlw	47	;'/'
   626     053F  3452               	retlw	82	;'R'
   627     0540  3445               	retlw	69	;'E'
   628     0541  3453               	retlw	83	;'S'
   629     0542  3455               	retlw	85	;'U'
   630     0543  344D               	retlw	77	;'M'
   631     0544  3445               	retlw	69	;'E'
   632     0545  3400               	retlw	0
   633     0546                     STR_3:
   634     0546  344D               	retlw	77	;'M'
   635     0547  3449               	retlw	73	;'I'
   636     0548  3443               	retlw	67	;'C'
   637     0549  3452               	retlw	82	;'R'
   638     054A  344F               	retlw	79	;'O'
   639     054B  3457               	retlw	87	;'W'
   640     054C  3441               	retlw	65	;'A'
   641     054D  3456               	retlw	86	;'V'
   642     054E  3445               	retlw	69	;'E'
   643     054F  3420               	retlw	32	;' '
   644     0550  344F               	retlw	79	;'O'
   645     0551  3456               	retlw	86	;'V'
   646     0552  3445               	retlw	69	;'E'
   647     0553  344E               	retlw	78	;'N'
   648     0554  3400               	retlw	0
   649     0555                     STR_17:
   650     0555  3453               	retlw	83	;'S'
   651     0556  3445               	retlw	69	;'E'
   652     0557  3454               	retlw	84	;'T'
   653     0558  3420               	retlw	32	;' '
   654     0559  3454               	retlw	84	;'T'
   655     055A  3445               	retlw	69	;'E'
   656     055B  344D               	retlw	77	;'M'
   657     055C  3450               	retlw	80	;'P'
   658     055D  3428               	retlw	40	;'('
   659     055E  342A               	retlw	42	;'*'
   660     055F  3443               	retlw	67	;'C'
   661     0560  3429               	retlw	41	;')'
   662     0561  3400               	retlw	0
   663     0562                     STR_6:
   664     0562  3433               	retlw	51	;'3'
   665     0563  342E               	retlw	46	;'.'
   666     0564  3443               	retlw	67	;'C'
   667     0565  344F               	retlw	79	;'O'
   668     0566  344E               	retlw	78	;'N'
   669     0567  3456               	retlw	86	;'V'
   670     0568  3445               	retlw	69	;'E'
   671     0569  3443               	retlw	67	;'C'
   672     056A  3454               	retlw	84	;'T'
   673     056B  3449               	retlw	73	;'I'
   674     056C  344F               	retlw	79	;'O'
   675     056D  344E               	retlw	78	;'N'
   676     056E  3400               	retlw	0
   677     056F                     STR_1:
   678     056F  3450               	retlw	80	;'P'
   679     0570  346F               	retlw	111	;'o'
   680     0571  3477               	retlw	119	;'w'
   681     0572  3465               	retlw	101	;'e'
   682     0573  3472               	retlw	114	;'r'
   683     0574  3420               	retlw	32	;' '
   684     0575  343D               	retlw	61	;'='
   685     0576  3420               	retlw	32	;' '
   686     0577  3439               	retlw	57	;'9'
   687     0578  3430               	retlw	48	;'0'
   688     0579  3430               	retlw	48	;'0'
   689     057A  3457               	retlw	87	;'W'
   690     057B  3400               	retlw	0
   691     057C                     STR_2:
   692     057C  3450               	retlw	80	;'P'
   693     057D  344F               	retlw	79	;'O'
   694     057E  3457               	retlw	87	;'W'
   695     057F  3445               	retlw	69	;'E'
   696     0580  3452               	retlw	82	;'R'
   697     0581  3449               	retlw	73	;'I'
   698     0582  344E               	retlw	78	;'N'
   699     0583  3447               	retlw	71	;'G'
   700     0584  3420               	retlw	32	;' '
   701     0585  344F               	retlw	79	;'O'
   702     0586  344E               	retlw	78	;'N'
   703     0587  3400               	retlw	0
   704     0588                     STR_20:
   705     0588  3450               	retlw	80	;'P'
   706     0589  3472               	retlw	114	;'r'
   707     058A  3465               	retlw	101	;'e'
   708     058B  342D               	retlw	45	;'-'
   709     058C  3448               	retlw	72	;'H'
   710     058D  3465               	retlw	101	;'e'
   711     058E  3461               	retlw	97	;'a'
   712     058F  3474               	retlw	116	;'t'
   713     0590  3469               	retlw	105	;'i'
   714     0591  346E               	retlw	110	;'n'
   715     0592  3467               	retlw	103	;'g'
   716     0593  3400               	retlw	0
   717     0594                     STR_21:
   718     0594  3454               	retlw	84	;'T'
   719     0595  3469               	retlw	105	;'i'
   720     0596  346D               	retlw	109	;'m'
   721     0597  3465               	retlw	101	;'e'
   722     0598  3420               	retlw	32	;' '
   723     0599  3452               	retlw	82	;'R'
   724     059A  3465               	retlw	101	;'e'
   725     059B  346D               	retlw	109	;'m'
   726     059C  3420               	retlw	32	;' '
   727     059D  343A               	retlw	58	;':'
   728     059E  3400               	retlw	0
   729     059F                     STR_11:
   730     059F  3454               	retlw	84	;'T'
   731     05A0  3449               	retlw	73	;'I'
   732     05A1  344D               	retlw	77	;'M'
   733     05A2  3445               	retlw	69	;'E'
   734     05A3  3420               	retlw	32	;' '
   735     05A4  343A               	retlw	58	;':'
   736     05A5  3420               	retlw	32	;' '
   737     05A6  3400               	retlw	0
   738     05A7                     STR_13:
   739     05A7  3435               	retlw	53	;'5'
   740     05A8  342E               	retlw	46	;'.'
   741     05A9  3450               	retlw	80	;'P'
   742     05AA  3441               	retlw	65	;'A'
   743     05AB  3455               	retlw	85	;'U'
   744     05AC  3453               	retlw	83	;'S'
   745     05AD  3445               	retlw	69	;'E'
   746     05AE  3400               	retlw	0
   747     05AF                     STR_5:
   748     05AF  3432               	retlw	50	;'2'
   749     05B0  342E               	retlw	46	;'.'
   750     05B1  3447               	retlw	71	;'G'
   751     05B2  3452               	retlw	82	;'R'
   752     05B3  3449               	retlw	73	;'I'
   753     05B4  344C               	retlw	76	;'L'
   754     05B5  344C               	retlw	76	;'L'
   755     05B6  3400               	retlw	0
   756     05B7                     STR_4:
   757     05B7  3431               	retlw	49	;'1'
   758     05B8  342E               	retlw	46	;'.'
   759     05B9  344D               	retlw	77	;'M'
   760     05BA  3449               	retlw	73	;'I'
   761     05BB  3443               	retlw	67	;'C'
   762     05BC  3452               	retlw	82	;'R'
   763     05BD  344F               	retlw	79	;'O'
   764     05BE  3400               	retlw	0
   765     05BF                     STR_15:
   766     05BF  3454               	retlw	84	;'T'
   767     05C0  3449               	retlw	73	;'I'
   768     05C1  344D               	retlw	77	;'M'
   769     05C2  3445               	retlw	69	;'E'
   770     05C3  3420               	retlw	32	;' '
   771     05C4  3455               	retlw	85	;'U'
   772     05C5  3450               	retlw	80	;'P'
   773     05C6  3400               	retlw	0
   774     05C7                     STR_7:
   775     05C7  3434               	retlw	52	;'4'
   776     05C8  342E               	retlw	46	;'.'
   777     05C9  3453               	retlw	83	;'S'
   778     05CA  3454               	retlw	84	;'T'
   779     05CB  3441               	retlw	65	;'A'
   780     05CC  3452               	retlw	82	;'R'
   781     05CD  3454               	retlw	84	;'T'
   782     05CE  3400               	retlw	0
   783     05CF                     STR_9:
   784     05CF  3454               	retlw	84	;'T'
   785     05D0  3449               	retlw	73	;'I'
   786     05D1  344D               	retlw	77	;'M'
   787     05D2  3445               	retlw	69	;'E'
   788     05D3  3420               	retlw	32	;' '
   789     05D4  343A               	retlw	58	;':'
   790     05D5  3400               	retlw	0
   791     05D6                     STR_18:
   792     05D6  3454               	retlw	84	;'T'
   793     05D7  3445               	retlw	69	;'E'
   794     05D8  344D               	retlw	77	;'M'
   795     05D9  3450               	retlw	80	;'P'
   796     05DA  3420               	retlw	32	;' '
   797     05DB  343A               	retlw	58	;':'
   798     05DC  3400               	retlw	0
   799     05DD                     STR_14:
   800     05DD  3436               	retlw	54	;'6'
   801     05DE  342E               	retlw	46	;'.'
   802     05DF  3453               	retlw	83	;'S'
   803     05E0  3454               	retlw	84	;'T'
   804     05E1  344F               	retlw	79	;'O'
   805     05E2  3450               	retlw	80	;'P'
   806     05E3  3400               	retlw	0
   807     05E4                     STR_22:
   808     05E4  3453               	retlw	83	;'S'
   809     05E5  3465               	retlw	101	;'e'
   810     05E6  3463               	retlw	99	;'c'
   811     05E7  3420               	retlw	32	;' '
   812     05E8  343A               	retlw	58	;':'
   813     05E9  3400               	retlw	0
   814     0506                     STR_19          equ	STR_10
   815                           
   816                           	psect	cinit
   817     000F                     start_initialization:	
   818                           ; #config settings
   819                           
   820     000F                     __initialization:
   821                           
   822                           ; Initialize objects allocated to BANK0
   823     000F  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   824     0014  00BF               	movwf	__pdataBANK0& (0+127)
   825                           
   826                           ; Initialize objects allocated to COMMON
   827     0015  120A  118A  27FD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   828     001A  00FB               	movwf	__pdataCOMMON& (0+127)
   829                           
   830                           ; Clear objects allocated to BANK0
   831     001B  01B6               	clrf	__pbssBANK0& (0+127)
   832     001C  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   833     001D  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   834     001E  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   835     001F  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   836     0020  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   837     0021  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   838     0022  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   839     0023  01BE               	clrf	(__pbssBANK0+8)& (0+127)
   840                           
   841                           ; Clear objects allocated to COMMON
   842     0024  01F9               	clrf	__pbssCOMMON& (0+127)
   843     0025  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   844     0026                     end_of_initialization:	
   845                           ;End of C runtime variable initialization code
   846                           
   847     0026                     __end_of__initialization:
   848     0026  0183               	clrf	3
   849     0027  120A  118A  2AEF   	ljmp	_main	;jump to C main() function
   850                           
   851                           	psect	bssCOMMON
   852     0079                     __pbssCOMMON:
   853     0079                     _count:
   854     0079                     	ds	2
   855                           
   856                           	psect	dataCOMMON
   857     007B                     __pdataCOMMON:
   858     007B                     read_matrix_keypad@once:
   859     007B                     	ds	1
   860                           
   861                           	psect	bssBANK0
   862     0036                     __pbssBANK0:
   863     0036                     set_temp@temp:
   864     0036                     	ds	2
   865     0038                     set_temp@key_count:
   866     0038                     	ds	1
   867     0039                     set_time@key_count:
   868     0039                     	ds	1
   869     003A                     set_time@blink_pos:
   870     003A                     	ds	1
   871     003B                     _pre_heat_time:
   872     003B                     	ds	1
   873     003C                     _reset_flag:
   874     003C                     	ds	1
   875     003D                     _min:
   876     003D                     	ds	1
   877     003E                     _sec:
   878     003E                     	ds	1
   879                           
   880                           	psect	dataBANK0
   881     003F                     __pdataBANK0:
   882     003F                     _operational_flag:
   883     003F                     	ds	1
   884                           
   885                           	psect	cstackCOMMON
   886     0070                     __pcstackCOMMON:
   887     0070                     ?_init_clcd:
   888     0070                     ?_init_matrix_keypad:	
   889                           ; 1 bytes @ 0x0
   890                           
   891     0070                     ?_init_timer2:	
   892                           ; 1 bytes @ 0x0
   893                           
   894     0070                     ?_read_matrix_keypad:	
   895                           ; 1 bytes @ 0x0
   896                           
   897     0070                     ?_clear_screen:	
   898                           ; 1 bytes @ 0x0
   899                           
   900     0070                     ?_power_on_screen:	
   901                           ; 1 bytes @ 0x0
   902                           
   903     0070                     ?_display_menu_screen:	
   904                           ; 1 bytes @ 0x0
   905                           
   906     0070                     ?_time_display:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     ?_heat_food:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     ?_init_config:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     ?_main:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     ?_init_display_controller:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ?_scan_keypad:	
   922                           ; 1 bytes @ 0x0
   923                           
   924     0070                     ?_isr:	
   925                           ; 1 bytes @ 0x0
   926                           
   927     0070                     ??_isr:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 1 bytes @ 0x0
   932     0070                     	ds	2
   933     0072                     ?_clcd_write:
   934     0072                     ?___bmul:	
   935                           ; 1 bytes @ 0x2
   936                           
   937     0072                     ?___wmul:	
   938                           ; 1 bytes @ 0x2
   939                           
   940     0072                     ?___awdiv:	
   941                           ; 2 bytes @ 0x2
   942                           
   943     0072                     ?___lwdiv:	
   944                           ; 2 bytes @ 0x2
   945                           
   946     0072                     clcd_write@mode:	
   947                           ; 2 bytes @ 0x2
   948                           
   949     0072                     ___bmul@multiplicand:	
   950                           ; 1 bytes @ 0x2
   951                           
   952     0072                     scan_keypad@i:	
   953                           ; 1 bytes @ 0x2
   954                           
   955     0072                     ___wmul@multiplier:	
   956                           ; 2 bytes @ 0x2
   957                           
   958     0072                     ___awdiv@divisor:	
   959                           ; 2 bytes @ 0x2
   960                           
   961     0072                     ___lwdiv@divisor:	
   962                           ; 2 bytes @ 0x2
   963                           
   964     0072                     ??_init_matrix_keypad:	
   965                           ; 2 bytes @ 0x2
   966                           
   967     0072                     ??_init_timer2:	
   968                           ; 1 bytes @ 0x2
   969                           
   970     0072                     ??_heat_food:	
   971                           ; 1 bytes @ 0x2
   972                           
   973     0072                     ??_scan_keypad:	
   974                           ; 1 bytes @ 0x2
   975                           
   976                           
   977                           ; 1 bytes @ 0x2
   978     0072                     	ds	1
   979     0073                     ___bmul@product:
   980     0073                     ??_clcd_write:	
   981                           ; 1 bytes @ 0x3
   982                           
   983     0073                     ??___bmul:	
   984                           ; 1 bytes @ 0x3
   985                           
   986                           
   987                           ; 1 bytes @ 0x3
   988     0073                     	ds	1
   989     0074                     read_matrix_keypad@mode:
   990     0074                     ___bmul@multiplier:	
   991                           ; 1 bytes @ 0x4
   992                           
   993     0074                     ___wmul@multiplicand:	
   994                           ; 1 bytes @ 0x4
   995                           
   996     0074                     ___awdiv@dividend:	
   997                           ; 2 bytes @ 0x4
   998                           
   999     0074                     ___lwdiv@dividend:	
  1000                           ; 2 bytes @ 0x4
  1001                           
  1002     0074                     ??_read_matrix_keypad:	
  1003                           ; 2 bytes @ 0x4
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x4
  1007     0074                     	ds	1
  1008     0075                     clcd_write@byte:
  1009     0075                     read_matrix_keypad@key:	
  1010                           ; 1 bytes @ 0x5
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x5
  1014     0075                     	ds	1
  1015     0076                     ?_clcd_print:
  1016     0076                     clcd_print@str:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019     0076                     ___awmod@counter:	
  1020                           ; 1 bytes @ 0x6
  1021                           
  1022     0076                     ___wmul@product:	
  1023                           ; 1 bytes @ 0x6
  1024                           
  1025     0076                     ___lwdiv@quotient:	
  1026                           ; 2 bytes @ 0x6
  1027                           
  1028     0076                     ??_clear_screen:	
  1029                           ; 2 bytes @ 0x6
  1030                           
  1031     0076                     ??_init_display_controller:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034     0076                     ??___wmul:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037     0076                     ??___awdiv:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040     0076                     ??___awmod:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043     0076                     ??___lwdiv:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x6
  1048     0076                     	ds	1
  1049     0077                     clcd_print@addr:
  1050     0077                     ___awmod@sign:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055     0077                     	ds	1
  1056     0078                     ___lwdiv@counter:
  1057     0078                     ??_init_clcd:	
  1058                           ; 1 bytes @ 0x8
  1059                           
  1060     0078                     ??_clcd_print:	
  1061                           ; 1 bytes @ 0x8
  1062                           
  1063     0078                     ??_display_menu_screen:	
  1064                           ; 1 bytes @ 0x8
  1065                           
  1066     0078                     ??_init_config:	
  1067                           ; 1 bytes @ 0x8
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x8
  1071     0078                     	ds	1
  1072     0079                     ??_clcd_putch:
  1073     0079                     ??___lwmod:	
  1074                           ; 1 bytes @ 0x9
  1075                           
  1076                           
  1077                           	psect	cstackBANK0
  1078     0020                     __pcstackBANK0:	
  1079                           ; 1 bytes @ 0x9
  1080                           
  1081     0020                     ?___lwmod:
  1082     0020                     ___awdiv@counter:	
  1083                           ; 2 bytes @ 0x0
  1084                           
  1085     0020                     ___lwmod@divisor:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x0
  1090     0020                     	ds	1
  1091     0021                     ___awdiv@sign:
  1092                           
  1093                           ; 1 bytes @ 0x1
  1094     0021                     	ds	1
  1095     0022                     ___awdiv@quotient:
  1096     0022                     ___lwmod@dividend:	
  1097                           ; 2 bytes @ 0x2
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x2
  1101     0022                     	ds	2
  1102     0024                     ?___awmod:
  1103     0024                     ___lwmod@counter:	
  1104                           ; 2 bytes @ 0x4
  1105                           
  1106     0024                     ___awmod@divisor:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x4
  1111     0024                     	ds	2
  1112     0026                     ___awmod@dividend:
  1113                           
  1114                           ; 2 bytes @ 0x6
  1115     0026                     	ds	2
  1116     0028                     ?_clcd_putch:
  1117     0028                     clcd_putch@addr:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120                           
  1121                           ; 1 bytes @ 0x8
  1122     0028                     	ds	1
  1123     0029                     clcd_putch@data:
  1124                           
  1125                           ; 1 bytes @ 0x9
  1126     0029                     	ds	1
  1127     002A                     ?_set_time:
  1128     002A                     ?_set_temp:	
  1129                           ; 1 bytes @ 0xA
  1130                           
  1131     002A                     set_time@reset_flag:	
  1132                           ; 1 bytes @ 0xA
  1133                           
  1134     002A                     set_temp@reset_flag:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137     002A                     ??_power_on_screen:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140     002A                     ??_time_display:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143                           
  1144                           ; 1 bytes @ 0xA
  1145     002A                     	ds	1
  1146     002B                     ??_set_time:
  1147     002B                     ??_set_temp:	
  1148                           ; 1 bytes @ 0xB
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0xB
  1152     002B                     	ds	2
  1153     002D                     set_time@wait:
  1154     002D                     set_temp@wait:	
  1155                           ; 1 bytes @ 0xD
  1156                           
  1157     002D                     power_on_screen@i:	
  1158                           ; 1 bytes @ 0xD
  1159                           
  1160                           
  1161                           ; 2 bytes @ 0xD
  1162     002D                     	ds	1
  1163     002E                     set_time@key:
  1164     002E                     set_temp@key:	
  1165                           ; 1 bytes @ 0xE
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0xE
  1169     002E                     	ds	1
  1170     002F                     power_on_screen@j:
  1171                           
  1172                           ; 2 bytes @ 0xF
  1173     002F                     	ds	2
  1174     0031                     ??_main:
  1175                           
  1176                           ; 1 bytes @ 0x11
  1177     0031                     	ds	3
  1178     0034                     main@start_mode:
  1179                           
  1180                           ; 1 bytes @ 0x14
  1181     0034                     	ds	1
  1182     0035                     main@key:
  1183                           
  1184                           ; 1 bytes @ 0x15
  1185     0035                     	ds	1
  1186                           
  1187                           	psect	maintext
  1188     02EF                     __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 39 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  key             1   21[BANK0 ] unsigned char 
  1199 ;;  start_mode      1   20[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : B00/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       2       0       0       0
  1211 ;;      Temps:          0       3       0       0       0
  1212 ;;      Totals:         0       5       0       0       0
  1213 ;;Total ram usage:        5 bytes
  1214 ;; Hardware stack levels required when called: 5
  1215 ;; This function calls:
  1216 ;;		_clcd_print
  1217 ;;		_clear_screen
  1218 ;;		_display_menu_screen
  1219 ;;		_heat_food
  1220 ;;		_init_config
  1221 ;;		_power_on_screen
  1222 ;;		_read_matrix_keypad
  1223 ;;		_set_temp
  1224 ;;		_set_time
  1225 ;;		_time_display
  1226 ;; This function is called by:
  1227 ;;		Startup code after reset
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231     02EF                     _main:	
  1232                           ;psect for function _main
  1233                           
  1234     02EF                     l2740:	
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1237                           
  1238                           
  1239                           ;main.c: 40:                 clear_screen();;main.c: 41:                 reset_flag=0xFF
      +                          ;
  1240     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1241     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1242     02F1  01B4               	clrf	main@start_mode
  1243     02F2                     l2742:
  1244                           
  1245                           ;main.c: 42:                 }
  1246     02F2  120A  158A  2650  120A  118A  	fcall	_init_config
  1247     02F7                     l2744:
  1248                           
  1249                           ;main.c: 45:                   start_mode=0;
  1250     02F7  3001               	movlw	1
  1251     02F8  120A  118A  24DD  120A  118A  	fcall	_read_matrix_keypad
  1252     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1253     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1254     02FF  00B5               	movwf	main@key
  1255     0300                     l2746:
  1256                           
  1257                           ;main.c: 47:                   reset_flag=0xFF;
  1258     0300  3002               	movlw	2
  1259     0301  063F               	xorwf	_operational_flag,w
  1260     0302  1D03               	btfss	3,2
  1261     0303  2B05               	goto	u2771
  1262     0304  2B06               	goto	u2770
  1263     0305                     u2771:
  1264     0305  2B6A               	goto	l2794
  1265     0306                     u2770:
  1266     0306                     l2748:
  1267                           
  1268                           ;main.c: 48:             };main.c: 51:                   start_mode=0;
  1269     0306  0335               	decf	main@key,w
  1270     0307  1D03               	btfss	3,2
  1271     0308  2B0A               	goto	u2781
  1272     0309  2B0B               	goto	u2780
  1273     030A                     u2781:
  1274     030A  2B36               	goto	l2764
  1275     030B                     u2780:
  1276     030B                     l2750:
  1277                           
  1278                           ;main.c: 52:                   operational_flag= 0x13;
  1279     030B  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1280     0310                     l2752:
  1281                           
  1282                           ;main.c: 53:                   reset_flag=0xFF;
  1283     0310  1283               	bcf	3,5	;RP0=0, select bank0
  1284     0311  1303               	bcf	3,6	;RP1=0, select bank0
  1285     0312  01B4               	clrf	main@start_mode
  1286     0313                     l2754:
  1287                           
  1288                           ;main.c: 54:             }
  1289     0313  3011               	movlw	17
  1290     0314  00BF               	movwf	_operational_flag
  1291     0315                     l2756:
  1292                           
  1293                           ;main.c: 55:          else if(key==4)
  1294     0315  306A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1295     0316  00F6               	movwf	clcd_print@str
  1296     0317  30C0               	movlw	192
  1297     0318  00F7               	movwf	clcd_print@addr
  1298     0319  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1299     031E                     l2758:
  1300                           
  1301                           ;main.c: 56:             { clear_screen();
  1302     031E  3033               	movlw	51
  1303     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1304     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1305     0321  00B3               	movwf	??_main+2
  1306     0322  30BB               	movlw	187
  1307     0323  00B2               	movwf	??_main+1
  1308     0324  30DF               	movlw	223
  1309     0325  00B1               	movwf	??_main
  1310     0326                     u2907:
  1311     0326  0BB1               	decfsz	??_main,f
  1312     0327  2B26               	goto	u2907
  1313     0328  0BB2               	decfsz	??_main+1,f
  1314     0329  2B26               	goto	u2907
  1315     032A  0BB3               	decfsz	??_main+2,f
  1316     032B  2B26               	goto	u2907
  1317     032C                     l2760:
  1318                           
  1319                           ;main.c: 57:                   operational_flag= 0x14 ;
  1320     032C  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1321     0331                     l2762:
  1322                           
  1323                           ;main.c: 58:                   start_mode=1;
  1324     0331  30FF               	movlw	255
  1325     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0334  00BC               	movwf	_reset_flag
  1328                           
  1329                           ;main.c: 59:                    reset_flag=0xFF;
  1330     0335  2B6A               	goto	l2794
  1331     0336                     l2764:
  1332     0336  3002               	movlw	2
  1333     0337  0635               	xorwf	main@key,w
  1334     0338  1D03               	btfss	3,2
  1335     0339  2B3B               	goto	u2791
  1336     033A  2B3C               	goto	u2790
  1337     033B                     u2791:
  1338     033B  2B47               	goto	l2774
  1339     033C                     u2790:
  1340     033C                     l2766:
  1341                           
  1342                           ;main.c: 61: 
  1343     033C  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1344     0341                     l2768:
  1345                           
  1346                           ;main.c: 62:         }
  1347     0341  1283               	bcf	3,5	;RP0=0, select bank0
  1348     0342  1303               	bcf	3,6	;RP1=0, select bank0
  1349     0343  01B4               	clrf	main@start_mode
  1350     0344                     l2770:
  1351                           
  1352                           ;main.c: 63: 
  1353     0344  3012               	movlw	18
  1354     0345  00BF               	movwf	_operational_flag
  1355     0346  2B31               	goto	l2762
  1356     0347                     l2774:
  1357     0347  3003               	movlw	3
  1358     0348  0635               	xorwf	main@key,w
  1359     0349  1D03               	btfss	3,2
  1360     034A  2B4C               	goto	u2801
  1361     034B  2B4D               	goto	u2800
  1362     034C                     u2801:
  1363     034C  2B58               	goto	l2784
  1364     034D                     u2800:
  1365     034D                     l2776:
  1366                           
  1367                           ;main.c: 67:                 if(start_mode)
  1368     034D  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1369     0352                     l2778:
  1370                           
  1371                           ;main.c: 68:                 {sec=sec+30;
  1372     0352  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0353  1303               	bcf	3,6	;RP1=0, select bank0
  1374     0354  01B4               	clrf	main@start_mode
  1375     0355                     l2780:
  1376                           
  1377                           ;main.c: 69:                 if(sec>59)
  1378     0355  3013               	movlw	19
  1379     0356  00BF               	movwf	_operational_flag
  1380     0357  2B31               	goto	l2762
  1381     0358                     l2784:
  1382     0358  3004               	movlw	4
  1383     0359  0635               	xorwf	main@key,w
  1384     035A  1D03               	btfss	3,2
  1385     035B  2B5D               	goto	u2811
  1386     035C  2B5E               	goto	u2810
  1387     035D                     u2811:
  1388     035D  2B6A               	goto	l59
  1389     035E                     u2810:
  1390     035E                     l2786:
  1391                           
  1392                           ;main.c: 73: 
  1393     035E  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1394     0363                     l2788:
  1395                           
  1396                           ;main.c: 74: 
  1397     0363  3014               	movlw	20
  1398     0364  1283               	bcf	3,5	;RP0=0, select bank0
  1399     0365  1303               	bcf	3,6	;RP1=0, select bank0
  1400     0366  00BF               	movwf	_operational_flag
  1401     0367                     l2790:
  1402                           
  1403                           ;main.c: 75:                 }
  1404     0367  3001               	movlw	1
  1405     0368  00B4               	movwf	main@start_mode
  1406     0369  2B31               	goto	l2762
  1407     036A                     l59:
  1408     036A                     l2794:
  1409                           
  1410                           ;main.c: 81:           else if(key==6)
  1411     036A  30DD               	movlw	221
  1412     036B  063F               	xorwf	_operational_flag,w
  1413     036C  1D03               	btfss	3,2
  1414     036D  2B6F               	goto	u2821
  1415     036E  2B70               	goto	u2820
  1416     036F                     u2821:
  1417     036F  2B9C               	goto	l2814
  1418     0370                     u2820:
  1419     0370                     l2796:
  1420                           
  1421                           ;main.c: 82:             {
  1422     0370  3004               	movlw	4
  1423     0371  0635               	xorwf	main@key,w
  1424     0372  1D03               	btfss	3,2
  1425     0373  2B75               	goto	u2831
  1426     0374  2B76               	goto	u2830
  1427     0375                     u2831:
  1428     0375  2B8A               	goto	l2806
  1429     0376                     u2830:
  1430     0376                     l2798:
  1431                           
  1432                           ;main.c: 83:                      operational_flag= 0xBB;;main.c: 84:             }
  1433     0376  0834               	movf	main@start_mode,w
  1434     0377  1903               	btfsc	3,2
  1435     0378  2B7A               	goto	u2841
  1436     0379  2B7B               	goto	u2840
  1437     037A                     u2841:
  1438     037A  2BF9               	goto	l2844
  1439     037B                     u2840:
  1440     037B                     l2800:
  1441                           
  1442                           ;main.c: 85: 
  1443     037B  083E               	movf	_sec,w
  1444     037C  3E1E               	addlw	30
  1445     037D  00BE               	movwf	_sec
  1446     037E                     l2802:
  1447                           
  1448                           ;main.c: 86: 
  1449     037E  303C               	movlw	60
  1450     037F  023E               	subwf	_sec,w
  1451     0380  1C03               	skipc
  1452     0381  2B83               	goto	u2851
  1453     0382  2B84               	goto	u2850
  1454     0383                     u2851:
  1455     0383  2BAD               	goto	l73
  1456     0384                     u2850:
  1457     0384                     l2804:
  1458                           
  1459                           ;main.c: 87: 
  1460     0384  3001               	movlw	1
  1461     0385  07BD               	addwf	_min,f
  1462                           
  1463                           ;main.c: 88: 
  1464     0386  083E               	movf	_sec,w
  1465     0387  3EC4               	addlw	196
  1466     0388  00BE               	movwf	_sec
  1467     0389  2BF9               	goto	l2844
  1468     038A                     l2806:
  1469     038A  3005               	movlw	5
  1470     038B  0635               	xorwf	main@key,w
  1471     038C  1D03               	btfss	3,2
  1472     038D  2B8F               	goto	u2861
  1473     038E  2B90               	goto	u2860
  1474     038F                     u2861:
  1475     038F  2B93               	goto	l2810
  1476     0390                     u2860:
  1477     0390                     l2808:
  1478                           
  1479                           ;main.c: 95:         { RC2=1;
  1480     0390  30CC               	movlw	204
  1481     0391  00BF               	movwf	_operational_flag
  1482                           
  1483                           ;main.c: 97:             operational_flag=0xDD;
  1484     0392  2BF9               	goto	l2844
  1485     0393                     l2810:
  1486     0393  3006               	movlw	6
  1487     0394  0635               	xorwf	main@key,w
  1488     0395  1D03               	btfss	3,2
  1489     0396  2B98               	goto	u2871
  1490     0397  2B99               	goto	u2870
  1491     0398                     u2871:
  1492     0398  2BAD               	goto	l73
  1493     0399                     u2870:
  1494     0399                     l2812:
  1495                           
  1496                           ;main.c: 99:         };main.c: 100: 
  1497     0399  30BB               	movlw	187
  1498     039A  00BF               	movwf	_operational_flag
  1499     039B  2BF9               	goto	l2844
  1500     039C                     l2814:
  1501     039C  30CC               	movlw	204
  1502     039D  063F               	xorwf	_operational_flag,w
  1503     039E  1D03               	btfss	3,2
  1504     039F  2BA1               	goto	u2881
  1505     03A0  2BA2               	goto	u2880
  1506     03A1                     u2881:
  1507     03A1  2BF9               	goto	l2844
  1508     03A2                     u2880:
  1509     03A2                     l2816:
  1510                           
  1511                           ;main.c: 109: ;main.c: 111: 
  1512     03A2  3004               	movlw	4
  1513     03A3  0635               	xorwf	main@key,w
  1514     03A4  1D03               	btfss	3,2
  1515     03A5  2BA7               	goto	u2891
  1516     03A6  2BA8               	goto	u2890
  1517     03A7                     u2891:
  1518     03A7  2BAD               	goto	l73
  1519     03A8                     u2890:
  1520     03A8                     l2818:
  1521                           
  1522                           ;main.c: 112:                                     display_menu_screen();
  1523     03A8  1507               	bsf	7,2	;volatile
  1524                           
  1525                           ;main.c: 113:                                     break;
  1526     03A9  1512               	bsf	18,2	;volatile
  1527                           
  1528                           ;main.c: 114: 
  1529     03AA  30DD               	movlw	221
  1530     03AB  00BF               	movwf	_operational_flag
  1531     03AC  2BF9               	goto	l2844
  1532     03AD                     l73:
  1533                           
  1534                           ;main.c: 119: 
  1535     03AD  2BF9               	goto	l2844
  1536     03AE                     l2820:
  1537                           
  1538                           ;main.c: 122: 
  1539     03AE  120A  118A  2480  120A  118A  	fcall	_power_on_screen
  1540     03B3                     l2822:
  1541                           
  1542                           ;main.c: 123: 
  1543     03B3  3002               	movlw	2
  1544     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1545     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1546     03B6  00BF               	movwf	_operational_flag
  1547     03B7                     l2824:
  1548                           
  1549                           ;main.c: 124:                                 break;
  1550     03B7  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1551                           
  1552                           ;main.c: 125:             case 0xDD :
  1553     03BC  2C16               	goto	l2846
  1554     03BD                     l2826:
  1555                           
  1556                           ;main.c: 129:             case 0xCC:
  1557     03BD  120A  158A  2693  120A  118A  	fcall	_display_menu_screen
  1558                           
  1559                           ;main.c: 130: 
  1560     03C2  2C16               	goto	l2846
  1561     03C3                     l2828:
  1562                           
  1563                           ;main.c: 135:             case 0xBB :
  1564     03C3  083C               	movf	_reset_flag,w
  1565     03C4  00AA               	movwf	set_time@reset_flag
  1566     03C5  0835               	movf	main@key,w
  1567     03C6  120A  118A  21B7  120A  118A  	fcall	_set_time
  1568                           
  1569                           ;main.c: 141: 
  1570     03CB  2C16               	goto	l2846
  1571     03CC                     l2830:
  1572                           
  1573                           ;main.c: 143: 
  1574     03CC  120A  118A  25EA  120A  118A  	fcall	_time_display
  1575                           
  1576                           ;main.c: 144: 
  1577     03D1  2C16               	goto	l2846
  1578     03D2                     l82:	
  1579                           ;main.c: 146:                    set_time(key,reset_flag);
  1580                           
  1581                           
  1582                           ;main.c: 148: 
  1583     03D2  1107               	bcf	7,2	;volatile
  1584                           
  1585                           ;main.c: 149:             case 0x13 :
  1586     03D3  1112               	bcf	18,2	;volatile
  1587                           
  1588                           ;main.c: 150: 
  1589     03D4  2C16               	goto	l2846
  1590     03D5                     l83:	
  1591                           ;main.c: 152:                 break;
  1592                           
  1593                           
  1594                           ;main.c: 153: 
  1595     03D5  1107               	bcf	7,2	;volatile
  1596                           
  1597                           ;main.c: 154:             case 0x14 :
  1598     03D6  1112               	bcf	18,2	;volatile
  1599     03D7                     l2832:
  1600                           
  1601                           ;main.c: 155: 
  1602     03D7  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1603     03DC                     l2834:
  1604                           
  1605                           ;main.c: 156:                 heat_food();
  1606     03DC  3002               	movlw	2
  1607     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1608     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1609     03DF  00BF               	movwf	_operational_flag
  1610                           
  1611                           ;main.c: 157:                 break;
  1612     03E0  2C16               	goto	l2846
  1613     03E1                     l2836:
  1614                           
  1615                           ;main.c: 163:         }
  1616     03E1  083C               	movf	_reset_flag,w
  1617     03E2  00AA               	movwf	set_time@reset_flag
  1618     03E3  0835               	movf	main@key,w
  1619     03E4  120A  118A  21B7  120A  118A  	fcall	_set_time
  1620                           
  1621                           ;main.c: 164: 
  1622     03E9  2C16               	goto	l2846
  1623     03EA                     l2838:
  1624                           
  1625                           ;main.c: 168: }
  1626     03EA  083C               	movf	_reset_flag,w
  1627     03EB  00AA               	movwf	set_temp@reset_flag
  1628     03EC  0835               	movf	main@key,w
  1629     03ED  120A  118A  202A  120A  118A  	fcall	_set_temp
  1630     03F2  2C16               	goto	l2846
  1631     03F3                     l2840:
  1632     03F3  120A  158A  25DC  120A  118A  	fcall	_heat_food
  1633     03F8  2C16               	goto	l2846
  1634     03F9                     l2844:
  1635     03F9  083F               	movf	_operational_flag,w
  1636                           
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 9, Range of values is 1 to 221
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           28    15 (average)
  1642                           ; jumptable            263     9 (fixed)
  1643                           ;	Chosen strategy is simple_byte
  1644     03FA  3A01               	xorlw	1	; case 1
  1645     03FB  1903               	skipnz
  1646     03FC  2BAE               	goto	l2820
  1647     03FD  3A03               	xorlw	3	; case 2
  1648     03FE  1903               	skipnz
  1649     03FF  2BBD               	goto	l2826
  1650     0400  3A13               	xorlw	19	; case 17
  1651     0401  1903               	skipnz
  1652     0402  2BC3               	goto	l2828
  1653     0403  3A03               	xorlw	3	; case 18
  1654     0404  1903               	skipnz
  1655     0405  2BE1               	goto	l2836
  1656     0406  3A01               	xorlw	1	; case 19
  1657     0407  1903               	skipnz
  1658     0408  2BEA               	goto	l2838
  1659     0409  3A07               	xorlw	7	; case 20
  1660     040A  1903               	skipnz
  1661     040B  2BF3               	goto	l2840
  1662     040C  3AAF               	xorlw	175	; case 187
  1663     040D  1903               	skipnz
  1664     040E  2BD5               	goto	l83
  1665     040F  3A77               	xorlw	119	; case 204
  1666     0410  1903               	skipnz
  1667     0411  2BD2               	goto	l82
  1668     0412  3A11               	xorlw	17	; case 221
  1669     0413  1903               	skipnz
  1670     0414  2BCC               	goto	l2830
  1671     0415  2C16               	goto	l2846
  1672     0416                     l2846:
  1673     0416  1283               	bcf	3,5	;RP0=0, select bank0
  1674     0417  1303               	bcf	3,6	;RP1=0, select bank0
  1675     0418  01BC               	clrf	_reset_flag
  1676     0419  2AF7               	goto	l2744
  1677     041A  120A  118A  280C   	ljmp	start
  1678     041D                     __end_of_main:
  1679                           
  1680                           	psect	text1
  1681     05EA                     __ptext1:	
  1682 ;; *************** function _time_display *****************
  1683 ;; Defined at:
  1684 ;;		line 129 in file "micro.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          0       3       0       0       0
  1701 ;;      Totals:         0       3       0       0       0
  1702 ;;Total ram usage:        3 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 3
  1705 ;; This function calls:
  1706 ;;		___awdiv
  1707 ;;		___awmod
  1708 ;;		_clcd_print
  1709 ;;		_clcd_putch
  1710 ;;		_clear_screen
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716     05EA                     _time_display:	
  1717                           ;psect for function _time_display
  1718                           
  1719     05EA                     l2638:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _time_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1722                           
  1723                           
  1724                           ;micro.c: 132:     clcd_print("TIME : ",(0x80 + 1));
  1725     05EA  309A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1726     05EB  00F6               	movwf	clcd_print@str
  1727     05EC  3081               	movlw	129
  1728     05ED  00F7               	movwf	clcd_print@addr
  1729     05EE  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1730     05F3                     l2640:
  1731                           
  1732                           ;micro.c: 133:    clcd_putch((sec/10+'0'),(0x80 + 12));
  1733     05F3  308C               	movlw	140
  1734     05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1735     05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1736     05F6  00A8               	movwf	clcd_putch@addr
  1737     05F7  300A               	movlw	10
  1738     05F8  00F2               	movwf	___awdiv@divisor
  1739     05F9  3000               	movlw	0
  1740     05FA  00F3               	movwf	___awdiv@divisor+1
  1741     05FB  083E               	movf	_sec,w
  1742     05FC  00AA               	movwf	??_time_display
  1743     05FD  01AB               	clrf	??_time_display+1
  1744     05FE  082A               	movf	??_time_display,w
  1745     05FF  00F4               	movwf	___awdiv@dividend
  1746     0600  082B               	movf	??_time_display+1,w
  1747     0601  00F5               	movwf	___awdiv@dividend+1
  1748     0602  120A  118A  2773  120A  118A  	fcall	___awdiv
  1749     0607  0872               	movf	?___awdiv,w
  1750     0608  3E30               	addlw	48
  1751     0609  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  1752     060E                     l2642:
  1753                           
  1754                           ;micro.c: 134:     clcd_putch((sec%10+'0'),(0x80 + 13));
  1755     060E  308D               	movlw	141
  1756     060F  1283               	bcf	3,5	;RP0=0, select bank0
  1757     0610  1303               	bcf	3,6	;RP1=0, select bank0
  1758     0611  00A8               	movwf	clcd_putch@addr
  1759     0612  300A               	movlw	10
  1760     0613  00A4               	movwf	___awmod@divisor
  1761     0614  3000               	movlw	0
  1762     0615  00A5               	movwf	___awmod@divisor+1
  1763     0616  083E               	movf	_sec,w
  1764     0617  00AA               	movwf	??_time_display
  1765     0618  01AB               	clrf	??_time_display+1
  1766     0619  082A               	movf	??_time_display,w
  1767     061A  00A6               	movwf	___awmod@dividend
  1768     061B  082B               	movf	??_time_display+1,w
  1769     061C  00A7               	movwf	___awmod@dividend+1
  1770     061D  120A  158A  27A7  120A  118A  	fcall	___awmod
  1771     0622  1283               	bcf	3,5	;RP0=0, select bank0
  1772     0623  1303               	bcf	3,6	;RP1=0, select bank0
  1773     0624  0824               	movf	?___awmod,w
  1774     0625  3E30               	addlw	48
  1775     0626  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  1776     062B                     l2644:
  1777                           
  1778                           ;micro.c: 135:     clcd_putch(':' ,(0x80 + 11));
  1779     062B  308B               	movlw	139
  1780     062C  1283               	bcf	3,5	;RP0=0, select bank0
  1781     062D  1303               	bcf	3,6	;RP1=0, select bank0
  1782     062E  00A8               	movwf	clcd_putch@addr
  1783     062F  303A               	movlw	58
  1784     0630  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  1785     0635                     l2646:
  1786                           
  1787                           ;micro.c: 136:     clcd_putch((min/10)+'0',(0x80 + 9));
  1788     0635  3089               	movlw	137
  1789     0636  1283               	bcf	3,5	;RP0=0, select bank0
  1790     0637  1303               	bcf	3,6	;RP1=0, select bank0
  1791     0638  00A8               	movwf	clcd_putch@addr
  1792     0639  300A               	movlw	10
  1793     063A  00F2               	movwf	___awdiv@divisor
  1794     063B  3000               	movlw	0
  1795     063C  00F3               	movwf	___awdiv@divisor+1
  1796     063D  083D               	movf	_min,w
  1797     063E  00AA               	movwf	??_time_display
  1798     063F  01AB               	clrf	??_time_display+1
  1799     0640  082A               	movf	??_time_display,w
  1800     0641  00F4               	movwf	___awdiv@dividend
  1801     0642  082B               	movf	??_time_display+1,w
  1802     0643  00F5               	movwf	___awdiv@dividend+1
  1803     0644  120A  118A  2773  120A  118A  	fcall	___awdiv
  1804     0649  0872               	movf	?___awdiv,w
  1805     064A  3E30               	addlw	48
  1806     064B  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  1807     0650                     l2648:
  1808                           
  1809                           ;micro.c: 137:     clcd_putch((min%10+'0'),(0x80 + 10));
  1810     0650  308A               	movlw	138
  1811     0651  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0652  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0653  00A8               	movwf	clcd_putch@addr
  1814     0654  300A               	movlw	10
  1815     0655  00A4               	movwf	___awmod@divisor
  1816     0656  3000               	movlw	0
  1817     0657  00A5               	movwf	___awmod@divisor+1
  1818     0658  083D               	movf	_min,w
  1819     0659  00AA               	movwf	??_time_display
  1820     065A  01AB               	clrf	??_time_display+1
  1821     065B  082A               	movf	??_time_display,w
  1822     065C  00A6               	movwf	___awmod@dividend
  1823     065D  082B               	movf	??_time_display+1,w
  1824     065E  00A7               	movwf	___awmod@dividend+1
  1825     065F  120A  158A  27A7  120A  118A  	fcall	___awmod
  1826     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1827     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1828     0666  0824               	movf	?___awmod,w
  1829     0667  3E30               	addlw	48
  1830     0668  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  1831     066D                     l2650:
  1832                           
  1833                           ;micro.c: 138:     clcd_print("4.START/RESUME",(0xC0 + 1));
  1834     066D  3032               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1835     066E  00F6               	movwf	clcd_print@str
  1836     066F  30C1               	movlw	193
  1837     0670  00F7               	movwf	clcd_print@addr
  1838     0671  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1839     0676                     l2652:
  1840                           
  1841                           ;micro.c: 139:     clcd_print("5.PAUSE",(0x90 + 1));
  1842     0676  30A2               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1843     0677  00F6               	movwf	clcd_print@str
  1844     0678  3091               	movlw	145
  1845     0679  00F7               	movwf	clcd_print@addr
  1846     067A  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1847     067F                     l2654:
  1848                           
  1849                           ;micro.c: 140:     clcd_print("6.STOP",(0xD0 + 1));
  1850     067F  30D8               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1851     0680  00F6               	movwf	clcd_print@str
  1852     0681  30D1               	movlw	209
  1853     0682  00F7               	movwf	clcd_print@addr
  1854     0683  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1855     0688                     l2656:
  1856                           
  1857                           ;micro.c: 142:     if(min==0 && sec==0)
  1858     0688  1283               	bcf	3,5	;RP0=0, select bank0
  1859     0689  1303               	bcf	3,6	;RP1=0, select bank0
  1860     068A  083D               	movf	_min,w
  1861     068B  1D03               	btfss	3,2
  1862     068C  2E8E               	goto	u2651
  1863     068D  2E8F               	goto	u2650
  1864     068E                     u2651:
  1865     068E  2EC6               	goto	l296
  1866     068F                     u2650:
  1867     068F                     l2658:
  1868     068F  083E               	movf	_sec,w
  1869     0690  1D03               	btfss	3,2
  1870     0691  2E93               	goto	u2661
  1871     0692  2E94               	goto	u2660
  1872     0693                     u2661:
  1873     0693  2EC6               	goto	l296
  1874     0694                     u2660:
  1875     0694                     l2660:
  1876                           
  1877                           ;micro.c: 143:     {;micro.c: 144:         clear_screen();
  1878     0694  120A  158A  2603  120A  118A  	fcall	_clear_screen
  1879     0699                     l2662:
  1880                           
  1881                           ;micro.c: 146:         TMR2ON=0;
  1882     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1883     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1884     069B  1112               	bcf	18,2	;volatile
  1885     069C                     l2664:
  1886                           
  1887                           ;micro.c: 147:         RC2=0;
  1888     069C  1107               	bcf	7,2	;volatile
  1889     069D                     l2666:
  1890                           
  1891                           ;micro.c: 148:          clcd_print("TIME UP",(0xC0 + 4));
  1892     069D  30BA               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1893     069E  00F6               	movwf	clcd_print@str
  1894     069F  30C4               	movlw	196
  1895     06A0  00F7               	movwf	clcd_print@addr
  1896     06A1  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1897     06A6                     l2668:
  1898                           
  1899                           ;micro.c: 149:          clcd_print("ENJOY YOUR MEAL",(0x90 + 0));
  1900     06A6  3022               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1901     06A7  00F6               	movwf	clcd_print@str
  1902     06A8  3090               	movlw	144
  1903     06A9  00F7               	movwf	clcd_print@addr
  1904     06AA  120A  158A  266E  120A  118A  	fcall	_clcd_print
  1905     06AF                     l2670:
  1906                           
  1907                           ;micro.c: 152:          RC1=1;
  1908     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1909     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1910     06B1  1487               	bsf	7,1	;volatile
  1911     06B2                     l2672:
  1912                           
  1913                           ;micro.c: 153:          _delay((unsigned long)((1000)*(20000000/4000.0)));
  1914     06B2  301A               	movlw	26
  1915     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1916     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1917     06B5  00AC               	movwf	??_time_display+2
  1918     06B6  305E               	movlw	94
  1919     06B7  00AB               	movwf	??_time_display+1
  1920     06B8  306D               	movlw	109
  1921     06B9  00AA               	movwf	??_time_display
  1922     06BA                     u2917:
  1923     06BA  0BAA               	decfsz	??_time_display,f
  1924     06BB  2EBA               	goto	u2917
  1925     06BC  0BAB               	decfsz	??_time_display+1,f
  1926     06BD  2EBA               	goto	u2917
  1927     06BE  0BAC               	decfsz	??_time_display+2,f
  1928     06BF  2EBA               	goto	u2917
  1929     06C0  2EC1               	nop2
  1930     06C1                     l2674:
  1931                           
  1932                           ;micro.c: 154:          RC1=0;
  1933     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1934     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1935     06C3  1087               	bcf	7,1	;volatile
  1936     06C4                     l2676:
  1937                           
  1938                           ;micro.c: 156:          operational_flag =0x02;
  1939     06C4  3002               	movlw	2
  1940     06C5  00BF               	movwf	_operational_flag
  1941     06C6                     l296:
  1942     06C6  0008               	return
  1943     06C7                     __end_of_time_display:
  1944                           
  1945                           	psect	text2
  1946     01B7                     __ptext2:	
  1947 ;; *************** function _set_time *****************
  1948 ;; Defined at:
  1949 ;;		line 43 in file "micro.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  key             1    wreg     unsigned char 
  1952 ;;  reset_flag      1   10[BANK0 ] unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  key             1   14[BANK0 ] unsigned char 
  1955 ;;  wait            1   13[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       1       0       0       0
  1966 ;;      Locals:         0       2       0       0       0
  1967 ;;      Temps:          0       2       0       0       0
  1968 ;;      Totals:         0       5       0       0       0
  1969 ;;Total ram usage:        5 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 3
  1972 ;; This function calls:
  1973 ;;		___awdiv
  1974 ;;		___awmod
  1975 ;;		___bmul
  1976 ;;		_clcd_print
  1977 ;;		_clcd_putch
  1978 ;;		_clear_screen
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984     01B7                     _set_time:	
  1985                           ;psect for function _set_time
  1986                           
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1990                           ;set_time@key stored from wreg
  1991     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1992     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1993     01B9  00AE               	movwf	set_time@key
  1994     01BA                     l2578:
  1995                           
  1996                           ;micro.c: 43: void set_time(unsigned char key,unsigned char reset_flag);micro.c: 44: { s
      +                          tatic unsigned char blink_pos=0, key_count=0;;micro.c: 45: if(reset_flag==0xFF)
  1997     01BA  0A2A               	incf	set_time@reset_flag,w
  1998     01BB  1D03               	btfss	3,2
  1999     01BC  29BE               	goto	u2541
  2000     01BD  29BF               	goto	u2540
  2001     01BE                     u2541:
  2002     01BE  29C5               	goto	l2584
  2003     01BF                     u2540:
  2004     01BF                     l2580:
  2005                           
  2006                           ;micro.c: 46: { blink_pos=0;
  2007     01BF  01BA               	clrf	set_time@blink_pos
  2008                           
  2009                           ;micro.c: 47:     key_count=0;
  2010     01C0  01B9               	clrf	set_time@key_count
  2011     01C1                     l2582:
  2012                           
  2013                           ;micro.c: 48:     key=0xFF;
  2014     01C1  30FF               	movlw	255
  2015     01C2  00AE               	movwf	set_time@key
  2016                           
  2017                           ;micro.c: 49:     min=0;
  2018     01C3  01BD               	clrf	_min
  2019                           
  2020                           ;micro.c: 50:     sec=0;
  2021     01C4  01BE               	clrf	_sec
  2022     01C5                     l2584:
  2023                           
  2024                           ;micro.c: 54:     clcd_print("SET TIME(MM:SS)",(0x80 + 0));
  2025     01C5  3012               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2026     01C6  00F6               	movwf	clcd_print@str
  2027     01C7  3080               	movlw	128
  2028     01C8  00F7               	movwf	clcd_print@addr
  2029     01C9  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2030     01CE                     l2586:
  2031                           
  2032                           ;micro.c: 55:     clcd_print("TIME :",(0xC0 + 0));
  2033     01CE  30CA               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2034     01CF  00F6               	movwf	clcd_print@str
  2035     01D0  30C0               	movlw	192
  2036     01D1  00F7               	movwf	clcd_print@addr
  2037     01D2  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2038     01D7                     l2588:
  2039                           
  2040                           ;micro.c: 56:     clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
  2041     01D7  3001               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2042     01D8  00F6               	movwf	clcd_print@str
  2043     01D9  30D0               	movlw	208
  2044     01DA  00F7               	movwf	clcd_print@addr
  2045     01DB  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2046     01E0                     l2590:
  2047                           
  2048                           ;micro.c: 58:     if(key!='*'&&key!='#'&&key!=0xFF)
  2049     01E0  302A               	movlw	42
  2050     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2051     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2052     01E3  062E               	xorwf	set_time@key,w
  2053     01E4  1903               	btfsc	3,2
  2054     01E5  29E7               	goto	u2551
  2055     01E6  29E8               	goto	u2550
  2056     01E7                     u2551:
  2057     01E7  2A1E               	goto	l2610
  2058     01E8                     u2550:
  2059     01E8                     l2592:
  2060     01E8  3023               	movlw	35
  2061     01E9  062E               	xorwf	set_time@key,w
  2062     01EA  1903               	btfsc	3,2
  2063     01EB  29ED               	goto	u2561
  2064     01EC  29EE               	goto	u2560
  2065     01ED                     u2561:
  2066     01ED  2A1E               	goto	l2610
  2067     01EE                     u2560:
  2068     01EE                     l2594:
  2069     01EE  0A2E               	incf	set_time@key,w
  2070     01EF  1903               	btfsc	3,2
  2071     01F0  29F2               	goto	u2571
  2072     01F1  29F3               	goto	u2570
  2073     01F2                     u2571:
  2074     01F2  2A1E               	goto	l2610
  2075     01F3                     u2570:
  2076     01F3                     l2596:
  2077                           
  2078                           ;micro.c: 59:     { key_count++;
  2079     01F3  3001               	movlw	1
  2080     01F4  07B9               	addwf	set_time@key_count,f
  2081     01F5                     l2598:
  2082                           
  2083                           ;micro.c: 60:         if(key_count<=2)
  2084     01F5  3003               	movlw	3
  2085     01F6  0239               	subwf	set_time@key_count,w
  2086     01F7  1803               	skipnc
  2087     01F8  29FA               	goto	u2581
  2088     01F9  29FB               	goto	u2580
  2089     01FA                     u2581:
  2090     01FA  2A09               	goto	l2604
  2091     01FB                     u2580:
  2092     01FB                     l2600:
  2093                           
  2094                           ;micro.c: 61:         {sec= sec*10+key;
  2095     01FB  300A               	movlw	10
  2096     01FC  00F2               	movwf	___bmul@multiplicand
  2097     01FD  083E               	movf	_sec,w
  2098     01FE  120A  158A  2614  120A  118A  	fcall	___bmul
  2099     0203  1283               	bcf	3,5	;RP0=0, select bank0
  2100     0204  1303               	bcf	3,6	;RP1=0, select bank0
  2101     0205  072E               	addwf	set_time@key,w
  2102     0206  00BE               	movwf	_sec
  2103     0207                     l2602:
  2104                           
  2105                           ;micro.c: 62:         blink_pos=0;
  2106     0207  01BA               	clrf	set_time@blink_pos
  2107                           
  2108                           ;micro.c: 63:         }
  2109     0208  2A3F               	goto	l2626
  2110     0209                     l2604:
  2111     0209  3005               	movlw	5
  2112     020A  0239               	subwf	set_time@key_count,w
  2113     020B  1803               	skipnc
  2114     020C  2A0E               	goto	u2591
  2115     020D  2A0F               	goto	u2590
  2116     020E                     u2591:
  2117     020E  2A3F               	goto	l2626
  2118     020F                     u2590:
  2119     020F                     l2606:
  2120                           
  2121                           ;micro.c: 65:         {min=min*10+key;
  2122     020F  300A               	movlw	10
  2123     0210  00F2               	movwf	___bmul@multiplicand
  2124     0211  083D               	movf	_min,w
  2125     0212  120A  158A  2614  120A  118A  	fcall	___bmul
  2126     0217  1283               	bcf	3,5	;RP0=0, select bank0
  2127     0218  1303               	bcf	3,6	;RP1=0, select bank0
  2128     0219  072E               	addwf	set_time@key,w
  2129     021A  00BD               	movwf	_min
  2130     021B                     l2608:
  2131                           
  2132                           ;micro.c: 66:         blink_pos=1;
  2133     021B  3001               	movlw	1
  2134     021C  00BA               	movwf	set_time@blink_pos
  2135     021D  2A3F               	goto	l2626
  2136     021E                     l2610:
  2137     021E  302A               	movlw	42
  2138     021F  062E               	xorwf	set_time@key,w
  2139     0220  1D03               	btfss	3,2
  2140     0221  2A23               	goto	u2601
  2141     0222  2A24               	goto	u2600
  2142     0223                     u2601:
  2143     0223  2A30               	goto	l2620
  2144     0224                     u2600:
  2145     0224                     l2612:
  2146                           
  2147                           ;micro.c: 73:     { if(blink_pos)
  2148     0224  083A               	movf	set_time@blink_pos,w
  2149     0225  1903               	btfsc	3,2
  2150     0226  2A28               	goto	u2611
  2151     0227  2A29               	goto	u2610
  2152     0228                     u2611:
  2153     0228  2A2D               	goto	l2618
  2154     0229                     u2610:
  2155     0229                     l2614:
  2156                           
  2157                           ;micro.c: 74:         {;micro.c: 75:         min=0;
  2158     0229  01BD               	clrf	_min
  2159     022A                     l2616:
  2160                           
  2161                           ;micro.c: 76:      key_count=2;}
  2162     022A  3002               	movlw	2
  2163     022B  00B9               	movwf	set_time@key_count
  2164     022C  2A3F               	goto	l2626
  2165     022D                     l2618:
  2166                           
  2167                           ;micro.c: 78:         sec=0;
  2168     022D  01BE               	clrf	_sec
  2169                           
  2170                           ;micro.c: 79:      key_count=0;}
  2171     022E  01B9               	clrf	set_time@key_count
  2172     022F  2A3F               	goto	l2626
  2173     0230                     l2620:
  2174     0230  3023               	movlw	35
  2175     0231  062E               	xorwf	set_time@key,w
  2176     0232  1D03               	btfss	3,2
  2177     0233  2A35               	goto	u2621
  2178     0234  2A36               	goto	u2620
  2179     0235                     u2621:
  2180     0235  2A3F               	goto	l2626
  2181     0236                     u2620:
  2182     0236                     l2622:
  2183                           
  2184                           ;micro.c: 86:     {;micro.c: 88:         RC2=1;
  2185     0236  1507               	bsf	7,2	;volatile
  2186                           
  2187                           ;micro.c: 90:         TMR2ON=1;
  2188     0237  1512               	bsf	18,2	;volatile
  2189                           
  2190                           ;micro.c: 93:         operational_flag=0xDD;
  2191     0238  30DD               	movlw	221
  2192     0239  00BF               	movwf	_operational_flag
  2193     023A                     l2624:
  2194                           
  2195                           ;micro.c: 94:         clear_screen();
  2196     023A  120A  158A  2603  120A  118A  	fcall	_clear_screen
  2197     023F                     l2626:
  2198                           
  2199                           ;micro.c: 103:     if(blink_pos==0)
  2200     023F  1283               	bcf	3,5	;RP0=0, select bank0
  2201     0240  1303               	bcf	3,6	;RP1=0, select bank0
  2202     0241  083A               	movf	set_time@blink_pos,w
  2203     0242  1D03               	btfss	3,2
  2204     0243  2A45               	goto	u2631
  2205     0244  2A46               	goto	u2630
  2206     0245                     u2631:
  2207     0245  2A59               	goto	l2630
  2208     0246                     u2630:
  2209     0246                     l2628:
  2210                           
  2211                           ;micro.c: 104:     {;micro.c: 105:         clcd_putch(' ',(0xC0 + 9));
  2212     0246  30C9               	movlw	201
  2213     0247  00A8               	movwf	clcd_putch@addr
  2214     0248  3020               	movlw	32
  2215     0249  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2216                           
  2217                           ;micro.c: 106:          clcd_putch(' ',(0xC0 + 10));
  2218     024E  30CA               	movlw	202
  2219     024F  1283               	bcf	3,5	;RP0=0, select bank0
  2220     0250  1303               	bcf	3,6	;RP1=0, select bank0
  2221     0251  00A8               	movwf	clcd_putch@addr
  2222     0252  3020               	movlw	32
  2223     0253  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2224                           
  2225                           ;micro.c: 109:     }
  2226     0258  2A6B               	goto	l2632
  2227     0259                     l2630:
  2228                           
  2229                           ;micro.c: 111:     { clcd_putch(' ',(0xC0 + 6));
  2230     0259  30C6               	movlw	198
  2231     025A  00A8               	movwf	clcd_putch@addr
  2232     025B  3020               	movlw	32
  2233     025C  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2234                           
  2235                           ;micro.c: 112:          clcd_putch(' ',(0xC0 + 7));
  2236     0261  30C7               	movlw	199
  2237     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0263  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0264  00A8               	movwf	clcd_putch@addr
  2240     0265  3020               	movlw	32
  2241     0266  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2242     026B                     l2632:
  2243                           
  2244                           ;micro.c: 117:     for(unsigned char wait=50;wait--;);
  2245     026B  3032               	movlw	50
  2246     026C  1283               	bcf	3,5	;RP0=0, select bank0
  2247     026D  1303               	bcf	3,6	;RP1=0, select bank0
  2248     026E  00AD               	movwf	set_time@wait
  2249     026F                     l2634:
  2250     026F  3001               	movlw	1
  2251     0270  02AD               	subwf	set_time@wait,f
  2252     0271  0A2D               	incf	set_time@wait,w
  2253     0272  1D03               	btfss	3,2
  2254     0273  2A75               	goto	u2641
  2255     0274  2A76               	goto	u2640
  2256     0275                     u2641:
  2257     0275  2A6F               	goto	l2634
  2258     0276                     u2640:
  2259     0276                     l2636:
  2260                           
  2261                           ;micro.c: 122:     clcd_putch((sec/10+'0'),(0xC0 + 9));
  2262     0276  30C9               	movlw	201
  2263     0277  00A8               	movwf	clcd_putch@addr
  2264     0278  300A               	movlw	10
  2265     0279  00F2               	movwf	___awdiv@divisor
  2266     027A  3000               	movlw	0
  2267     027B  00F3               	movwf	___awdiv@divisor+1
  2268     027C  083E               	movf	_sec,w
  2269     027D  00AB               	movwf	??_set_time
  2270     027E  01AC               	clrf	??_set_time+1
  2271     027F  082B               	movf	??_set_time,w
  2272     0280  00F4               	movwf	___awdiv@dividend
  2273     0281  082C               	movf	??_set_time+1,w
  2274     0282  00F5               	movwf	___awdiv@dividend+1
  2275     0283  120A  118A  2773  120A  118A  	fcall	___awdiv
  2276     0288  0872               	movf	?___awdiv,w
  2277     0289  3E30               	addlw	48
  2278     028A  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2279                           
  2280                           ;micro.c: 123:     clcd_putch((sec%10+'0'),(0xC0 + 10));
  2281     028F  30CA               	movlw	202
  2282     0290  1283               	bcf	3,5	;RP0=0, select bank0
  2283     0291  1303               	bcf	3,6	;RP1=0, select bank0
  2284     0292  00A8               	movwf	clcd_putch@addr
  2285     0293  300A               	movlw	10
  2286     0294  00A4               	movwf	___awmod@divisor
  2287     0295  3000               	movlw	0
  2288     0296  00A5               	movwf	___awmod@divisor+1
  2289     0297  083E               	movf	_sec,w
  2290     0298  00AB               	movwf	??_set_time
  2291     0299  01AC               	clrf	??_set_time+1
  2292     029A  082B               	movf	??_set_time,w
  2293     029B  00A6               	movwf	___awmod@dividend
  2294     029C  082C               	movf	??_set_time+1,w
  2295     029D  00A7               	movwf	___awmod@dividend+1
  2296     029E  120A  158A  27A7  120A  118A  	fcall	___awmod
  2297     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2298     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2299     02A5  0824               	movf	?___awmod,w
  2300     02A6  3E30               	addlw	48
  2301     02A7  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2302                           
  2303                           ;micro.c: 124:     clcd_putch(':' ,(0xC0 + 8));
  2304     02AC  30C8               	movlw	200
  2305     02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2306     02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2307     02AF  00A8               	movwf	clcd_putch@addr
  2308     02B0  303A               	movlw	58
  2309     02B1  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2310                           
  2311                           ;micro.c: 125:     clcd_putch((min/10)+'0',(0xC0 + 6));
  2312     02B6  30C6               	movlw	198
  2313     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2314     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2315     02B9  00A8               	movwf	clcd_putch@addr
  2316     02BA  300A               	movlw	10
  2317     02BB  00F2               	movwf	___awdiv@divisor
  2318     02BC  3000               	movlw	0
  2319     02BD  00F3               	movwf	___awdiv@divisor+1
  2320     02BE  083D               	movf	_min,w
  2321     02BF  00AB               	movwf	??_set_time
  2322     02C0  01AC               	clrf	??_set_time+1
  2323     02C1  082B               	movf	??_set_time,w
  2324     02C2  00F4               	movwf	___awdiv@dividend
  2325     02C3  082C               	movf	??_set_time+1,w
  2326     02C4  00F5               	movwf	___awdiv@dividend+1
  2327     02C5  120A  118A  2773  120A  118A  	fcall	___awdiv
  2328     02CA  0872               	movf	?___awdiv,w
  2329     02CB  3E30               	addlw	48
  2330     02CC  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2331                           
  2332                           ;micro.c: 126:     clcd_putch((min%10+'0'),(0xC0 + 7));
  2333     02D1  30C7               	movlw	199
  2334     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2335     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2336     02D4  00A8               	movwf	clcd_putch@addr
  2337     02D5  300A               	movlw	10
  2338     02D6  00A4               	movwf	___awmod@divisor
  2339     02D7  3000               	movlw	0
  2340     02D8  00A5               	movwf	___awmod@divisor+1
  2341     02D9  083D               	movf	_min,w
  2342     02DA  00AB               	movwf	??_set_time
  2343     02DB  01AC               	clrf	??_set_time+1
  2344     02DC  082B               	movf	??_set_time,w
  2345     02DD  00A6               	movwf	___awmod@dividend
  2346     02DE  082C               	movf	??_set_time+1,w
  2347     02DF  00A7               	movwf	___awmod@dividend+1
  2348     02E0  120A  158A  27A7  120A  118A  	fcall	___awmod
  2349     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2350     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2351     02E7  0824               	movf	?___awmod,w
  2352     02E8  3E30               	addlw	48
  2353     02E9  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2354     02EE                     l292:
  2355     02EE  0008               	return
  2356     02EF                     __end_of_set_time:
  2357                           
  2358                           	psect	text3
  2359     0E14                     __ptext3:	
  2360 ;; *************** function ___bmul *****************
  2361 ;; Defined at:
  2362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  multiplier      1    wreg     unsigned char 
  2365 ;;  multiplicand    1    2[COMMON] unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  multiplier      1    4[COMMON] unsigned char 
  2368 ;;  product         1    3[COMMON] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         1       0       0       0       0
  2379 ;;      Locals:         2       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         3       0       0       0       0
  2382 ;;Total ram usage:        3 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_set_time
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392     0E14                     ___bmul:	
  2393                           ;psect for function ___bmul
  2394                           
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2398                           ;___bmul@multiplier stored from wreg
  2399     0E14  00F4               	movwf	___bmul@multiplier
  2400     0E15                     l2146:
  2401     0E15  01F3               	clrf	___bmul@product
  2402     0E16                     l2148:
  2403     0E16  1C74               	btfss	___bmul@multiplier,0
  2404     0E17  2E19               	goto	u1811
  2405     0E18  2E1A               	goto	u1810
  2406     0E19                     u1811:
  2407     0E19  2E1C               	goto	l2152
  2408     0E1A                     u1810:
  2409     0E1A                     l2150:
  2410     0E1A  0872               	movf	___bmul@multiplicand,w
  2411     0E1B  07F3               	addwf	___bmul@product,f
  2412     0E1C                     l2152:
  2413     0E1C  1003               	clrc
  2414     0E1D  0DF2               	rlf	___bmul@multiplicand,f
  2415     0E1E                     l2154:
  2416     0E1E  1003               	clrc
  2417     0E1F  0CF4               	rrf	___bmul@multiplier,f
  2418     0E20  0874               	movf	___bmul@multiplier,w
  2419     0E21  1D03               	btfss	3,2
  2420     0E22  2E24               	goto	u1821
  2421     0E23  2E25               	goto	u1820
  2422     0E24                     u1821:
  2423     0E24  2E16               	goto	l2148
  2424     0E25                     u1820:
  2425     0E25                     l2156:
  2426     0E25  0873               	movf	___bmul@product,w
  2427     0E26                     l432:
  2428     0E26  0008               	return
  2429     0E27                     __end_of___bmul:
  2430                           
  2431                           	psect	text4
  2432     002A                     __ptext4:	
  2433 ;; *************** function _set_temp *****************
  2434 ;; Defined at:
  2435 ;;		line 162 in file "micro.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  key             1    wreg     unsigned char 
  2438 ;;  reset_flag      1   10[BANK0 ] unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  key             1   14[BANK0 ] unsigned char 
  2441 ;;  wait            1   13[BANK0 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       1       0       0       0
  2452 ;;      Locals:         0       2       0       0       0
  2453 ;;      Temps:          0       2       0       0       0
  2454 ;;      Totals:         0       5       0       0       0
  2455 ;;Total ram usage:        5 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 3
  2458 ;; This function calls:
  2459 ;;		___awdiv
  2460 ;;		___awmod
  2461 ;;		___lwdiv
  2462 ;;		___lwmod
  2463 ;;		___wmul
  2464 ;;		_clcd_print
  2465 ;;		_clcd_putch
  2466 ;;		_clear_screen
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472     002A                     _set_temp:	
  2473                           ;psect for function _set_temp
  2474                           
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2478                           ;set_temp@key stored from wreg
  2479     002A  1283               	bcf	3,5	;RP0=0, select bank0
  2480     002B  1303               	bcf	3,6	;RP1=0, select bank0
  2481     002C  00AE               	movwf	set_temp@key
  2482     002D                     l2678:
  2483                           
  2484                           ;micro.c: 162: void set_temp(unsigned char key,unsigned char reset_flag);micro.c: 163: {
      +                           static unsigned char key_count;;micro.c: 164:     static unsigned int temp;;micro.c: 16
      +                          5:     if(reset_flag==0xFF)
  2485     002D  0A2A               	incf	set_temp@reset_flag,w
  2486     002E  1D03               	btfss	3,2
  2487     002F  2831               	goto	u2671
  2488     0030  2832               	goto	u2670
  2489     0031                     u2671:
  2490     0031  2837               	goto	l2684
  2491     0032                     u2670:
  2492     0032                     l2680:
  2493                           
  2494                           ;micro.c: 166:     { key=0xFF;
  2495     0032  30FF               	movlw	255
  2496     0033  00AE               	movwf	set_temp@key
  2497     0034                     l2682:
  2498                           
  2499                           ;micro.c: 167:        temp=0;
  2500     0034  01B6               	clrf	set_temp@temp
  2501     0035  01B7               	clrf	set_temp@temp+1
  2502                           
  2503                           ;micro.c: 168:        key_count=0;
  2504     0036  01B8               	clrf	set_temp@key_count
  2505     0037                     l2684:
  2506                           
  2507                           ;micro.c: 171:         clcd_print("SET TEMP(*C)",(0x80 + 0));
  2508     0037  3050               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2509     0038  00F6               	movwf	clcd_print@str
  2510     0039  3080               	movlw	128
  2511     003A  00F7               	movwf	clcd_print@addr
  2512     003B  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2513     0040                     l2686:
  2514                           
  2515                           ;micro.c: 172:     clcd_print("TEMP :",(0xC0 + 1));
  2516     0040  30D1               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2517     0041  00F6               	movwf	clcd_print@str
  2518     0042  30C1               	movlw	193
  2519     0043  00F7               	movwf	clcd_print@addr
  2520     0044  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2521     0049                     l2688:
  2522                           
  2523                           ;micro.c: 173:     clcd_print("*:CLEAR  #:ENTER",(0xD0 + 0));
  2524     0049  3001               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2525     004A  00F6               	movwf	clcd_print@str
  2526     004B  30D0               	movlw	208
  2527     004C  00F7               	movwf	clcd_print@addr
  2528     004D  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2529     0052                     l2690:
  2530                           
  2531                           ;micro.c: 175:      clcd_putch(' ',(0xC0 + 8));
  2532     0052  30C8               	movlw	200
  2533     0053  1283               	bcf	3,5	;RP0=0, select bank0
  2534     0054  1303               	bcf	3,6	;RP1=0, select bank0
  2535     0055  00A8               	movwf	clcd_putch@addr
  2536     0056  3020               	movlw	32
  2537     0057  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2538     005C                     l2692:
  2539                           
  2540                           ;micro.c: 176:      clcd_putch(' ',(0xC0 + 9));
  2541     005C  30C9               	movlw	201
  2542     005D  1283               	bcf	3,5	;RP0=0, select bank0
  2543     005E  1303               	bcf	3,6	;RP1=0, select bank0
  2544     005F  00A8               	movwf	clcd_putch@addr
  2545     0060  3020               	movlw	32
  2546     0061  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2547     0066                     l2694:
  2548                           
  2549                           ;micro.c: 177:      clcd_putch(' ',(0xC0 + 10));
  2550     0066  30CA               	movlw	202
  2551     0067  1283               	bcf	3,5	;RP0=0, select bank0
  2552     0068  1303               	bcf	3,6	;RP1=0, select bank0
  2553     0069  00A8               	movwf	clcd_putch@addr
  2554     006A  3020               	movlw	32
  2555     006B  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2556     0070                     l2696:
  2557                           
  2558                           ;micro.c: 179:      for(unsigned char wait=50;wait--;);
  2559     0070  3032               	movlw	50
  2560     0071  1283               	bcf	3,5	;RP0=0, select bank0
  2561     0072  1303               	bcf	3,6	;RP1=0, select bank0
  2562     0073  00AD               	movwf	set_temp@wait
  2563     0074                     l2698:
  2564     0074  3001               	movlw	1
  2565     0075  02AD               	subwf	set_temp@wait,f
  2566     0076  0A2D               	incf	set_temp@wait,w
  2567     0077  1D03               	btfss	3,2
  2568     0078  287A               	goto	u2681
  2569     0079  287B               	goto	u2680
  2570     007A                     u2681:
  2571     007A  2874               	goto	l2698
  2572     007B                     u2680:
  2573     007B                     l2700:
  2574                           
  2575                           ;micro.c: 181:      clcd_putch((temp/100+'0'),(0xC0 + 8));
  2576     007B  30C8               	movlw	200
  2577     007C  00A8               	movwf	clcd_putch@addr
  2578     007D  3064               	movlw	100
  2579     007E  00F2               	movwf	___lwdiv@divisor
  2580     007F  3000               	movlw	0
  2581     0080  00F3               	movwf	___lwdiv@divisor+1
  2582     0081  0837               	movf	set_temp@temp+1,w
  2583     0082  00F5               	movwf	___lwdiv@dividend+1
  2584     0083  0836               	movf	set_temp@temp,w
  2585     0084  00F4               	movwf	___lwdiv@dividend
  2586     0085  120A  158A  2765  120A  118A  	fcall	___lwdiv
  2587     008A  0872               	movf	?___lwdiv,w
  2588     008B  3E30               	addlw	48
  2589     008C  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2590                           
  2591                           ;micro.c: 182:      clcd_putch(((temp/10)%10+'0'),(0xC0 + 9));
  2592     0091  30C9               	movlw	201
  2593     0092  1283               	bcf	3,5	;RP0=0, select bank0
  2594     0093  1303               	bcf	3,6	;RP1=0, select bank0
  2595     0094  00A8               	movwf	clcd_putch@addr
  2596     0095  300A               	movlw	10
  2597     0096  00A0               	movwf	___lwmod@divisor
  2598     0097  3000               	movlw	0
  2599     0098  00A1               	movwf	___lwmod@divisor+1
  2600     0099  300A               	movlw	10
  2601     009A  00F2               	movwf	___lwdiv@divisor
  2602     009B  3000               	movlw	0
  2603     009C  00F3               	movwf	___lwdiv@divisor+1
  2604     009D  0837               	movf	set_temp@temp+1,w
  2605     009E  00F5               	movwf	___lwdiv@dividend+1
  2606     009F  0836               	movf	set_temp@temp,w
  2607     00A0  00F4               	movwf	___lwdiv@dividend
  2608     00A1  120A  158A  2765  120A  118A  	fcall	___lwdiv
  2609     00A6  0873               	movf	?___lwdiv+1,w
  2610     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  2611     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  2612     00A9  00A3               	movwf	___lwmod@dividend+1
  2613     00AA  0872               	movf	?___lwdiv,w
  2614     00AB  00A2               	movwf	___lwmod@dividend
  2615     00AC  120A  158A  26EE  120A  118A  	fcall	___lwmod
  2616     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2617     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2618     00B3  0820               	movf	?___lwmod,w
  2619     00B4  3E30               	addlw	48
  2620     00B5  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2621                           
  2622                           ;micro.c: 183:      clcd_putch((temp%10+'0'),(0xC0 + 10));
  2623     00BA  30CA               	movlw	202
  2624     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2625     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2626     00BD  00A8               	movwf	clcd_putch@addr
  2627     00BE  300A               	movlw	10
  2628     00BF  00A0               	movwf	___lwmod@divisor
  2629     00C0  3000               	movlw	0
  2630     00C1  00A1               	movwf	___lwmod@divisor+1
  2631     00C2  0837               	movf	set_temp@temp+1,w
  2632     00C3  00A3               	movwf	___lwmod@dividend+1
  2633     00C4  0836               	movf	set_temp@temp,w
  2634     00C5  00A2               	movwf	___lwmod@dividend
  2635     00C6  120A  158A  26EE  120A  118A  	fcall	___lwmod
  2636     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2637     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2638     00CD  0820               	movf	?___lwmod,w
  2639     00CE  3E30               	addlw	48
  2640     00CF  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2641     00D4                     l2702:
  2642                           
  2643                           ;micro.c: 185:      if(key!='*'&&key!='#'&&key!=0xFF)
  2644     00D4  302A               	movlw	42
  2645     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2646     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2647     00D7  062E               	xorwf	set_temp@key,w
  2648     00D8  1903               	btfsc	3,2
  2649     00D9  28DB               	goto	u2691
  2650     00DA  28DC               	goto	u2690
  2651     00DB                     u2691:
  2652     00DB  2907               	goto	l2714
  2653     00DC                     u2690:
  2654     00DC                     l2704:
  2655     00DC  3023               	movlw	35
  2656     00DD  062E               	xorwf	set_temp@key,w
  2657     00DE  1903               	btfsc	3,2
  2658     00DF  28E1               	goto	u2701
  2659     00E0  28E2               	goto	u2700
  2660     00E1                     u2701:
  2661     00E1  2907               	goto	l2714
  2662     00E2                     u2700:
  2663     00E2                     l2706:
  2664     00E2  0A2E               	incf	set_temp@key,w
  2665     00E3  1903               	btfsc	3,2
  2666     00E4  28E6               	goto	u2711
  2667     00E5  28E7               	goto	u2710
  2668     00E6                     u2711:
  2669     00E6  2907               	goto	l2714
  2670     00E7                     u2710:
  2671     00E7                     l2708:
  2672                           
  2673                           ;micro.c: 186:      {;micro.c: 187:          if(key_count<3)
  2674     00E7  3003               	movlw	3
  2675     00E8  0238               	subwf	set_temp@key_count,w
  2676     00E9  1803               	skipnc
  2677     00EA  28EC               	goto	u2721
  2678     00EB  28ED               	goto	u2720
  2679     00EC                     u2721:
  2680     00EC  29B6               	goto	l317
  2681     00ED                     u2720:
  2682     00ED                     l2710:
  2683                           
  2684                           ;micro.c: 188:          { temp=temp*10+key;
  2685     00ED  0837               	movf	set_temp@temp+1,w
  2686     00EE  00F3               	movwf	___wmul@multiplier+1
  2687     00EF  0836               	movf	set_temp@temp,w
  2688     00F0  00F2               	movwf	___wmul@multiplier
  2689     00F1  300A               	movlw	10
  2690     00F2  00F4               	movwf	___wmul@multiplicand
  2691     00F3  3000               	movlw	0
  2692     00F4  00F5               	movwf	___wmul@multiplicand+1
  2693     00F5  120A  118A  27D8  120A  118A  	fcall	___wmul
  2694     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2695     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2696     00FC  082E               	movf	set_temp@key,w
  2697     00FD  0772               	addwf	?___wmul,w
  2698     00FE  00B6               	movwf	set_temp@temp
  2699     00FF  3000               	movlw	0
  2700     0100  1803               	skipnc
  2701     0101  3001               	movlw	1
  2702     0102  0773               	addwf	?___wmul+1,w
  2703     0103  00B7               	movwf	set_temp@temp+1
  2704     0104                     l2712:
  2705                           
  2706                           ;micro.c: 189:             key_count++;
  2707     0104  3001               	movlw	1
  2708     0105  07B8               	addwf	set_temp@key_count,f
  2709     0106  29B6               	goto	l317
  2710     0107                     l2714:
  2711     0107  302A               	movlw	42
  2712     0108  062E               	xorwf	set_temp@key,w
  2713     0109  1D03               	btfss	3,2
  2714     010A  290C               	goto	u2731
  2715     010B  290D               	goto	u2730
  2716     010C                     u2731:
  2717     010C  2911               	goto	l2718
  2718     010D                     u2730:
  2719     010D                     l2716:
  2720                           
  2721                           ;micro.c: 197:      { temp=0;
  2722     010D  01B6               	clrf	set_temp@temp
  2723     010E  01B7               	clrf	set_temp@temp+1
  2724                           
  2725                           ;micro.c: 198:         key_count=0;
  2726     010F  01B8               	clrf	set_temp@key_count
  2727                           
  2728                           ;micro.c: 199:      }
  2729     0110  29B6               	goto	l317
  2730     0111                     l2718:
  2731     0111  3023               	movlw	35
  2732     0112  062E               	xorwf	set_temp@key,w
  2733     0113  1D03               	btfss	3,2
  2734     0114  2916               	goto	u2741
  2735     0115  2917               	goto	u2740
  2736     0116                     u2741:
  2737     0116  29B6               	goto	l317
  2738     0117                     u2740:
  2739     0117                     l2720:
  2740                           
  2741                           ;micro.c: 202:     { if(temp>180)
  2742     0117  3000               	movlw	0
  2743     0118  0237               	subwf	set_temp@temp+1,w
  2744     0119  30B5               	movlw	181
  2745     011A  1903               	skipnz
  2746     011B  0236               	subwf	set_temp@temp,w
  2747     011C  1C03               	skipc
  2748     011D  291F               	goto	u2751
  2749     011E  2920               	goto	u2750
  2750     011F                     u2751:
  2751     011F  2924               	goto	l2724
  2752     0120                     u2750:
  2753     0120                     l2722:
  2754                           
  2755                           ;micro.c: 203:         temp=180;
  2756     0120  30B4               	movlw	180
  2757     0121  00B6               	movwf	set_temp@temp
  2758     0122  3000               	movlw	0
  2759     0123  00B7               	movwf	set_temp@temp+1
  2760     0124                     l2724:
  2761                           
  2762                           ;micro.c: 205:     clear_screen();
  2763     0124  120A  158A  2603  120A  118A  	fcall	_clear_screen
  2764     0129                     l2726:
  2765                           
  2766                           ;micro.c: 206:     clcd_print("Pre-Heating",(0x80 + 2));
  2767     0129  3083               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  2768     012A  00F6               	movwf	clcd_print@str
  2769     012B  3082               	movlw	130
  2770     012C  00F7               	movwf	clcd_print@addr
  2771     012D  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2772     0132                     l2728:
  2773                           
  2774                           ;micro.c: 207:     clcd_print("Time Rem :",(0x90 + 0));
  2775     0132  308F               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
  2776     0133  00F6               	movwf	clcd_print@str
  2777     0134  3090               	movlw	144
  2778     0135  00F7               	movwf	clcd_print@addr
  2779     0136  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2780     013B                     l2730:
  2781                           
  2782                           ;micro.c: 208:      clcd_print("Sec :",(0x90 + 13));
  2783     013B  30DF               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  2784     013C  00F6               	movwf	clcd_print@str
  2785     013D  309D               	movlw	157
  2786     013E  00F7               	movwf	clcd_print@addr
  2787     013F  120A  158A  266E  120A  118A  	fcall	_clcd_print
  2788     0144                     l2732:
  2789                           
  2790                           ;micro.c: 209:     pre_heat_time=60;
  2791     0144  303C               	movlw	60
  2792     0145  1283               	bcf	3,5	;RP0=0, select bank0
  2793     0146  1303               	bcf	3,6	;RP1=0, select bank0
  2794     0147  00BB               	movwf	_pre_heat_time
  2795     0148                     l2734:
  2796                           
  2797                           ;micro.c: 210:     TMR2ON=1;
  2798     0148  1512               	bsf	18,2	;volatile
  2799                           
  2800                           ;micro.c: 211:     while(pre_heat_time!=0)
  2801     0149  29AC               	goto	l2738
  2802     014A                     l2736:
  2803                           
  2804                           ;micro.c: 212:     {;micro.c: 213:      clcd_putch((pre_heat_time/100)+'0',(0x90 + 10));
  2805     014A  309A               	movlw	154
  2806     014B  00A8               	movwf	clcd_putch@addr
  2807     014C  3064               	movlw	100
  2808     014D  00F2               	movwf	___awdiv@divisor
  2809     014E  3000               	movlw	0
  2810     014F  00F3               	movwf	___awdiv@divisor+1
  2811     0150  083B               	movf	_pre_heat_time,w
  2812     0151  00AB               	movwf	??_set_temp
  2813     0152  01AC               	clrf	??_set_temp+1
  2814     0153  082B               	movf	??_set_temp,w
  2815     0154  00F4               	movwf	___awdiv@dividend
  2816     0155  082C               	movf	??_set_temp+1,w
  2817     0156  00F5               	movwf	___awdiv@dividend+1
  2818     0157  120A  118A  2773  120A  118A  	fcall	___awdiv
  2819     015C  0872               	movf	?___awdiv,w
  2820     015D  3E30               	addlw	48
  2821     015E  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2822                           
  2823                           ;micro.c: 214:      clcd_putch(((pre_heat_time/10)%10+'0'),(0x90 + 11));
  2824     0163  309B               	movlw	155
  2825     0164  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0165  1303               	bcf	3,6	;RP1=0, select bank0
  2827     0166  00A8               	movwf	clcd_putch@addr
  2828     0167  300A               	movlw	10
  2829     0168  00A4               	movwf	___awmod@divisor
  2830     0169  3000               	movlw	0
  2831     016A  00A5               	movwf	___awmod@divisor+1
  2832     016B  300A               	movlw	10
  2833     016C  00F2               	movwf	___awdiv@divisor
  2834     016D  3000               	movlw	0
  2835     016E  00F3               	movwf	___awdiv@divisor+1
  2836     016F  083B               	movf	_pre_heat_time,w
  2837     0170  00AB               	movwf	??_set_temp
  2838     0171  01AC               	clrf	??_set_temp+1
  2839     0172  082B               	movf	??_set_temp,w
  2840     0173  00F4               	movwf	___awdiv@dividend
  2841     0174  082C               	movf	??_set_temp+1,w
  2842     0175  00F5               	movwf	___awdiv@dividend+1
  2843     0176  120A  118A  2773  120A  118A  	fcall	___awdiv
  2844     017B  0873               	movf	?___awdiv+1,w
  2845     017C  1283               	bcf	3,5	;RP0=0, select bank0
  2846     017D  1303               	bcf	3,6	;RP1=0, select bank0
  2847     017E  00A7               	movwf	___awmod@dividend+1
  2848     017F  0872               	movf	?___awdiv,w
  2849     0180  00A6               	movwf	___awmod@dividend
  2850     0181  120A  158A  27A7  120A  118A  	fcall	___awmod
  2851     0186  1283               	bcf	3,5	;RP0=0, select bank0
  2852     0187  1303               	bcf	3,6	;RP1=0, select bank0
  2853     0188  0824               	movf	?___awmod,w
  2854     0189  3E30               	addlw	48
  2855     018A  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2856                           
  2857                           ;micro.c: 215:      clcd_putch((pre_heat_time%10+'0'),(0x90 + 12));
  2858     018F  309C               	movlw	156
  2859     0190  1283               	bcf	3,5	;RP0=0, select bank0
  2860     0191  1303               	bcf	3,6	;RP1=0, select bank0
  2861     0192  00A8               	movwf	clcd_putch@addr
  2862     0193  300A               	movlw	10
  2863     0194  00A4               	movwf	___awmod@divisor
  2864     0195  3000               	movlw	0
  2865     0196  00A5               	movwf	___awmod@divisor+1
  2866     0197  083B               	movf	_pre_heat_time,w
  2867     0198  00AB               	movwf	??_set_temp
  2868     0199  01AC               	clrf	??_set_temp+1
  2869     019A  082B               	movf	??_set_temp,w
  2870     019B  00A6               	movwf	___awmod@dividend
  2871     019C  082C               	movf	??_set_temp+1,w
  2872     019D  00A7               	movwf	___awmod@dividend+1
  2873     019E  120A  158A  27A7  120A  118A  	fcall	___awmod
  2874     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2875     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2876     01A5  0824               	movf	?___awmod,w
  2877     01A6  3E30               	addlw	48
  2878     01A7  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  2879     01AC                     l2738:
  2880                           
  2881                           ;micro.c: 211:     while(pre_heat_time!=0)
  2882     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2883     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2884     01AE  083B               	movf	_pre_heat_time,w
  2885     01AF  1D03               	btfss	3,2
  2886     01B0  29B2               	goto	u2761
  2887     01B1  29B3               	goto	u2760
  2888     01B2                     u2761:
  2889     01B2  294A               	goto	l2736
  2890     01B3                     u2760:
  2891     01B3                     l316:
  2892                           
  2893                           ;micro.c: 218:     TMR2ON=0;
  2894     01B3  1112               	bcf	18,2	;volatile
  2895                           
  2896                           ;micro.c: 219:     operational_flag=0x11;
  2897     01B4  3011               	movlw	17
  2898     01B5  00BF               	movwf	_operational_flag
  2899     01B6                     l317:
  2900     01B6  0008               	return
  2901     01B7                     __end_of_set_temp:
  2902                           
  2903                           	psect	text5
  2904     0E03                     __ptext5:	
  2905 ;; *************** function _clear_screen *****************
  2906 ;; Defined at:
  2907 ;;		line 28 in file "micro.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0
  2923 ;;      Temps:          2       0       0       0       0
  2924 ;;      Totals:         2       0       0       0       0
  2925 ;;Total ram usage:        2 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 2
  2928 ;; This function calls:
  2929 ;;		_clcd_write
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;;		_set_time
  2933 ;;		_time_display
  2934 ;;		_set_temp
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938     0E03                     _clear_screen:	
  2939                           ;psect for function _clear_screen
  2940                           
  2941     0E03                     l1558:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
  2944                           
  2945                           
  2946                           ;micro.c: 30:     clcd_write(0x01, 0);
  2947     0E03  01F2               	clrf	clcd_write@mode
  2948     0E04  3001               	movlw	1
  2949     0E05  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  2950     0E0A                     l1560:
  2951                           
  2952                           ;micro.c: 31:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  2953     0E0A  3004               	movlw	4
  2954     0E0B  00F7               	movwf	??_clear_screen+1
  2955     0E0C  303D               	movlw	61
  2956     0E0D  00F6               	movwf	??_clear_screen
  2957     0E0E                     u2927:
  2958     0E0E  0BF6               	decfsz	??_clear_screen,f
  2959     0E0F  2E0E               	goto	u2927
  2960     0E10  0BF7               	decfsz	??_clear_screen+1,f
  2961     0E11  2E0E               	goto	u2927
  2962     0E12  2E13               	nop2
  2963     0E13                     l266:
  2964     0E13  0008               	return
  2965     0E14                     __end_of_clear_screen:
  2966                           
  2967                           	psect	text6
  2968     07D8                     __ptext6:	
  2969 ;; *************** function ___wmul *****************
  2970 ;; Defined at:
  2971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  multiplier      2    2[COMMON] unsigned int 
  2974 ;;  multiplicand    2    4[COMMON] unsigned int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  product         2    6[COMMON] unsigned int 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    2[COMMON] unsigned int 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         4       0       0       0       0
  2987 ;;      Locals:         2       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0
  2989 ;;      Totals:         6       0       0       0       0
  2990 ;;Total ram usage:        6 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_set_temp
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000     07D8                     ___wmul:	
  3001                           ;psect for function ___wmul
  3002                           
  3003     07D8                     l1658:	
  3004                           ;incstack = 0
  3005                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3006                           
  3007     07D8  01F6               	clrf	___wmul@product
  3008     07D9  01F7               	clrf	___wmul@product+1
  3009     07DA                     l1660:
  3010     07DA  1C72               	btfss	___wmul@multiplier,0
  3011     07DB  2FDD               	goto	u1071
  3012     07DC  2FDE               	goto	u1070
  3013     07DD                     u1071:
  3014     07DD  2FE4               	goto	l406
  3015     07DE                     u1070:
  3016     07DE                     l1662:
  3017     07DE  0874               	movf	___wmul@multiplicand,w
  3018     07DF  07F6               	addwf	___wmul@product,f
  3019     07E0  1803               	skipnc
  3020     07E1  0AF7               	incf	___wmul@product+1,f
  3021     07E2  0875               	movf	___wmul@multiplicand+1,w
  3022     07E3  07F7               	addwf	___wmul@product+1,f
  3023     07E4                     l406:
  3024     07E4  3001               	movlw	1
  3025     07E5                     u1085:
  3026     07E5  1003               	clrc
  3027     07E6  0DF4               	rlf	___wmul@multiplicand,f
  3028     07E7  0DF5               	rlf	___wmul@multiplicand+1,f
  3029     07E8  3EFF               	addlw	-1
  3030     07E9  1D03               	skipz
  3031     07EA  2FE5               	goto	u1085
  3032     07EB                     l1664:
  3033     07EB  3001               	movlw	1
  3034     07EC                     u1095:
  3035     07EC  1003               	clrc
  3036     07ED  0CF3               	rrf	___wmul@multiplier+1,f
  3037     07EE  0CF2               	rrf	___wmul@multiplier,f
  3038     07EF  3EFF               	addlw	-1
  3039     07F0  1D03               	skipz
  3040     07F1  2FEC               	goto	u1095
  3041     07F2                     l1666:
  3042     07F2  0872               	movf	___wmul@multiplier,w
  3043     07F3  0473               	iorwf	___wmul@multiplier+1,w
  3044     07F4  1D03               	btfss	3,2
  3045     07F5  2FF7               	goto	u1101
  3046     07F6  2FF8               	goto	u1100
  3047     07F7                     u1101:
  3048     07F7  2FDA               	goto	l1660
  3049     07F8                     u1100:
  3050     07F8                     l1668:
  3051     07F8  0877               	movf	___wmul@product+1,w
  3052     07F9  00F3               	movwf	?___wmul+1
  3053     07FA  0876               	movf	___wmul@product,w
  3054     07FB  00F2               	movwf	?___wmul
  3055     07FC                     l408:
  3056     07FC  0008               	return
  3057     07FD                     __end_of___wmul:
  3058                           
  3059                           	psect	text7
  3060     0EEE                     __ptext7:	
  3061 ;; *************** function ___lwmod *****************
  3062 ;; Defined at:
  3063 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  divisor         2    0[BANK0 ] unsigned int 
  3066 ;;  dividend        2    2[BANK0 ] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  counter         1    4[BANK0 ] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    0[BANK0 ] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       4       0       0       0
  3079 ;;      Locals:         0       1       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       5       0       0       0
  3082 ;;Total ram usage:        5 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_set_temp
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092     0EEE                     ___lwmod:	
  3093                           ;psect for function ___lwmod
  3094                           
  3095     0EEE                     l2242:	
  3096                           ;incstack = 0
  3097                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3098                           
  3099     0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3100     0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3101     0EF0  0820               	movf	___lwmod@divisor,w
  3102     0EF1  0421               	iorwf	___lwmod@divisor+1,w
  3103     0EF2  1903               	btfsc	3,2
  3104     0EF3  2EF5               	goto	u2021
  3105     0EF4  2EF6               	goto	u2020
  3106     0EF5                     u2021:
  3107     0EF5  2F23               	goto	l2260
  3108     0EF6                     u2020:
  3109     0EF6                     l2244:
  3110     0EF6  3001               	movlw	1
  3111     0EF7  00A4               	movwf	___lwmod@counter
  3112     0EF8  2F02               	goto	l2250
  3113     0EF9                     l2246:
  3114     0EF9  3001               	movlw	1
  3115     0EFA                     u2035:
  3116     0EFA  1003               	clrc
  3117     0EFB  0DA0               	rlf	___lwmod@divisor,f
  3118     0EFC  0DA1               	rlf	___lwmod@divisor+1,f
  3119     0EFD  3EFF               	addlw	-1
  3120     0EFE  1D03               	skipz
  3121     0EFF  2EFA               	goto	u2035
  3122     0F00                     l2248:
  3123     0F00  3001               	movlw	1
  3124     0F01  07A4               	addwf	___lwmod@counter,f
  3125     0F02                     l2250:
  3126     0F02  1FA1               	btfss	___lwmod@divisor+1,7
  3127     0F03  2F05               	goto	u2041
  3128     0F04  2F06               	goto	u2040
  3129     0F05                     u2041:
  3130     0F05  2EF9               	goto	l2246
  3131     0F06                     u2040:
  3132     0F06                     l2252:
  3133     0F06  0821               	movf	___lwmod@divisor+1,w
  3134     0F07  0223               	subwf	___lwmod@dividend+1,w
  3135     0F08  1D03               	skipz
  3136     0F09  2F0C               	goto	u2055
  3137     0F0A  0820               	movf	___lwmod@divisor,w
  3138     0F0B  0222               	subwf	___lwmod@dividend,w
  3139     0F0C                     u2055:
  3140     0F0C  1C03               	skipc
  3141     0F0D  2F0F               	goto	u2051
  3142     0F0E  2F10               	goto	u2050
  3143     0F0F                     u2051:
  3144     0F0F  2F16               	goto	l2256
  3145     0F10                     u2050:
  3146     0F10                     l2254:
  3147     0F10  0820               	movf	___lwmod@divisor,w
  3148     0F11  02A2               	subwf	___lwmod@dividend,f
  3149     0F12  0821               	movf	___lwmod@divisor+1,w
  3150     0F13  1C03               	skipc
  3151     0F14  03A3               	decf	___lwmod@dividend+1,f
  3152     0F15  02A3               	subwf	___lwmod@dividend+1,f
  3153     0F16                     l2256:
  3154     0F16  3001               	movlw	1
  3155     0F17                     u2065:
  3156     0F17  1003               	clrc
  3157     0F18  0CA1               	rrf	___lwmod@divisor+1,f
  3158     0F19  0CA0               	rrf	___lwmod@divisor,f
  3159     0F1A  3EFF               	addlw	-1
  3160     0F1B  1D03               	skipz
  3161     0F1C  2F17               	goto	u2065
  3162     0F1D                     l2258:
  3163     0F1D  3001               	movlw	1
  3164     0F1E  02A4               	subwf	___lwmod@counter,f
  3165     0F1F  1D03               	btfss	3,2
  3166     0F20  2F22               	goto	u2071
  3167     0F21  2F23               	goto	u2070
  3168     0F22                     u2071:
  3169     0F22  2F06               	goto	l2252
  3170     0F23                     u2070:
  3171     0F23                     l2260:
  3172     0F23  0823               	movf	___lwmod@dividend+1,w
  3173     0F24  00A1               	movwf	?___lwmod+1
  3174     0F25  0822               	movf	___lwmod@dividend,w
  3175     0F26  00A0               	movwf	?___lwmod
  3176     0F27                     l696:
  3177     0F27  0008               	return
  3178     0F28                     __end_of___lwmod:
  3179                           
  3180                           	psect	text8
  3181     0F65                     __ptext8:	
  3182 ;; *************** function ___lwdiv *****************
  3183 ;; Defined at:
  3184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  divisor         2    2[COMMON] unsigned int 
  3187 ;;  dividend        2    4[COMMON] unsigned int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  quotient        2    6[COMMON] unsigned int 
  3190 ;;  counter         1    8[COMMON] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2    2[COMMON] unsigned int 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3200 ;;      Params:         4       0       0       0       0
  3201 ;;      Locals:         3       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0
  3203 ;;      Totals:         7       0       0       0       0
  3204 ;;Total ram usage:        7 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_set_temp
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214     0F65                     ___lwdiv:	
  3215                           ;psect for function ___lwdiv
  3216                           
  3217     0F65                     l1710:	
  3218                           ;incstack = 0
  3219                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3220                           
  3221     0F65  01F6               	clrf	___lwdiv@quotient
  3222     0F66  01F7               	clrf	___lwdiv@quotient+1
  3223     0F67                     l1712:
  3224     0F67  0872               	movf	___lwdiv@divisor,w
  3225     0F68  0473               	iorwf	___lwdiv@divisor+1,w
  3226     0F69  1903               	btfsc	3,2
  3227     0F6A  2F6C               	goto	u1201
  3228     0F6B  2F6D               	goto	u1200
  3229     0F6C                     u1201:
  3230     0F6C  2FA2               	goto	l1732
  3231     0F6D                     u1200:
  3232     0F6D                     l1714:
  3233     0F6D  3001               	movlw	1
  3234     0F6E  00F8               	movwf	___lwdiv@counter
  3235     0F6F  2F79               	goto	l1720
  3236     0F70                     l1716:
  3237     0F70  3001               	movlw	1
  3238     0F71                     u1215:
  3239     0F71  1003               	clrc
  3240     0F72  0DF2               	rlf	___lwdiv@divisor,f
  3241     0F73  0DF3               	rlf	___lwdiv@divisor+1,f
  3242     0F74  3EFF               	addlw	-1
  3243     0F75  1D03               	skipz
  3244     0F76  2F71               	goto	u1215
  3245     0F77                     l1718:
  3246     0F77  3001               	movlw	1
  3247     0F78  07F8               	addwf	___lwdiv@counter,f
  3248     0F79                     l1720:
  3249     0F79  1FF3               	btfss	___lwdiv@divisor+1,7
  3250     0F7A  2F7C               	goto	u1221
  3251     0F7B  2F7D               	goto	u1220
  3252     0F7C                     u1221:
  3253     0F7C  2F70               	goto	l1716
  3254     0F7D                     u1220:
  3255     0F7D                     l1722:
  3256     0F7D  3001               	movlw	1
  3257     0F7E                     u1235:
  3258     0F7E  1003               	clrc
  3259     0F7F  0DF6               	rlf	___lwdiv@quotient,f
  3260     0F80  0DF7               	rlf	___lwdiv@quotient+1,f
  3261     0F81  3EFF               	addlw	-1
  3262     0F82  1D03               	skipz
  3263     0F83  2F7E               	goto	u1235
  3264     0F84  0873               	movf	___lwdiv@divisor+1,w
  3265     0F85  0275               	subwf	___lwdiv@dividend+1,w
  3266     0F86  1D03               	skipz
  3267     0F87  2F8A               	goto	u1245
  3268     0F88  0872               	movf	___lwdiv@divisor,w
  3269     0F89  0274               	subwf	___lwdiv@dividend,w
  3270     0F8A                     u1245:
  3271     0F8A  1C03               	skipc
  3272     0F8B  2F8D               	goto	u1241
  3273     0F8C  2F8E               	goto	u1240
  3274     0F8D                     u1241:
  3275     0F8D  2F95               	goto	l1728
  3276     0F8E                     u1240:
  3277     0F8E                     l1724:
  3278     0F8E  0872               	movf	___lwdiv@divisor,w
  3279     0F8F  02F4               	subwf	___lwdiv@dividend,f
  3280     0F90  0873               	movf	___lwdiv@divisor+1,w
  3281     0F91  1C03               	skipc
  3282     0F92  03F5               	decf	___lwdiv@dividend+1,f
  3283     0F93  02F5               	subwf	___lwdiv@dividend+1,f
  3284     0F94                     l1726:
  3285     0F94  1476               	bsf	___lwdiv@quotient,0
  3286     0F95                     l1728:
  3287     0F95  3001               	movlw	1
  3288     0F96                     u1255:
  3289     0F96  1003               	clrc
  3290     0F97  0CF3               	rrf	___lwdiv@divisor+1,f
  3291     0F98  0CF2               	rrf	___lwdiv@divisor,f
  3292     0F99  3EFF               	addlw	-1
  3293     0F9A  1D03               	skipz
  3294     0F9B  2F96               	goto	u1255
  3295     0F9C                     l1730:
  3296     0F9C  3001               	movlw	1
  3297     0F9D  02F8               	subwf	___lwdiv@counter,f
  3298     0F9E  1D03               	btfss	3,2
  3299     0F9F  2FA1               	goto	u1261
  3300     0FA0  2FA2               	goto	u1260
  3301     0FA1                     u1261:
  3302     0FA1  2F7D               	goto	l1722
  3303     0FA2                     u1260:
  3304     0FA2                     l1732:
  3305     0FA2  0877               	movf	___lwdiv@quotient+1,w
  3306     0FA3  00F3               	movwf	?___lwdiv+1
  3307     0FA4  0876               	movf	___lwdiv@quotient,w
  3308     0FA5  00F2               	movwf	?___lwdiv
  3309     0FA6                     l686:
  3310     0FA6  0008               	return
  3311     0FA7                     __end_of___lwdiv:
  3312                           
  3313                           	psect	text9
  3314     0FA7                     __ptext9:	
  3315 ;; *************** function ___awmod *****************
  3316 ;; Defined at:
  3317 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  divisor         2    4[BANK0 ] int 
  3320 ;;  dividend        2    6[BANK0 ] int 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  sign            1    7[COMMON] unsigned char 
  3323 ;;  counter         1    6[COMMON] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    4[BANK0 ] int 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       4       0       0       0
  3334 ;;      Locals:         2       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0
  3336 ;;      Totals:         2       4       0       0       0
  3337 ;;Total ram usage:        6 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_set_temp
  3344 ;;		_set_time
  3345 ;;		_time_display
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349     0FA7                     ___awmod:	
  3350                           ;psect for function ___awmod
  3351                           
  3352     0FA7                     l2204:	
  3353                           ;incstack = 0
  3354                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3355                           
  3356     0FA7  01F7               	clrf	___awmod@sign
  3357     0FA8                     l2206:
  3358     0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3359     0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3360     0FAA  1FA7               	btfss	___awmod@dividend+1,7
  3361     0FAB  2FAD               	goto	u1931
  3362     0FAC  2FAE               	goto	u1930
  3363     0FAD                     u1931:
  3364     0FAD  2FB5               	goto	l2212
  3365     0FAE                     u1930:
  3366     0FAE                     l2208:
  3367     0FAE  09A6               	comf	___awmod@dividend,f
  3368     0FAF  09A7               	comf	___awmod@dividend+1,f
  3369     0FB0  0AA6               	incf	___awmod@dividend,f
  3370     0FB1  1903               	skipnz
  3371     0FB2  0AA7               	incf	___awmod@dividend+1,f
  3372     0FB3                     l2210:
  3373     0FB3  3001               	movlw	1
  3374     0FB4  00F7               	movwf	___awmod@sign
  3375     0FB5                     l2212:
  3376     0FB5  1FA5               	btfss	___awmod@divisor+1,7
  3377     0FB6  2FB8               	goto	u1941
  3378     0FB7  2FB9               	goto	u1940
  3379     0FB8                     u1941:
  3380     0FB8  2FBE               	goto	l2216
  3381     0FB9                     u1940:
  3382     0FB9                     l2214:
  3383     0FB9  09A4               	comf	___awmod@divisor,f
  3384     0FBA  09A5               	comf	___awmod@divisor+1,f
  3385     0FBB  0AA4               	incf	___awmod@divisor,f
  3386     0FBC  1903               	skipnz
  3387     0FBD  0AA5               	incf	___awmod@divisor+1,f
  3388     0FBE                     l2216:
  3389     0FBE  0824               	movf	___awmod@divisor,w
  3390     0FBF  0425               	iorwf	___awmod@divisor+1,w
  3391     0FC0  1903               	btfsc	3,2
  3392     0FC1  2FC3               	goto	u1951
  3393     0FC2  2FC4               	goto	u1950
  3394     0FC3                     u1951:
  3395     0FC3  2FF1               	goto	l2234
  3396     0FC4                     u1950:
  3397     0FC4                     l2218:
  3398     0FC4  3001               	movlw	1
  3399     0FC5  00F6               	movwf	___awmod@counter
  3400     0FC6  2FD0               	goto	l2224
  3401     0FC7                     l2220:
  3402     0FC7  3001               	movlw	1
  3403     0FC8                     u1965:
  3404     0FC8  1003               	clrc
  3405     0FC9  0DA4               	rlf	___awmod@divisor,f
  3406     0FCA  0DA5               	rlf	___awmod@divisor+1,f
  3407     0FCB  3EFF               	addlw	-1
  3408     0FCC  1D03               	skipz
  3409     0FCD  2FC8               	goto	u1965
  3410     0FCE                     l2222:
  3411     0FCE  3001               	movlw	1
  3412     0FCF  07F6               	addwf	___awmod@counter,f
  3413     0FD0                     l2224:
  3414     0FD0  1FA5               	btfss	___awmod@divisor+1,7
  3415     0FD1  2FD3               	goto	u1971
  3416     0FD2  2FD4               	goto	u1970
  3417     0FD3                     u1971:
  3418     0FD3  2FC7               	goto	l2220
  3419     0FD4                     u1970:
  3420     0FD4                     l2226:
  3421     0FD4  0825               	movf	___awmod@divisor+1,w
  3422     0FD5  0227               	subwf	___awmod@dividend+1,w
  3423     0FD6  1D03               	skipz
  3424     0FD7  2FDA               	goto	u1985
  3425     0FD8  0824               	movf	___awmod@divisor,w
  3426     0FD9  0226               	subwf	___awmod@dividend,w
  3427     0FDA                     u1985:
  3428     0FDA  1C03               	skipc
  3429     0FDB  2FDD               	goto	u1981
  3430     0FDC  2FDE               	goto	u1980
  3431     0FDD                     u1981:
  3432     0FDD  2FE4               	goto	l2230
  3433     0FDE                     u1980:
  3434     0FDE                     l2228:
  3435     0FDE  0824               	movf	___awmod@divisor,w
  3436     0FDF  02A6               	subwf	___awmod@dividend,f
  3437     0FE0  0825               	movf	___awmod@divisor+1,w
  3438     0FE1  1C03               	skipc
  3439     0FE2  03A7               	decf	___awmod@dividend+1,f
  3440     0FE3  02A7               	subwf	___awmod@dividend+1,f
  3441     0FE4                     l2230:
  3442     0FE4  3001               	movlw	1
  3443     0FE5                     u1995:
  3444     0FE5  1003               	clrc
  3445     0FE6  0CA5               	rrf	___awmod@divisor+1,f
  3446     0FE7  0CA4               	rrf	___awmod@divisor,f
  3447     0FE8  3EFF               	addlw	-1
  3448     0FE9  1D03               	skipz
  3449     0FEA  2FE5               	goto	u1995
  3450     0FEB                     l2232:
  3451     0FEB  3001               	movlw	1
  3452     0FEC  02F6               	subwf	___awmod@counter,f
  3453     0FED  1D03               	btfss	3,2
  3454     0FEE  2FF0               	goto	u2001
  3455     0FEF  2FF1               	goto	u2000
  3456     0FF0                     u2001:
  3457     0FF0  2FD4               	goto	l2226
  3458     0FF1                     u2000:
  3459     0FF1                     l2234:
  3460     0FF1  0877               	movf	___awmod@sign,w
  3461     0FF2  1903               	btfsc	3,2
  3462     0FF3  2FF5               	goto	u2011
  3463     0FF4  2FF6               	goto	u2010
  3464     0FF5                     u2011:
  3465     0FF5  2FFB               	goto	l2238
  3466     0FF6                     u2010:
  3467     0FF6                     l2236:
  3468     0FF6  09A6               	comf	___awmod@dividend,f
  3469     0FF7  09A7               	comf	___awmod@dividend+1,f
  3470     0FF8  0AA6               	incf	___awmod@dividend,f
  3471     0FF9  1903               	skipnz
  3472     0FFA  0AA7               	incf	___awmod@dividend+1,f
  3473     0FFB                     l2238:
  3474     0FFB  0827               	movf	___awmod@dividend+1,w
  3475     0FFC  00A5               	movwf	?___awmod+1
  3476     0FFD  0826               	movf	___awmod@dividend,w
  3477     0FFE  00A4               	movwf	?___awmod
  3478     0FFF                     l572:
  3479     0FFF  0008               	return
  3480     1000                     __end_of___awmod:
  3481                           
  3482                           	psect	text10
  3483     0773                     __ptext10:	
  3484 ;; *************** function ___awdiv *****************
  3485 ;; Defined at:
  3486 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  divisor         2    2[COMMON] int 
  3489 ;;  dividend        2    4[COMMON] int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quotient        2    2[BANK0 ] int 
  3492 ;;  sign            1    1[BANK0 ] unsigned char 
  3493 ;;  counter         1    0[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  2    2[COMMON] int 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         4       0       0       0       0
  3504 ;;      Locals:         0       4       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         4       4       0       0       0
  3507 ;;Total ram usage:        8 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_set_time
  3514 ;;		_time_display
  3515 ;;		_set_temp
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519     0773                     ___awdiv:	
  3520                           ;psect for function ___awdiv
  3521                           
  3522     0773                     l2534:	
  3523                           ;incstack = 0
  3524                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3525                           
  3526     0773  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0774  1303               	bcf	3,6	;RP1=0, select bank0
  3528     0775  01A1               	clrf	___awdiv@sign
  3529     0776                     l2536:
  3530     0776  1FF3               	btfss	___awdiv@divisor+1,7
  3531     0777  2F79               	goto	u2441
  3532     0778  2F7A               	goto	u2440
  3533     0779                     u2441:
  3534     0779  2F81               	goto	l2542
  3535     077A                     u2440:
  3536     077A                     l2538:
  3537     077A  09F2               	comf	___awdiv@divisor,f
  3538     077B  09F3               	comf	___awdiv@divisor+1,f
  3539     077C  0AF2               	incf	___awdiv@divisor,f
  3540     077D  1903               	skipnz
  3541     077E  0AF3               	incf	___awdiv@divisor+1,f
  3542     077F                     l2540:
  3543     077F  3001               	movlw	1
  3544     0780  00A1               	movwf	___awdiv@sign
  3545     0781                     l2542:
  3546     0781  1FF5               	btfss	___awdiv@dividend+1,7
  3547     0782  2F84               	goto	u2451
  3548     0783  2F85               	goto	u2450
  3549     0784                     u2451:
  3550     0784  2F8C               	goto	l2548
  3551     0785                     u2450:
  3552     0785                     l2544:
  3553     0785  09F4               	comf	___awdiv@dividend,f
  3554     0786  09F5               	comf	___awdiv@dividend+1,f
  3555     0787  0AF4               	incf	___awdiv@dividend,f
  3556     0788  1903               	skipnz
  3557     0789  0AF5               	incf	___awdiv@dividend+1,f
  3558     078A                     l2546:
  3559     078A  3001               	movlw	1
  3560     078B  06A1               	xorwf	___awdiv@sign,f
  3561     078C                     l2548:
  3562     078C  01A2               	clrf	___awdiv@quotient
  3563     078D  01A3               	clrf	___awdiv@quotient+1
  3564     078E                     l2550:
  3565     078E  0872               	movf	___awdiv@divisor,w
  3566     078F  0473               	iorwf	___awdiv@divisor+1,w
  3567     0790  1903               	btfsc	3,2
  3568     0791  2F93               	goto	u2461
  3569     0792  2F94               	goto	u2460
  3570     0793                     u2461:
  3571     0793  2FC9               	goto	l2570
  3572     0794                     u2460:
  3573     0794                     l2552:
  3574     0794  3001               	movlw	1
  3575     0795  00A0               	movwf	___awdiv@counter
  3576     0796  2FA0               	goto	l2558
  3577     0797                     l2554:
  3578     0797  3001               	movlw	1
  3579     0798                     u2475:
  3580     0798  1003               	clrc
  3581     0799  0DF2               	rlf	___awdiv@divisor,f
  3582     079A  0DF3               	rlf	___awdiv@divisor+1,f
  3583     079B  3EFF               	addlw	-1
  3584     079C  1D03               	skipz
  3585     079D  2F98               	goto	u2475
  3586     079E                     l2556:
  3587     079E  3001               	movlw	1
  3588     079F  07A0               	addwf	___awdiv@counter,f
  3589     07A0                     l2558:
  3590     07A0  1FF3               	btfss	___awdiv@divisor+1,7
  3591     07A1  2FA3               	goto	u2481
  3592     07A2  2FA4               	goto	u2480
  3593     07A3                     u2481:
  3594     07A3  2F97               	goto	l2554
  3595     07A4                     u2480:
  3596     07A4                     l2560:
  3597     07A4  3001               	movlw	1
  3598     07A5                     u2495:
  3599     07A5  1003               	clrc
  3600     07A6  0DA2               	rlf	___awdiv@quotient,f
  3601     07A7  0DA3               	rlf	___awdiv@quotient+1,f
  3602     07A8  3EFF               	addlw	-1
  3603     07A9  1D03               	skipz
  3604     07AA  2FA5               	goto	u2495
  3605     07AB  0873               	movf	___awdiv@divisor+1,w
  3606     07AC  0275               	subwf	___awdiv@dividend+1,w
  3607     07AD  1D03               	skipz
  3608     07AE  2FB1               	goto	u2505
  3609     07AF  0872               	movf	___awdiv@divisor,w
  3610     07B0  0274               	subwf	___awdiv@dividend,w
  3611     07B1                     u2505:
  3612     07B1  1C03               	skipc
  3613     07B2  2FB4               	goto	u2501
  3614     07B3  2FB5               	goto	u2500
  3615     07B4                     u2501:
  3616     07B4  2FBC               	goto	l2566
  3617     07B5                     u2500:
  3618     07B5                     l2562:
  3619     07B5  0872               	movf	___awdiv@divisor,w
  3620     07B6  02F4               	subwf	___awdiv@dividend,f
  3621     07B7  0873               	movf	___awdiv@divisor+1,w
  3622     07B8  1C03               	skipc
  3623     07B9  03F5               	decf	___awdiv@dividend+1,f
  3624     07BA  02F5               	subwf	___awdiv@dividend+1,f
  3625     07BB                     l2564:
  3626     07BB  1422               	bsf	___awdiv@quotient,0
  3627     07BC                     l2566:
  3628     07BC  3001               	movlw	1
  3629     07BD                     u2515:
  3630     07BD  1003               	clrc
  3631     07BE  0CF3               	rrf	___awdiv@divisor+1,f
  3632     07BF  0CF2               	rrf	___awdiv@divisor,f
  3633     07C0  3EFF               	addlw	-1
  3634     07C1  1D03               	skipz
  3635     07C2  2FBD               	goto	u2515
  3636     07C3                     l2568:
  3637     07C3  3001               	movlw	1
  3638     07C4  02A0               	subwf	___awdiv@counter,f
  3639     07C5  1D03               	btfss	3,2
  3640     07C6  2FC8               	goto	u2521
  3641     07C7  2FC9               	goto	u2520
  3642     07C8                     u2521:
  3643     07C8  2FA4               	goto	l2560
  3644     07C9                     u2520:
  3645     07C9                     l2570:
  3646     07C9  0821               	movf	___awdiv@sign,w
  3647     07CA  1903               	btfsc	3,2
  3648     07CB  2FCD               	goto	u2531
  3649     07CC  2FCE               	goto	u2530
  3650     07CD                     u2531:
  3651     07CD  2FD3               	goto	l2574
  3652     07CE                     u2530:
  3653     07CE                     l2572:
  3654     07CE  09A2               	comf	___awdiv@quotient,f
  3655     07CF  09A3               	comf	___awdiv@quotient+1,f
  3656     07D0  0AA2               	incf	___awdiv@quotient,f
  3657     07D1  1903               	skipnz
  3658     07D2  0AA3               	incf	___awdiv@quotient+1,f
  3659     07D3                     l2574:
  3660     07D3  0823               	movf	___awdiv@quotient+1,w
  3661     07D4  00F3               	movwf	?___awdiv+1
  3662     07D5  0822               	movf	___awdiv@quotient,w
  3663     07D6  00F2               	movwf	?___awdiv
  3664     07D7                     l559:
  3665     07D7  0008               	return
  3666     07D8                     __end_of___awdiv:
  3667                           
  3668                           	psect	text11
  3669     04DD                     __ptext11:	
  3670 ;; *************** function _read_matrix_keypad *****************
  3671 ;; Defined at:
  3672 ;;		line 111 in file "matrix_keypad.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  mode            1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  mode            1    4[COMMON] unsigned char 
  3677 ;;  key             1    5[COMMON] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         2       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         2       0       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 2
  3694 ;; This function calls:
  3695 ;;		_scan_keypad
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701     04DD                     _read_matrix_keypad:	
  3702                           ;psect for function _read_matrix_keypad
  3703                           
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  3707                           ;read_matrix_keypad@mode stored from wreg
  3708     04DD  00F4               	movwf	read_matrix_keypad@mode
  3709     04DE                     l1774:
  3710                           
  3711                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
  3712     04DE  120A  118A  26C7  120A  118A  	fcall	_scan_keypad
  3713     04E3  00F5               	movwf	read_matrix_keypad@key
  3714     04E4                     l1776:
  3715                           
  3716                           ;matrix_keypad.c: 118:     if (mode == 0)
  3717     04E4  0874               	movf	read_matrix_keypad@mode,w
  3718     04E5  1D03               	btfss	3,2
  3719     04E6  2CE8               	goto	u1331
  3720     04E7  2CE9               	goto	u1330
  3721     04E8                     u1331:
  3722     04E8  2CEB               	goto	l1784
  3723     04E9                     u1330:
  3724     04E9                     l1778:
  3725                           
  3726                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
  3727     04E9  0875               	movf	read_matrix_keypad@key,w
  3728     04EA  2CFF               	goto	l185
  3729     04EB                     l1784:
  3730                           
  3731                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
  3732     04EB  0A75               	incf	read_matrix_keypad@key,w
  3733     04EC  1903               	btfsc	3,2
  3734     04ED  2CEF               	goto	u1341
  3735     04EE  2CF0               	goto	u1340
  3736     04EF                     u1341:
  3737     04EF  2CF7               	goto	l1796
  3738     04F0                     u1340:
  3739     04F0                     l1786:
  3740     04F0  087B               	movf	read_matrix_keypad@once,w
  3741     04F1  1903               	btfsc	3,2
  3742     04F2  2CF4               	goto	u1351
  3743     04F3  2CF5               	goto	u1350
  3744     04F4                     u1351:
  3745     04F4  2CF7               	goto	l1796
  3746     04F5                     u1350:
  3747     04F5                     l1788:
  3748                           
  3749                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
  3750     04F5  01FB               	clrf	read_matrix_keypad@once
  3751     04F6  2CE9               	goto	l1778
  3752     04F7                     l1796:
  3753     04F7  0A75               	incf	read_matrix_keypad@key,w
  3754     04F8  1D03               	btfss	3,2
  3755     04F9  2CFB               	goto	u1361
  3756     04FA  2CFC               	goto	u1360
  3757     04FB                     u1361:
  3758     04FB  2CFE               	goto	l1800
  3759     04FC                     u1360:
  3760     04FC                     l1798:
  3761                           
  3762                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
  3763     04FC  3001               	movlw	1
  3764     04FD  00FB               	movwf	read_matrix_keypad@once
  3765     04FE                     l1800:
  3766                           
  3767                           ;matrix_keypad.c: 136:     return 0xFF;
  3768     04FE  30FF               	movlw	255
  3769     04FF                     l185:
  3770     04FF  0008               	return
  3771     0500                     __end_of_read_matrix_keypad:
  3772                           
  3773                           	psect	text12
  3774     06C7                     __ptext12:	
  3775 ;; *************** function _scan_keypad *****************
  3776 ;; Defined at:
  3777 ;;		line 24 in file "matrix_keypad.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  i               2    2[COMMON] int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      unsigned char 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       0       0       0
  3792 ;;      Locals:         2       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0
  3794 ;;      Totals:         2       0       0       0       0
  3795 ;;Total ram usage:        2 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_read_matrix_keypad
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805     06C7                     _scan_keypad:	
  3806                           ;psect for function _scan_keypad
  3807                           
  3808     06C7                     l1572:	
  3809                           ;incstack = 0
  3810                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  3811                           
  3812                           
  3813                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
  3814     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3815     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3816     06C9  1188               	bcf	8,3	;volatile
  3817                           
  3818                           ;matrix_keypad.c: 29:     RD2 = 1;
  3819     06CA  1508               	bsf	8,2	;volatile
  3820                           
  3821                           ;matrix_keypad.c: 30:     RD1 = 1;
  3822     06CB  1488               	bsf	8,1	;volatile
  3823                           
  3824                           ;matrix_keypad.c: 31:     RD0 = 1;
  3825     06CC  1408               	bsf	8,0	;volatile
  3826     06CD                     l1574:
  3827                           
  3828                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
  3829     06CD  3064               	movlw	100
  3830     06CE  00F2               	movwf	scan_keypad@i
  3831     06CF  3000               	movlw	0
  3832     06D0  00F3               	movwf	scan_keypad@i+1
  3833     06D1                     l1576:
  3834     06D1  30FF               	movlw	255
  3835     06D2  07F2               	addwf	scan_keypad@i,f
  3836     06D3  1803               	skipnc
  3837     06D4  0AF3               	incf	scan_keypad@i+1,f
  3838     06D5  30FF               	movlw	255
  3839     06D6  07F3               	addwf	scan_keypad@i+1,f
  3840     06D7  0A72               	incf	scan_keypad@i,w
  3841     06D8  1D03               	skipz
  3842     06D9  2EDE               	goto	u911
  3843     06DA  0A73               	incf	scan_keypad@i+1,w
  3844     06DB  1D03               	btfss	3,2
  3845     06DC  2EDE               	goto	u911
  3846     06DD  2EDF               	goto	u910
  3847     06DE                     u911:
  3848     06DE  2ED1               	goto	l1576
  3849     06DF                     u910:
  3850     06DF                     l149:
  3851                           
  3852                           ;matrix_keypad.c: 35:     if (RB0 == 0)
  3853     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3854     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3855     06E1  1806               	btfsc	6,0	;volatile
  3856     06E2  2EE4               	goto	u921
  3857     06E3  2EE5               	goto	u920
  3858     06E4                     u921:
  3859     06E4  2EE7               	goto	l150
  3860     06E5                     u920:
  3861     06E5                     l1578:
  3862                           
  3863                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
  3864     06E5  3001               	movlw	1
  3865     06E6  2F72               	goto	l151
  3866     06E7                     l150:	
  3867                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
  3868                           
  3869     06E7  1886               	btfsc	6,1	;volatile
  3870     06E8  2EEA               	goto	u931
  3871     06E9  2EEB               	goto	u930
  3872     06EA                     u931:
  3873     06EA  2EED               	goto	l153
  3874     06EB                     u930:
  3875     06EB                     l1584:
  3876                           
  3877                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
  3878     06EB  3002               	movlw	2
  3879     06EC  2F72               	goto	l151
  3880     06ED                     l153:	
  3881                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
  3882                           
  3883     06ED  1906               	btfsc	6,2	;volatile
  3884     06EE  2EF0               	goto	u941
  3885     06EF  2EF1               	goto	u940
  3886     06F0                     u941:
  3887     06F0  2EF3               	goto	l152
  3888     06F1                     u940:
  3889     06F1                     l1590:
  3890                           
  3891                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
  3892     06F1  3003               	movlw	3
  3893     06F2  2F72               	goto	l151
  3894     06F3                     l152:
  3895                           
  3896                           ;matrix_keypad.c: 48:     RD3 = 1;
  3897     06F3  1588               	bsf	8,3	;volatile
  3898                           
  3899                           ;matrix_keypad.c: 49:     RD2 = 0;
  3900     06F4  1108               	bcf	8,2	;volatile
  3901                           
  3902                           ;matrix_keypad.c: 50:     RD1 = 1;
  3903     06F5  1488               	bsf	8,1	;volatile
  3904                           
  3905                           ;matrix_keypad.c: 51:     RD0 = 1;
  3906     06F6  1408               	bsf	8,0	;volatile
  3907     06F7                     l1594:
  3908                           
  3909                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
  3910     06F7  3064               	movlw	100
  3911     06F8  00F2               	movwf	scan_keypad@i
  3912     06F9  3000               	movlw	0
  3913     06FA  00F3               	movwf	scan_keypad@i+1
  3914     06FB                     l1596:
  3915     06FB  30FF               	movlw	255
  3916     06FC  07F2               	addwf	scan_keypad@i,f
  3917     06FD  1803               	skipnc
  3918     06FE  0AF3               	incf	scan_keypad@i+1,f
  3919     06FF  30FF               	movlw	255
  3920     0700  07F3               	addwf	scan_keypad@i+1,f
  3921     0701  0A72               	incf	scan_keypad@i,w
  3922     0702  1D03               	skipz
  3923     0703  2F08               	goto	u951
  3924     0704  0A73               	incf	scan_keypad@i+1,w
  3925     0705  1D03               	btfss	3,2
  3926     0706  2F08               	goto	u951
  3927     0707  2F09               	goto	u950
  3928     0708                     u951:
  3929     0708  2EFB               	goto	l1596
  3930     0709                     u950:
  3931     0709                     l158:
  3932                           
  3933                           ;matrix_keypad.c: 55:     if (RB0 == 0)
  3934     0709  1283               	bcf	3,5	;RP0=0, select bank0
  3935     070A  1303               	bcf	3,6	;RP1=0, select bank0
  3936     070B  1806               	btfsc	6,0	;volatile
  3937     070C  2F0E               	goto	u961
  3938     070D  2F0F               	goto	u960
  3939     070E                     u961:
  3940     070E  2F11               	goto	l159
  3941     070F                     u960:
  3942     070F                     l1598:
  3943                           
  3944                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
  3945     070F  3004               	movlw	4
  3946     0710  2F72               	goto	l151
  3947     0711                     l159:	
  3948                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
  3949                           
  3950     0711  1886               	btfsc	6,1	;volatile
  3951     0712  2F14               	goto	u971
  3952     0713  2F15               	goto	u970
  3953     0714                     u971:
  3954     0714  2F17               	goto	l161
  3955     0715                     u970:
  3956     0715                     l1604:
  3957                           
  3958                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
  3959     0715  3005               	movlw	5
  3960     0716  2F72               	goto	l151
  3961     0717                     l161:	
  3962                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
  3963                           
  3964     0717  1906               	btfsc	6,2	;volatile
  3965     0718  2F1A               	goto	u981
  3966     0719  2F1B               	goto	u980
  3967     071A                     u981:
  3968     071A  2F1D               	goto	l160
  3969     071B                     u980:
  3970     071B                     l1610:
  3971                           
  3972                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
  3973     071B  3006               	movlw	6
  3974     071C  2F72               	goto	l151
  3975     071D                     l160:
  3976                           
  3977                           ;matrix_keypad.c: 68:     RD3 = 1;
  3978     071D  1588               	bsf	8,3	;volatile
  3979                           
  3980                           ;matrix_keypad.c: 69:     RD2 = 1;
  3981     071E  1508               	bsf	8,2	;volatile
  3982                           
  3983                           ;matrix_keypad.c: 70:     RD1 = 0;
  3984     071F  1088               	bcf	8,1	;volatile
  3985                           
  3986                           ;matrix_keypad.c: 71:     RD0 = 1;
  3987     0720  1408               	bsf	8,0	;volatile
  3988     0721                     l1614:
  3989                           
  3990                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
  3991     0721  3064               	movlw	100
  3992     0722  00F2               	movwf	scan_keypad@i
  3993     0723  3000               	movlw	0
  3994     0724  00F3               	movwf	scan_keypad@i+1
  3995     0725                     l1616:
  3996     0725  30FF               	movlw	255
  3997     0726  07F2               	addwf	scan_keypad@i,f
  3998     0727  1803               	skipnc
  3999     0728  0AF3               	incf	scan_keypad@i+1,f
  4000     0729  30FF               	movlw	255
  4001     072A  07F3               	addwf	scan_keypad@i+1,f
  4002     072B  0A72               	incf	scan_keypad@i,w
  4003     072C  1D03               	skipz
  4004     072D  2F32               	goto	u991
  4005     072E  0A73               	incf	scan_keypad@i+1,w
  4006     072F  1D03               	btfss	3,2
  4007     0730  2F32               	goto	u991
  4008     0731  2F33               	goto	u990
  4009     0732                     u991:
  4010     0732  2F25               	goto	l1616
  4011     0733                     u990:
  4012     0733                     l166:
  4013                           
  4014                           ;matrix_keypad.c: 75:     if (RB0 == 0)
  4015     0733  1283               	bcf	3,5	;RP0=0, select bank0
  4016     0734  1303               	bcf	3,6	;RP1=0, select bank0
  4017     0735  1806               	btfsc	6,0	;volatile
  4018     0736  2F38               	goto	u1001
  4019     0737  2F39               	goto	u1000
  4020     0738                     u1001:
  4021     0738  2F3B               	goto	l167
  4022     0739                     u1000:
  4023     0739                     l1618:
  4024                           
  4025                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
  4026     0739  3007               	movlw	7
  4027     073A  2F72               	goto	l151
  4028     073B                     l167:	
  4029                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
  4030                           
  4031     073B  1886               	btfsc	6,1	;volatile
  4032     073C  2F3E               	goto	u1011
  4033     073D  2F3F               	goto	u1010
  4034     073E                     u1011:
  4035     073E  2F41               	goto	l169
  4036     073F                     u1010:
  4037     073F                     l1624:
  4038                           
  4039                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
  4040     073F  3008               	movlw	8
  4041     0740  2F72               	goto	l151
  4042     0741                     l169:	
  4043                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
  4044                           
  4045     0741  1906               	btfsc	6,2	;volatile
  4046     0742  2F44               	goto	u1021
  4047     0743  2F45               	goto	u1020
  4048     0744                     u1021:
  4049     0744  2F47               	goto	l168
  4050     0745                     u1020:
  4051     0745                     l1630:
  4052                           
  4053                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
  4054     0745  3009               	movlw	9
  4055     0746  2F72               	goto	l151
  4056     0747                     l168:
  4057                           
  4058                           ;matrix_keypad.c: 88:     RD3 = 1;
  4059     0747  1588               	bsf	8,3	;volatile
  4060                           
  4061                           ;matrix_keypad.c: 89:     RD2 = 1;
  4062     0748  1508               	bsf	8,2	;volatile
  4063                           
  4064                           ;matrix_keypad.c: 90:     RD1 = 1;
  4065     0749  1488               	bsf	8,1	;volatile
  4066                           
  4067                           ;matrix_keypad.c: 91:     RD0 = 0;
  4068     074A  1008               	bcf	8,0	;volatile
  4069     074B                     l1634:
  4070                           
  4071                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
  4072     074B  3064               	movlw	100
  4073     074C  00F2               	movwf	scan_keypad@i
  4074     074D  3000               	movlw	0
  4075     074E  00F3               	movwf	scan_keypad@i+1
  4076     074F                     l1636:
  4077     074F  30FF               	movlw	255
  4078     0750  07F2               	addwf	scan_keypad@i,f
  4079     0751  1803               	skipnc
  4080     0752  0AF3               	incf	scan_keypad@i+1,f
  4081     0753  30FF               	movlw	255
  4082     0754  07F3               	addwf	scan_keypad@i+1,f
  4083     0755  0A72               	incf	scan_keypad@i,w
  4084     0756  1D03               	skipz
  4085     0757  2F5C               	goto	u1031
  4086     0758  0A73               	incf	scan_keypad@i+1,w
  4087     0759  1D03               	btfss	3,2
  4088     075A  2F5C               	goto	u1031
  4089     075B  2F5D               	goto	u1030
  4090     075C                     u1031:
  4091     075C  2F4F               	goto	l1636
  4092     075D                     u1030:
  4093     075D                     l174:
  4094                           
  4095                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  4096     075D  1283               	bcf	3,5	;RP0=0, select bank0
  4097     075E  1303               	bcf	3,6	;RP1=0, select bank0
  4098     075F  1806               	btfsc	6,0	;volatile
  4099     0760  2F62               	goto	u1041
  4100     0761  2F63               	goto	u1040
  4101     0762                     u1041:
  4102     0762  2F65               	goto	l175
  4103     0763                     u1040:
  4104     0763                     l1638:
  4105                           
  4106                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  4107     0763  302A               	movlw	42
  4108     0764  2F72               	goto	l151
  4109     0765                     l175:	
  4110                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  4111                           
  4112     0765  1886               	btfsc	6,1	;volatile
  4113     0766  2F68               	goto	u1051
  4114     0767  2F69               	goto	u1050
  4115     0768                     u1051:
  4116     0768  2F6B               	goto	l177
  4117     0769                     u1050:
  4118     0769                     l1644:
  4119                           
  4120                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  4121     0769  3000               	movlw	0
  4122     076A  2F72               	goto	l151
  4123     076B                     l177:	
  4124                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  4125                           
  4126     076B  1906               	btfsc	6,2	;volatile
  4127     076C  2F6E               	goto	u1061
  4128     076D  2F6F               	goto	u1060
  4129     076E                     u1061:
  4130     076E  2F71               	goto	l1654
  4131     076F                     u1060:
  4132     076F                     l1650:
  4133                           
  4134                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  4135     076F  3023               	movlw	35
  4136     0770  2F72               	goto	l151
  4137     0771                     l1654:
  4138                           
  4139                           ;matrix_keypad.c: 108:     return 0xFF;
  4140     0771  30FF               	movlw	255
  4141     0772                     l151:
  4142     0772  0008               	return
  4143     0773                     __end_of_scan_keypad:
  4144                           
  4145                           	psect	text13
  4146     0480                     __ptext13:	
  4147 ;; *************** function _power_on_screen *****************
  4148 ;; Defined at:
  4149 ;;		line 10 in file "micro.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  j               2   15[BANK0 ] unsigned int 
  4154 ;;  i               2   13[BANK0 ] unsigned int 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       0       0       0       0
  4165 ;;      Locals:         0       4       0       0       0
  4166 ;;      Temps:          0       3       0       0       0
  4167 ;;      Totals:         0       7       0       0       0
  4168 ;;Total ram usage:        7 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 3
  4171 ;; This function calls:
  4172 ;;		_clcd_print
  4173 ;;		_clcd_putch
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179     0480                     _power_on_screen:	
  4180                           ;psect for function _power_on_screen
  4181                           
  4182     0480                     l1804:	
  4183                           ;incstack = 0
  4184                           ; Regs used in _power_on_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4185                           
  4186                           
  4187                           ;micro.c: 13: for(unsigned int i=0; i<16;i++)
  4188     0480  1283               	bcf	3,5	;RP0=0, select bank0
  4189     0481  1303               	bcf	3,6	;RP1=0, select bank0
  4190     0482  01AD               	clrf	power_on_screen@i
  4191     0483  01AE               	clrf	power_on_screen@i+1
  4192     0484                     l1810:
  4193                           
  4194                           ;micro.c: 14: { clcd_putch(0xFF,(0x80 + i));
  4195     0484  082D               	movf	power_on_screen@i,w
  4196     0485  3E80               	addlw	128
  4197     0486  00A8               	movwf	clcd_putch@addr
  4198     0487  30FF               	movlw	255
  4199     0488  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  4200     048D                     l1812:
  4201                           
  4202                           ;micro.c: 17: }
  4203     048D  3001               	movlw	1
  4204     048E  1283               	bcf	3,5	;RP0=0, select bank0
  4205     048F  1303               	bcf	3,6	;RP1=0, select bank0
  4206     0490  07AD               	addwf	power_on_screen@i,f
  4207     0491  1803               	skipnc
  4208     0492  0AAE               	incf	power_on_screen@i+1,f
  4209     0493  3000               	movlw	0
  4210     0494  07AE               	addwf	power_on_screen@i+1,f
  4211     0495                     l1814:
  4212     0495  3000               	movlw	0
  4213     0496  022E               	subwf	power_on_screen@i+1,w
  4214     0497  3010               	movlw	16
  4215     0498  1903               	skipnz
  4216     0499  022D               	subwf	power_on_screen@i,w
  4217     049A  1C03               	skipc
  4218     049B  2C9D               	goto	u1371
  4219     049C  2C9E               	goto	u1370
  4220     049D                     u1371:
  4221     049D  2C84               	goto	l1810
  4222     049E                     u1370:
  4223     049E                     l1816:
  4224                           
  4225                           ;micro.c: 18: clcd_print("POWERING ON",(0xC0 + 2));
  4226     049E  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4227     049F  00F6               	movwf	clcd_print@str
  4228     04A0  30C2               	movlw	194
  4229     04A1  00F7               	movwf	clcd_print@addr
  4230     04A2  120A  158A  266E  120A  118A  	fcall	_clcd_print
  4231                           
  4232                           ;micro.c: 19: clcd_print("MICROWAVE OVEN",(0x90 + 1));
  4233     04A7  3041               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4234     04A8  00F6               	movwf	clcd_print@str
  4235     04A9  3091               	movlw	145
  4236     04AA  00F7               	movwf	clcd_print@addr
  4237     04AB  120A  158A  266E  120A  118A  	fcall	_clcd_print
  4238     04B0                     l1818:
  4239                           
  4240                           ;micro.c: 20: for(unsigned int j=0; j<16;j++)
  4241     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  4242     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  4243     04B2  01AF               	clrf	power_on_screen@j
  4244     04B3  01B0               	clrf	power_on_screen@j+1
  4245     04B4                     l1824:
  4246                           
  4247                           ;micro.c: 21: {;micro.c: 22:     clcd_putch(0xFF,(0xD0 + j));
  4248     04B4  082F               	movf	power_on_screen@j,w
  4249     04B5  3ED0               	addlw	208
  4250     04B6  00A8               	movwf	clcd_putch@addr
  4251     04B7  30FF               	movlw	255
  4252     04B8  120A  158A  263B  120A  118A  	fcall	_clcd_putch
  4253     04BD                     l1826:
  4254                           
  4255                           ;micro.c: 25: }
  4256     04BD  3001               	movlw	1
  4257     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  4258     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  4259     04C0  07AF               	addwf	power_on_screen@j,f
  4260     04C1  1803               	skipnc
  4261     04C2  0AB0               	incf	power_on_screen@j+1,f
  4262     04C3  3000               	movlw	0
  4263     04C4  07B0               	addwf	power_on_screen@j+1,f
  4264     04C5                     l1828:
  4265     04C5  3000               	movlw	0
  4266     04C6  0230               	subwf	power_on_screen@j+1,w
  4267     04C7  3010               	movlw	16
  4268     04C8  1903               	skipnz
  4269     04C9  022F               	subwf	power_on_screen@j,w
  4270     04CA  1C03               	skipc
  4271     04CB  2CCD               	goto	u1381
  4272     04CC  2CCE               	goto	u1380
  4273     04CD                     u1381:
  4274     04CD  2CB4               	goto	l1824
  4275     04CE                     u1380:
  4276     04CE                     l1830:
  4277                           
  4278                           ;micro.c: 26: _delay((unsigned long)((5000)*(20000000/4000.0)));
  4279     04CE  307F               	movlw	127
  4280     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  4281     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  4282     04D1  00AC               	movwf	??_power_on_screen+2
  4283     04D2  30D4               	movlw	212
  4284     04D3  00AB               	movwf	??_power_on_screen+1
  4285     04D4  3031               	movlw	49
  4286     04D5  00AA               	movwf	??_power_on_screen
  4287     04D6                     u2937:
  4288     04D6  0BAA               	decfsz	??_power_on_screen,f
  4289     04D7  2CD6               	goto	u2937
  4290     04D8  0BAB               	decfsz	??_power_on_screen+1,f
  4291     04D9  2CD6               	goto	u2937
  4292     04DA  0BAC               	decfsz	??_power_on_screen+2,f
  4293     04DB  2CD6               	goto	u2937
  4294     04DC                     l263:
  4295     04DC  0008               	return
  4296     04DD                     __end_of_power_on_screen:
  4297                           
  4298                           	psect	text14
  4299     0E3B                     __ptext14:	
  4300 ;; *************** function _clcd_putch *****************
  4301 ;; Defined at:
  4302 ;;		line 56 in file "clcd.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  data            1    wreg     const unsigned char 
  4305 ;;  addr            1    8[BANK0 ] unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  data            1    9[BANK0 ] const unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       1       0       0       0
  4318 ;;      Locals:         0       1       0       0       0
  4319 ;;      Temps:          0       0       0       0       0
  4320 ;;      Totals:         0       2       0       0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 2
  4324 ;; This function calls:
  4325 ;;		_clcd_write
  4326 ;; This function is called by:
  4327 ;;		_power_on_screen
  4328 ;;		_set_time
  4329 ;;		_time_display
  4330 ;;		_set_temp
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334     0E3B                     _clcd_putch:	
  4335                           ;psect for function _clcd_putch
  4336                           
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  4340                           ;clcd_putch@data stored from wreg
  4341     0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4342     0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4343     0E3D  00A9               	movwf	clcd_putch@data
  4344     0E3E                     l1570:
  4345                           
  4346                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  4347     0E3E  01F2               	clrf	clcd_write@mode
  4348     0E3F  0828               	movf	clcd_putch@addr,w
  4349     0E40  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  4350                           
  4351                           ;clcd.c: 59:     clcd_write(data, 1);
  4352     0E45  01F2               	clrf	clcd_write@mode
  4353     0E46  0AF2               	incf	clcd_write@mode,f
  4354     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4355     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4356     0E49  0829               	movf	clcd_putch@data,w
  4357     0E4A  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  4358     0E4F                     l115:
  4359     0E4F  0008               	return
  4360     0E50                     __end_of_clcd_putch:
  4361                           
  4362                           	psect	text15
  4363     0E50                     __ptext15:	
  4364 ;; *************** function _init_config *****************
  4365 ;; Defined at:
  4366 ;;		line 21 in file "main.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 4
  4387 ;; This function calls:
  4388 ;;		_init_clcd
  4389 ;;		_init_matrix_keypad
  4390 ;;		_init_timer2
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396     0E50                     _init_config:	
  4397                           ;psect for function _init_config
  4398                           
  4399     0E50                     l1758:	
  4400                           ;incstack = 0
  4401                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4402                           
  4403                           
  4404                           ;main.c: 24:     unsigned char start_mode=0;
  4405     0E50  120A  158A  25E6  120A  158A  	fcall	_init_clcd
  4406                           
  4407                           ;main.c: 25:     init_config();
  4408     0E55  120A  158A  25F3  120A  158A  	fcall	_init_matrix_keypad
  4409     0E5A                     l1760:
  4410                           
  4411                           ;main.c: 27:     while(1)
  4412     0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  4413     0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  4414     0E5C  1107               	bcf	7,2	;volatile
  4415     0E5D                     l1762:
  4416                           
  4417                           ;main.c: 28:     { key=read_matrix_keypad(1);
  4418     0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  4419     0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  4420     0E5F  1107               	bcf	7,2	;volatile
  4421     0E60                     l1764:
  4422                           
  4423                           ;main.c: 30:         if(operational_flag==0x02)
  4424     0E60  120A  158A  2627  120A  158A  	fcall	_init_timer2
  4425     0E65                     l1766:
  4426                           
  4427                           ;main.c: 31:         {
  4428     0E65  170B               	bsf	11,6	;volatile
  4429     0E66                     l1768:
  4430                           
  4431                           ;main.c: 32: 
  4432     0E66  178B               	bsf	11,7	;volatile
  4433     0E67                     l1770:
  4434                           
  4435                           ;main.c: 34:             if(key==1)
  4436     0E67  1683               	bsf	3,5	;RP0=1, select bank1
  4437     0E68  1303               	bcf	3,6	;RP1=0, select bank1
  4438     0E69  1087               	bcf	7,1	;volatile
  4439     0E6A                     l1772:
  4440                           
  4441                           ;main.c: 35:                 { clear_screen();
  4442     0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4443     0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4444     0E6C  1087               	bcf	7,1	;volatile
  4445     0E6D                     l51:
  4446     0E6D  0008               	return
  4447     0E6E                     __end_of_init_config:
  4448                           
  4449                           	psect	text16
  4450     0E27                     __ptext16:	
  4451 ;; *************** function _init_timer2 *****************
  4452 ;; Defined at:
  4453 ;;		line 5 in file "timers1.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		None
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_init_config
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481     0E27                     _init_timer2:	
  4482                           ;psect for function _init_timer2
  4483                           
  4484     0E27                     l1556:	
  4485                           ;incstack = 0
  4486                           ; Regs used in _init_timer2: []
  4487                           
  4488                           
  4489                           ;timers1.c: 9:     TOUTPS3=0;
  4490     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0E29  1312               	bcf	18,6	;volatile
  4493                           
  4494                           ;timers1.c: 10:     TOUTPS2=0;
  4495     0E2A  1292               	bcf	18,5	;volatile
  4496                           
  4497                           ;timers1.c: 11:     TOUTPS1=0;
  4498     0E2B  1212               	bcf	18,4	;volatile
  4499                           
  4500                           ;timers1.c: 12:     TOUTPS0=0;
  4501     0E2C  1192               	bcf	18,3	;volatile
  4502                           
  4503                           ;timers1.c: 14:     TMR2ON=0;
  4504     0E2D  1112               	bcf	18,2	;volatile
  4505                           
  4506                           ;timers1.c: 16:     T2CKPS1=0;
  4507     0E2E  1092               	bcf	18,1	;volatile
  4508                           
  4509                           ;timers1.c: 17:     T2CKPS0=0;
  4510     0E2F  1012               	bcf	18,0	;volatile
  4511                           
  4512                           ;timers1.c: 19:     TMR2IE=1;
  4513     0E30  1683               	bsf	3,5	;RP0=1, select bank1
  4514     0E31  1303               	bcf	3,6	;RP1=0, select bank1
  4515     0E32  148C               	bsf	12,1	;volatile
  4516                           
  4517                           ;timers1.c: 21:     TMR2IF=0;
  4518     0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4519     0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4520     0E35  108C               	bcf	12,1	;volatile
  4521                           
  4522                           ;timers1.c: 23:     PR2 = 250;
  4523     0E36  30FA               	movlw	250
  4524     0E37  1683               	bsf	3,5	;RP0=1, select bank1
  4525     0E38  1303               	bcf	3,6	;RP1=0, select bank1
  4526     0E39  0092               	movwf	18	;volatile
  4527     0E3A                     l212:
  4528     0E3A  0008               	return
  4529     0E3B                     __end_of_init_timer2:
  4530                           
  4531                           	psect	text17
  4532     0DF3                     __ptext17:	
  4533 ;; *************** function _init_matrix_keypad *****************
  4534 ;; Defined at:
  4535 ;;		line 4 in file "matrix_keypad.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4549 ;;      Params:         0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 1
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_init_config
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563     0DF3                     _init_matrix_keypad:	
  4564                           ;psect for function _init_matrix_keypad
  4565                           
  4566     0DF3                     l1544:	
  4567                           ;incstack = 0
  4568                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  4569                           
  4570                           
  4571                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  4572     0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  4573     0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  4574     0DF5  0806               	movf	6,w	;volatile
  4575     0DF6  3807               	iorlw	7
  4576     0DF7  0086               	movwf	6	;volatile
  4577                           
  4578                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  4579     0DF8  0808               	movf	8,w	;volatile
  4580     0DF9  39F0               	andlw	240
  4581     0DFA  0088               	movwf	8	;volatile
  4582     0DFB                     l1546:
  4583                           
  4584                           ;matrix_keypad.c: 15:     nRBPU = 0;
  4585     0DFB  1381               	bcf	1,7	;volatile
  4586     0DFC                     l1548:
  4587                           
  4588                           ;matrix_keypad.c: 18:     RD3 = 1;
  4589     0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4590     0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4591     0DFE  1588               	bsf	8,3	;volatile
  4592     0DFF                     l1550:
  4593                           
  4594                           ;matrix_keypad.c: 19:     RD2 = 1;
  4595     0DFF  1508               	bsf	8,2	;volatile
  4596     0E00                     l1552:
  4597                           
  4598                           ;matrix_keypad.c: 20:     RD1 = 1;
  4599     0E00  1488               	bsf	8,1	;volatile
  4600     0E01                     l1554:
  4601                           
  4602                           ;matrix_keypad.c: 21:     RD0 = 1;
  4603     0E01  1408               	bsf	8,0	;volatile
  4604     0E02                     l144:
  4605     0E02  0008               	return
  4606     0E03                     __end_of_init_matrix_keypad:
  4607                           
  4608                           	psect	text18
  4609     0DE6                     __ptext18:	
  4610 ;; *************** function _init_clcd *****************
  4611 ;; Defined at:
  4612 ;;		line 44 in file "clcd.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 3
  4633 ;; This function calls:
  4634 ;;		_init_display_controller
  4635 ;; This function is called by:
  4636 ;;		_init_config
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640     0DE6                     _init_clcd:	
  4641                           ;psect for function _init_clcd
  4642                           
  4643     0DE6                     l1536:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4646                           
  4647                           
  4648                           ;clcd.c: 47:     TRISD = TRISD & 0x0F;
  4649     0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  4650     0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  4651     0DE8  0808               	movf	8,w	;volatile
  4652     0DE9  390F               	andlw	15
  4653     0DEA  0088               	movwf	8	;volatile
  4654     0DEB                     l1538:
  4655                           
  4656                           ;clcd.c: 50:     TRISE2 = 0;
  4657     0DEB  1109               	bcf	9,2	;volatile
  4658     0DEC                     l1540:
  4659                           
  4660                           ;clcd.c: 51:     TRISE1 = 0;
  4661     0DEC  1089               	bcf	9,1	;volatile
  4662     0DED                     l1542:
  4663                           
  4664                           ;clcd.c: 53:     init_display_controller();
  4665     0DED  120A  118A  241D  120A  158A  	fcall	_init_display_controller
  4666     0DF2                     l112:
  4667     0DF2  0008               	return
  4668     0DF3                     __end_of_init_clcd:
  4669                           
  4670                           	psect	text19
  4671     041D                     __ptext19:	
  4672 ;; *************** function _init_display_controller *****************
  4673 ;; Defined at:
  4674 ;;		line 21 in file "clcd.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0
  4690 ;;      Temps:          2       0       0       0       0
  4691 ;;      Totals:         2       0       0       0       0
  4692 ;;Total ram usage:        2 bytes
  4693 ;; Hardware stack levels used: 1
  4694 ;; Hardware stack levels required when called: 2
  4695 ;; This function calls:
  4696 ;;		_clcd_write
  4697 ;; This function is called by:
  4698 ;;		_init_clcd
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702     041D                     _init_display_controller:	
  4703                           ;psect for function _init_display_controller
  4704                           
  4705     041D                     l1512:	
  4706                           ;incstack = 0
  4707                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4708                           
  4709                           
  4710                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4711     041D  30C3               	movlw	195
  4712     041E  00F7               	movwf	??_init_display_controller+1
  4713     041F  30CD               	movlw	205
  4714     0420  00F6               	movwf	??_init_display_controller
  4715     0421                     u2947:
  4716     0421  0BF6               	decfsz	??_init_display_controller,f
  4717     0422  2C21               	goto	u2947
  4718     0423  0BF7               	decfsz	??_init_display_controller+1,f
  4719     0424  2C21               	goto	u2947
  4720     0425                     l1514:
  4721                           
  4722                           ;clcd.c: 27:     clcd_write(0x33, 0);
  4723     0425  01F2               	clrf	clcd_write@mode
  4724     0426  3033               	movlw	51
  4725     0427  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4726     042C                     l1516:
  4727                           
  4728                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4729     042C  301B               	movlw	27
  4730     042D  00F7               	movwf	??_init_display_controller+1
  4731     042E  309E               	movlw	158
  4732     042F  00F6               	movwf	??_init_display_controller
  4733     0430                     u2957:
  4734     0430  0BF6               	decfsz	??_init_display_controller,f
  4735     0431  2C30               	goto	u2957
  4736     0432  0BF7               	decfsz	??_init_display_controller+1,f
  4737     0433  2C30               	goto	u2957
  4738     0434  0000               	nop
  4739                           
  4740                           ;clcd.c: 29:     clcd_write(0x33, 0);
  4741     0435  01F2               	clrf	clcd_write@mode
  4742     0436  3033               	movlw	51
  4743     0437  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4744     043C                     l1518:
  4745                           
  4746                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4747     043C  30A6               	movlw	166
  4748     043D  00F6               	movwf	??_init_display_controller
  4749     043E                     u2967:
  4750     043E  0BF6               	decfsz	??_init_display_controller,f
  4751     043F  2C3E               	goto	u2967
  4752     0440  0000               	nop
  4753     0441                     l1520:
  4754                           
  4755                           ;clcd.c: 31:     clcd_write(0x33, 0);
  4756     0441  01F2               	clrf	clcd_write@mode
  4757     0442  3033               	movlw	51
  4758     0443  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4759     0448                     l1522:
  4760                           
  4761                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4762     0448  2C49               	nop2	;2 cycle nop
  4763     0449  2C4A               	nop2	;2 cycle nop
  4764     044A  0000               	nop
  4765     044B                     l1524:
  4766                           
  4767                           ;clcd.c: 34:     clcd_write(0x02, 0);
  4768     044B  01F2               	clrf	clcd_write@mode
  4769     044C  3002               	movlw	2
  4770     044D  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4771     0452                     l1526:
  4772                           
  4773                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4774     0452  30A6               	movlw	166
  4775     0453  00F6               	movwf	??_init_display_controller
  4776     0454                     u2977:
  4777     0454  0BF6               	decfsz	??_init_display_controller,f
  4778     0455  2C54               	goto	u2977
  4779     0456  0000               	nop
  4780                           
  4781                           ;clcd.c: 36:     clcd_write(0x28, 0);
  4782     0457  01F2               	clrf	clcd_write@mode
  4783     0458  3028               	movlw	40
  4784     0459  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4785     045E                     l1528:
  4786                           
  4787                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4788     045E  30A6               	movlw	166
  4789     045F  00F6               	movwf	??_init_display_controller
  4790     0460                     u2987:
  4791     0460  0BF6               	decfsz	??_init_display_controller,f
  4792     0461  2C60               	goto	u2987
  4793     0462  0000               	nop
  4794     0463                     l1530:
  4795                           
  4796                           ;clcd.c: 38:     clcd_write(0x01, 0);
  4797     0463  01F2               	clrf	clcd_write@mode
  4798     0464  3001               	movlw	1
  4799     0465  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4800                           
  4801                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4802     046A  3004               	movlw	4
  4803     046B  00F7               	movwf	??_init_display_controller+1
  4804     046C  303D               	movlw	61
  4805     046D  00F6               	movwf	??_init_display_controller
  4806     046E                     u2997:
  4807     046E  0BF6               	decfsz	??_init_display_controller,f
  4808     046F  2C6E               	goto	u2997
  4809     0470  0BF7               	decfsz	??_init_display_controller+1,f
  4810     0471  2C6E               	goto	u2997
  4811     0472  2C73               	nop2
  4812     0473                     l1532:
  4813                           
  4814                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  4815     0473  01F2               	clrf	clcd_write@mode
  4816     0474  300C               	movlw	12
  4817     0475  120A  158A  26B8  120A  118A  	fcall	_clcd_write
  4818     047A                     l1534:
  4819                           
  4820                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4821     047A  30A6               	movlw	166
  4822     047B  00F6               	movwf	??_init_display_controller
  4823     047C                     u3007:
  4824     047C  0BF6               	decfsz	??_init_display_controller,f
  4825     047D  2C7C               	goto	u3007
  4826     047E  0000               	nop
  4827     047F                     l109:
  4828     047F  0008               	return
  4829     0480                     __end_of_init_display_controller:
  4830                           
  4831                           	psect	text20
  4832     0DDC                     __ptext20:	
  4833 ;; *************** function _heat_food *****************
  4834 ;; Defined at:
  4835 ;;		line 228 in file "micro.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		status,2
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863     0DDC                     _heat_food:	
  4864                           ;psect for function _heat_food
  4865                           
  4866     0DDC                     l2004:	
  4867                           ;incstack = 0
  4868                           ; Regs used in _heat_food: [status,2]
  4869                           
  4870                           
  4871                           ;micro.c: 230:         sec=30;
  4872     0DDC  301E               	movlw	30
  4873     0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  4874     0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  4875     0DDF  00BE               	movwf	_sec
  4876     0DE0                     l2006:
  4877                           
  4878                           ;micro.c: 231:         min=0;
  4879     0DE0  01BD               	clrf	_min
  4880     0DE1                     l2008:
  4881                           
  4882                           ;micro.c: 232:         RC2=1;
  4883     0DE1  1507               	bsf	7,2	;volatile
  4884     0DE2                     l2010:
  4885                           
  4886                           ;micro.c: 233:         TMR2ON=1;
  4887     0DE2  1512               	bsf	18,2	;volatile
  4888     0DE3                     l2012:
  4889                           
  4890                           ;micro.c: 234:         operational_flag=0xDD;
  4891     0DE3  30DD               	movlw	221
  4892     0DE4  00BF               	movwf	_operational_flag
  4893     0DE5                     l320:
  4894     0DE5  0008               	return
  4895     0DE6                     __end_of_heat_food:
  4896                           
  4897                           	psect	text21
  4898     0E93                     __ptext21:	
  4899 ;; *************** function _display_menu_screen *****************
  4900 ;; Defined at:
  4901 ;;		line 33 in file "micro.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 3
  4922 ;; This function calls:
  4923 ;;		_clcd_print
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929     0E93                     _display_menu_screen:	
  4930                           ;psect for function _display_menu_screen
  4931                           
  4932     0E93                     l1832:	
  4933                           ;incstack = 0
  4934                           ; Regs used in _display_menu_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4935                           
  4936                           
  4937                           ;micro.c: 35: clcd_print("1.MICRO",(0x80 + 0));
  4938     0E93  30B2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4939     0E94  00F6               	movwf	clcd_print@str
  4940     0E95  3080               	movlw	128
  4941     0E96  00F7               	movwf	clcd_print@addr
  4942     0E97  120A  158A  266E  120A  158A  	fcall	_clcd_print
  4943                           
  4944                           ;micro.c: 36: clcd_print("2.GRILL",(0xC0 + 0));
  4945     0E9C  30AA               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4946     0E9D  00F6               	movwf	clcd_print@str
  4947     0E9E  30C0               	movlw	192
  4948     0E9F  00F7               	movwf	clcd_print@addr
  4949     0EA0  120A  158A  266E  120A  158A  	fcall	_clcd_print
  4950                           
  4951                           ;micro.c: 37: clcd_print("3.CONVECTION",(0x90 + 0));
  4952     0EA5  305D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4953     0EA6  00F6               	movwf	clcd_print@str
  4954     0EA7  3090               	movlw	144
  4955     0EA8  00F7               	movwf	clcd_print@addr
  4956     0EA9  120A  158A  266E  120A  158A  	fcall	_clcd_print
  4957                           
  4958                           ;micro.c: 38: clcd_print("4.START",(0xD0 + 0));
  4959     0EAE  30C2               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4960     0EAF  00F6               	movwf	clcd_print@str
  4961     0EB0  30D0               	movlw	208
  4962     0EB1  00F7               	movwf	clcd_print@addr
  4963     0EB2  120A  158A  266E  120A  158A  	fcall	_clcd_print
  4964     0EB7                     l269:
  4965     0EB7  0008               	return
  4966     0EB8                     __end_of_display_menu_screen:
  4967                           
  4968                           	psect	text22
  4969     0E6E                     __ptext22:	
  4970 ;; *************** function _clcd_print *****************
  4971 ;; Defined at:
  4972 ;;		line 63 in file "clcd.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  str             1    6[COMMON] PTR const unsigned char 
  4975 ;;		 -> STR_22(6), STR_21(11), STR_20(12), STR_19(17), 
  4976 ;;		 -> STR_18(7), STR_17(13), STR_16(16), STR_15(8), 
  4977 ;;		 -> STR_14(7), STR_13(8), STR_12(15), STR_11(8), 
  4978 ;;		 -> STR_10(17), STR_9(7), STR_8(16), STR_7(8), 
  4979 ;;		 -> STR_6(13), STR_5(8), STR_4(8), STR_3(15), 
  4980 ;;		 -> STR_2(12), STR_1(13), 
  4981 ;;  addr            1    7[COMMON] unsigned char 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4993 ;;      Params:         2       0       0       0       0
  4994 ;;      Locals:         0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0
  4996 ;;      Totals:         2       0       0       0       0
  4997 ;;Total ram usage:        2 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 2
  5000 ;; This function calls:
  5001 ;;		_clcd_write
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;;		_power_on_screen
  5005 ;;		_display_menu_screen
  5006 ;;		_set_time
  5007 ;;		_time_display
  5008 ;;		_set_temp
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     0E6E                     _clcd_print:	
  5013                           ;psect for function _clcd_print
  5014                           
  5015     0E6E                     l1562:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5018                           
  5019                           
  5020                           ;clcd.c: 63: void clcd_print(const char *str, unsigned char addr);clcd.c: 64: {;clcd.c: 
      +                          65:     clcd_write(addr, 0);
  5021     0E6E  01F2               	clrf	clcd_write@mode
  5022     0E6F  0877               	movf	clcd_print@addr,w
  5023     0E70  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  5024                           
  5025                           ;clcd.c: 67:     while (*str != '\0')
  5026     0E75  2E86               	goto	l1568
  5027     0E76                     l1564:
  5028                           
  5029                           ;clcd.c: 68:     {;clcd.c: 69:         clcd_write(*str, 1);
  5030     0E76  01F2               	clrf	clcd_write@mode
  5031     0E77  0AF2               	incf	clcd_write@mode,f
  5032     0E78  0876               	movf	clcd_print@str,w
  5033     0E79  0084               	movwf	4
  5034     0E7A  120A  118A  2500  120A  158A  	fcall	stringdir
  5035     0E7F  120A  158A  26B8  120A  158A  	fcall	_clcd_write
  5036     0E84                     l1566:
  5037                           
  5038                           ;clcd.c: 70:         str++;
  5039     0E84  3001               	movlw	1
  5040     0E85  07F6               	addwf	clcd_print@str,f
  5041     0E86                     l1568:
  5042                           
  5043                           ;clcd.c: 67:     while (*str != '\0')
  5044     0E86  0876               	movf	clcd_print@str,w
  5045     0E87  0084               	movwf	4
  5046     0E88  120A  118A  2500  120A  158A  	fcall	stringdir
  5047     0E8D  3A00               	xorlw	0
  5048     0E8E  1D03               	skipz
  5049     0E8F  2E91               	goto	u901
  5050     0E90  2E92               	goto	u900
  5051     0E91                     u901:
  5052     0E91  2E76               	goto	l1564
  5053     0E92                     u900:
  5054     0E92                     l121:
  5055     0E92  0008               	return
  5056     0E93                     __end_of_clcd_print:
  5057                           
  5058                           	psect	text23
  5059     0EB8                     __ptext23:	
  5060 ;; *************** function _clcd_write *****************
  5061 ;; Defined at:
  5062 ;;		line 4 in file "clcd.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  byte            1    wreg     unsigned char 
  5065 ;;  mode            1    2[COMMON] unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  byte            1    5[COMMON] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5077 ;;      Params:         1       0       0       0       0
  5078 ;;      Locals:         1       0       0       0       0
  5079 ;;      Temps:          2       0       0       0       0
  5080 ;;      Totals:         4       0       0       0       0
  5081 ;;Total ram usage:        4 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_init_display_controller
  5088 ;;		_clcd_putch
  5089 ;;		_clcd_print
  5090 ;;		_clear_screen
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094     0EB8                     _clcd_write:	
  5095                           ;psect for function _clcd_write
  5096                           
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  5100                           ;clcd_write@byte stored from wreg
  5101     0EB8  00F5               	movwf	clcd_write@byte
  5102     0EB9                     l1492:
  5103                           
  5104                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  5105     0EB9  1872               	btfsc	clcd_write@mode,0
  5106     0EBA  2EBC               	goto	u871
  5107     0EBB  2EC0               	goto	u870
  5108     0EBC                     u871:
  5109     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5110     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5111     0EBE  1509               	bsf	9,2	;volatile
  5112     0EBF  2EC3               	goto	u884
  5113     0EC0                     u870:
  5114     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  5115     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  5116     0EC2  1109               	bcf	9,2	;volatile
  5117     0EC3                     u884:
  5118     0EC3                     l1494:
  5119                           
  5120                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  5121     0EC3  0875               	movf	clcd_write@byte,w
  5122     0EC4  39F0               	andlw	240
  5123     0EC5  0088               	movwf	8	;volatile
  5124     0EC6                     l1496:
  5125                           
  5126                           ;clcd.c: 9:     RE1 = 1;
  5127     0EC6  1489               	bsf	9,1	;volatile
  5128     0EC7                     l1498:
  5129                           
  5130                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5131     0EC7  30A6               	movlw	166
  5132     0EC8  00F3               	movwf	??_clcd_write
  5133     0EC9                     u3017:
  5134     0EC9  0BF3               	decfsz	??_clcd_write,f
  5135     0ECA  2EC9               	goto	u3017
  5136     0ECB  0000               	nop
  5137     0ECC                     l1500:
  5138                           
  5139                           ;clcd.c: 11:     RE1 = 0;
  5140     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  5141     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  5142     0ECE  1089               	bcf	9,1	;volatile
  5143     0ECF                     l1502:
  5144                           
  5145                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  5146     0ECF  0875               	movf	clcd_write@byte,w
  5147     0ED0  390F               	andlw	15
  5148     0ED1  00F3               	movwf	??_clcd_write
  5149     0ED2  3003               	movlw	3
  5150     0ED3                     u895:
  5151     0ED3  1003               	clrc
  5152     0ED4  0DF3               	rlf	??_clcd_write,f
  5153     0ED5  3EFF               	addlw	-1
  5154     0ED6  1D03               	skipz
  5155     0ED7  2ED3               	goto	u895
  5156     0ED8  1003               	clrc
  5157     0ED9  0D73               	rlf	??_clcd_write,w
  5158     0EDA  0088               	movwf	8	;volatile
  5159     0EDB                     l1504:
  5160                           
  5161                           ;clcd.c: 14:     RE1 = 1;
  5162     0EDB  1489               	bsf	9,1	;volatile
  5163     0EDC                     l1506:
  5164                           
  5165                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  5166     0EDC  30A6               	movlw	166
  5167     0EDD  00F3               	movwf	??_clcd_write
  5168     0EDE                     u3027:
  5169     0EDE  0BF3               	decfsz	??_clcd_write,f
  5170     0EDF  2EDE               	goto	u3027
  5171     0EE0  0000               	nop
  5172     0EE1                     l1508:
  5173                           
  5174                           ;clcd.c: 16:     RE1 = 0;
  5175     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5176     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  5177     0EE3  1089               	bcf	9,1	;volatile
  5178     0EE4                     l1510:
  5179                           
  5180                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  5181     0EE4  301B               	movlw	27
  5182     0EE5  00F4               	movwf	??_clcd_write+1
  5183     0EE6  309E               	movlw	158
  5184     0EE7  00F3               	movwf	??_clcd_write
  5185     0EE8                     u3037:
  5186     0EE8  0BF3               	decfsz	??_clcd_write,f
  5187     0EE9  2EE8               	goto	u3037
  5188     0EEA  0BF4               	decfsz	??_clcd_write+1,f
  5189     0EEB  2EE8               	goto	u3037
  5190     0EEC  0000               	nop
  5191     0EED                     l106:
  5192     0EED  0008               	return
  5193     0EEE                     __end_of_clcd_write:
  5194                           
  5195                           	psect	text24
  5196     0F28                     __ptext24:	
  5197 ;; *************** function _isr *****************
  5198 ;; Defined at:
  5199 ;;		line 6 in file "isr.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0
  5215 ;;      Temps:          2       0       0       0       0
  5216 ;;      Totals:         2       0       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		Interrupt level 1
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226     0F28                     _isr:	
  5227                           ;psect for function _isr
  5228                           
  5229     0F28                     i1l2122:
  5230                           
  5231                           ;isr.c: 8:     if(TMR2IF)
  5232     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  5233     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  5234     0F2A  1C8C               	btfss	12,1	;volatile
  5235     0F2B  2F2D               	goto	u175_21
  5236     0F2C  2F2E               	goto	u175_20
  5237     0F2D                     u175_21:
  5238     0F2D  2F5E               	goto	i1l234
  5239     0F2E                     u175_20:
  5240     0F2E                     i1l2124:
  5241                           
  5242                           ;isr.c: 9:     {;isr.c: 10:         if( ++count == 20000 )
  5243     0F2E  3001               	movlw	1
  5244     0F2F  07F9               	addwf	_count,f
  5245     0F30  1803               	skipnc
  5246     0F31  0AFA               	incf	_count+1,f
  5247     0F32  3000               	movlw	0
  5248     0F33  07FA               	addwf	_count+1,f
  5249     0F34  3020               	movlw	32
  5250     0F35  0679               	xorwf	_count,w
  5251     0F36  304E               	movlw	78
  5252     0F37  1903               	skipnz
  5253     0F38  067A               	xorwf	_count+1,w
  5254     0F39  1D03               	btfss	3,2
  5255     0F3A  2F3C               	goto	u176_21
  5256     0F3B  2F3D               	goto	u176_20
  5257     0F3C                     u176_21:
  5258     0F3C  2F5D               	goto	i1l2144
  5259     0F3D                     u176_20:
  5260     0F3D                     i1l2126:
  5261                           
  5262                           ;isr.c: 11:     {;isr.c: 12:         count=0;
  5263     0F3D  01F9               	clrf	_count
  5264     0F3E  01FA               	clrf	_count+1
  5265     0F3F                     i1l2128:
  5266                           
  5267                           ;isr.c: 14:         if(sec!=0){
  5268     0F3F  083E               	movf	_sec,w
  5269     0F40  1903               	btfsc	3,2
  5270     0F41  2F43               	goto	u177_21
  5271     0F42  2F44               	goto	u177_20
  5272     0F43                     u177_21:
  5273     0F43  2F47               	goto	i1l2132
  5274     0F44                     u177_20:
  5275     0F44                     i1l2130:
  5276                           
  5277                           ;isr.c: 15:             sec--;
  5278     0F44  3001               	movlw	1
  5279     0F45  02BE               	subwf	_sec,f
  5280                           
  5281                           ;isr.c: 16:         }
  5282     0F46  2F5D               	goto	i1l2144
  5283     0F47                     i1l2132:
  5284     0F47  083B               	movf	_pre_heat_time,w
  5285     0F48  1903               	btfsc	3,2
  5286     0F49  2F4B               	goto	u178_21
  5287     0F4A  2F4C               	goto	u178_20
  5288     0F4B                     u178_21:
  5289     0F4B  2F4F               	goto	i1l2136
  5290     0F4C                     u178_20:
  5291     0F4C                     i1l2134:
  5292                           
  5293                           ;isr.c: 18:         { pre_heat_time--;
  5294     0F4C  3001               	movlw	1
  5295     0F4D  02BB               	subwf	_pre_heat_time,f
  5296                           
  5297                           ;isr.c: 21:         }
  5298     0F4E  2F5D               	goto	i1l2144
  5299     0F4F                     i1l2136:
  5300     0F4F  083E               	movf	_sec,w
  5301     0F50  1D03               	btfss	3,2
  5302     0F51  2F53               	goto	u179_21
  5303     0F52  2F54               	goto	u179_20
  5304     0F53                     u179_21:
  5305     0F53  2F5D               	goto	i1l230
  5306     0F54                     u179_20:
  5307     0F54                     i1l2138:
  5308     0F54  083D               	movf	_min,w
  5309     0F55  1903               	btfsc	3,2
  5310     0F56  2F58               	goto	u180_21
  5311     0F57  2F59               	goto	u180_20
  5312     0F58                     u180_21:
  5313     0F58  2F5D               	goto	i1l230
  5314     0F59                     u180_20:
  5315     0F59                     i1l2140:
  5316                           
  5317                           ;isr.c: 23:         {;isr.c: 25:             min=0;
  5318     0F59  01BD               	clrf	_min
  5319     0F5A                     i1l2142:
  5320                           
  5321                           ;isr.c: 26:             sec=60;
  5322     0F5A  303C               	movlw	60
  5323     0F5B  00BE               	movwf	_sec
  5324     0F5C  2F5D               	goto	i1l2144
  5325     0F5D                     i1l230:
  5326     0F5D                     i1l2144:
  5327                           
  5328                           ;isr.c: 34:     TMR2IF=0;
  5329     0F5D  108C               	bcf	12,1	;volatile
  5330     0F5E                     i1l234:
  5331     0F5E  0871               	movf	??_isr+1,w
  5332     0F5F  008A               	movwf	10
  5333     0F60  0E70               	swapf	??_isr,w
  5334     0F61  0083               	movwf	3
  5335     0F62  0EFE               	swapf	btemp,f
  5336     0F63  0E7E               	swapf	btemp,w
  5337     0F64  0009               	retfie
  5338     0F65                     __end_of_isr:
  5339     0002                     ___latbits      equ	2
  5340     007E                     btemp           set	126	;btemp
  5341     007E                     wtemp0          set	126
  5342                           
  5343                           	psect	intentry
  5344     0004                     __pintentry:	
  5345                           ;incstack = 0
  5346                           ; Regs used in _isr: [wreg+status,2+status,0]
  5347                           
  5348     0004                     interrupt_function:
  5349     007E                     saved_w         set	btemp
  5350     0004  00FE               	movwf	btemp
  5351     0005  0E03               	swapf	3,w
  5352     0006  00F0               	movwf	??_isr
  5353     0007  080A               	movf	10,w
  5354     0008  00F1               	movwf	??_isr+1
  5355     0009  120A  158A  2F28   	ljmp	_isr
  5356                           
  5357                           	psect	config
  5358                           
  5359                           ;Config register CONFIG @ 0x2007
  5360                           ;	Oscillator Selection bits
  5361                           ;	FOSC = 0x3, unprogrammed default
  5362                           ;	Watchdog Timer Enable bit
  5363                           ;	WDTE = OFF, WDT disabled
  5364                           ;	Power-up Timer Enable bit
  5365                           ;	PWRTE = 0x1, unprogrammed default
  5366                           ;	Brown-out Reset Enable bit
  5367                           ;	BOREN = 0x1, unprogrammed default
  5368                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5369                           ;	LVP = 0x1, unprogrammed default
  5370                           ;	Data EEPROM Memory Code Protection bit
  5371                           ;	CPD = 0x1, unprogrammed default
  5372                           ;	Flash Program Memory Write Enable bits
  5373                           ;	WRT = 0x3, unprogrammed default
  5374                           ;	In-Circuit Debugger Mode bit
  5375                           ;	DEBUG = 0x1, unprogrammed default
  5376                           ;	Flash Program Memory Code Protection bit
  5377                           ;	CP = 0x1, unprogrammed default
  5378     2007                     	org	8199
  5379     2007  3FFB               	dw	16379

Data Sizes:
    Strings     228
    Constant    0
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     22      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[13]), STR_10(CODE[17]), STR_11(CODE[8]), STR_12(CODE[15]), 
		 -> STR_13(CODE[8]), STR_14(CODE[7]), STR_15(CODE[8]), STR_16(CODE[16]), 
		 -> STR_17(CODE[13]), STR_18(CODE[7]), STR_19(CODE[17]), STR_2(CODE[12]), 
		 -> STR_20(CODE[12]), STR_21(CODE[11]), STR_22(CODE[6]), STR_3(CODE[15]), 
		 -> STR_4(CODE[8]), STR_5(CODE[8]), STR_6(CODE[13]), STR_7(CODE[8]), 
		 -> STR_8(CODE[16]), STR_9(CODE[7]), 


Critical Paths under _main in COMMON

    _set_temp->___lwdiv
    _clear_screen->_clcd_write
    ___lwmod->___lwdiv
    ___awmod->___awdiv
    _read_matrix_keypad->_scan_keypad
    _clcd_putch->___lwdiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display_menu_screen->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_power_on_screen
    _time_display->_clcd_putch
    _set_time->_clcd_putch
    _set_temp->_clcd_putch
    ___awmod->___awdiv
    _power_on_screen->_clcd_putch
    _clcd_putch->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    6524
                                             17 BANK0      5     5      0
                         _clcd_print
                       _clear_screen
                _display_menu_screen
                          _heat_food
                        _init_config
                    _power_on_screen
                 _read_matrix_keypad
                           _set_temp
                           _set_time
                       _time_display
 ---------------------------------------------------------------------------------
 (1) _time_display                                         3     3      0    1014
                                             10 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _set_time                                             5     4      1    1623
                                             10 BANK0      5     4      1
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1       6
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _set_temp                                             5     4      1    2040
                                             10 BANK0      5     4      1
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         2     2      0      92
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     244
                                              0 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     166
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     449
                                              6 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     102
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     210
                                              4 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on_screen                                      7     7      0     507
                                             10 BANK0      7     7      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     168
                                              8 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0      92
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      92
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0      92
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _heat_food                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_menu_screen                                  0     0      0     203
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           2     0      2     203
                                              6 COMMON     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1      92
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clear_screen
     _clcd_write
   _display_menu_screen
     _clcd_print
   _heat_food
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _power_on_screen
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       _clcd_write (ARG)
   _read_matrix_keypad
     _scan_keypad
   _set_temp
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _set_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_screen
   _time_display
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clear_screen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      32     40.0%
BITBANK0            80      0       0      0.0%
COMMON              14      9      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      42      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Feb 27 18:31:12 2025

                              pc 0002                   ___bmul@product 0073                   clcd_print@addr 0077  
                             l51 0E6D                               l73 03AD                               l82 03D2  
                             l83 03D5                               l59 036A                     ___awdiv@sign 0021  
                             fsr 0004              ___wmul@multiplicand 0074               _init_matrix_keypad 0DF3  
                            l112 0DF2                              l121 0E92                              l106 0EED  
                            l115 0E4F                              l212 0E3A                              l109 047F  
                            l150 06E7                              l151 0772                              l320 0DE5  
                            l144 0E02                              l160 071D                              l152 06F3  
                            l161 0717                              l153 06ED                              l316 01B3  
                            l149 06DF                              l317 01B6                              l174 075D  
                            l166 0733                              l158 0709                              l406 07E4  
                            l263 04DC                              l175 0765                              l167 073B  
                            l159 0711                              l168 0747                              l408 07FC  
                            l432 0E26                              l177 076B                              l169 0741  
                            l185 04FF                              l266 0E13                              l292 02EE  
                            l269 0EB7                              l296 06C6                              l572 0FFF  
                            l559 07D7                              l686 0FA6                              l696 0F27  
                            _GIE 005F                              _RB0 0030                              _RB1 0031  
                            _RB2 0032                              _RC1 0039                              _RC2 003A  
                            _RD0 0040                              _RD1 0041                              _RD2 0042  
                            _RE1 0049                              _RD3 0043                              _RE2 004A  
                            _PR2 0092                              u900 0E92                              u901 0E91  
                            u910 06DF                              u911 06DE                              u920 06E5  
                            u921 06E4                              u930 06EB                              u931 06EA  
                            u940 06F1                              u941 06F0                              u870 0EC0  
                            u950 0709                              u871 0EBC                              u951 0708  
                            u960 070F                              u961 070E                              u970 0715  
                            u971 0714                              u884 0EC3                              u980 071B  
                            u981 071A                              u990 0733                              u895 0ED3  
                            u991 0732                              _min 003D                              _sec 003E  
                            _isr 0F28                   clcd_putch@addr 0028                              fsr0 0004  
                 clcd_putch@data 0029                     ___awmod@sign 0077              ?_init_matrix_keypad 0070  
                           l2010 0DE2                             l2012 0DE3                             l2004 0DDC  
                           l2006 0DE0                             l2008 0DE1                             l2210 0FB3  
                           l1500 0ECC                             l2220 0FC7                             l2212 0FB5  
                           l2204 0FA7                             l1510 0EE4                             l1502 0ECF  
                           l2230 0FE4                             l2222 0FCE                             l2214 0FB9  
                           l2206 0FA8                             l2150 0E1A                             l1504 0EDB  
                           l1520 0441                             l1512 041D                             l2232 0FEB  
                           l2224 0FD0                             l2216 0FBE                             l2208 0FAE  
                           l2152 0E1C                             l1506 0EDC                             l1530 0463  
                           l1522 0448                             l1514 0425                             l1610 071B  
                           l2226 0FD4                             l2218 0FC4                             l2234 0FF1  
                           l2250 0F02                             l2242 0EEE                             l2154 0E1E  
                           l2146 0E15                             l1508 0EE1                             l1532 0473  
                           l1524 044B                             l1516 042C                             l1540 0DEC  
                           l1604 0715                             l2236 0FF6                             l2228 0FDE  
                           l2252 0F06                             l2244 0EF6                             l2260 0F23  
                           l2156 0E25                             l2148 0E16                             l1534 047A  
                           l1526 0452                             l1518 043C                             l1542 0DED  
                           l1550 0DFF                             l1630 0745                             l1614 0721  
                           l2238 0FFB                             l1710 0F65                             l2254 0F10  
                           l2246 0EF9                             l1528 045E                             l1536 0DE6  
                           l1552 0E00                             l1544 0DF3                             l1624 073F  
                           l1616 0725                             l1800 04FE                             l1720 0F79  
                           l1712 0F67                             l2256 0F16                             l2248 0F00  
                           l1560 0E0A                             l2600 01FB                             l1562 0E6E  
                           l1538 0DEB                             l1554 0E01                             l1546 0DFB  
                           l1570 0E3E                             l1810 0484                             l1650 076F  
                           l1634 074B                             l1618 0739                             l1730 0F9C  
                           l1722 0F7D                             l1714 0F6D                             l2258 0F1D  
                           l2602 0207                             l2610 021E                             l1492 0EB9  
                           l1564 0E76                             l1548 0DFC                             l1556 0E27  
                           l1812 048D                             l1804 0480                             l1644 0769  
                           l1636 074F                             l1572 06C7                             l2540 077F  
                           l1724 0F8E                             l1716 0F70                             l1732 0FA2  
                           l1660 07DA                             l2700 007B                             l2612 0224  
                           l2620 0230                             l2604 0209                             l1494 0EC3  
                           l1566 0E84                             l1830 04CE                             l1814 0495  
                           l1654 0771                             l1638 0763                             l1590 06F1  
                           l1574 06CD                             l2550 078E                             l2542 0781  
                           l2534 0773                             l1726 0F94                             l1718 0F77  
                           l1662 07DE                             l1558 0E03                             l2710 00ED  
                           l2702 00D4                             l2630 0259                             l2622 0236  
                           l2614 0229                             l2606 020F                             l1496 0EC6  
                           l1568 0E86                             l1832 0E93                             l1760 0E5A  
                           l1824 04B4                             l1816 049E                             l1584 06EB  
                           l1576 06D1                             l2560 07A4                             l2552 0794  
                           l2544 0785                             l2536 0776                             l1728 0F95  
                           l1664 07EB                             l2720 0117                             l2712 0104  
                           l2704 00DC                             l2632 026B                             l2624 023A  
                           l2616 022A                             l2608 021B                             l2640 05F3  
                           l2800 037B                             l1498 0EC7                             l1770 0E67  
                           l1762 0E5D                             l1826 04BD                             l1818 04B0  
                           l1594 06F7                             l1578 06E5                             l2562 07B5  
                           l2554 0797                             l2570 07C9                             l2546 078A  
                           l2538 077A                             l1666 07F2                             l1658 07D8  
                           l2730 013B                             l2722 0120                             l2706 00E2  
                           l2714 0107                             l2634 026F                             l2618 022D  
                           l2626 023F                             l2650 066D                             l2642 060E  
                           l2810 0393                             l2802 037E                             l1772 0E6A  
                           l1764 0E60                             l1828 04C5                             l1596 06FB  
                           l2572 07CE                             l2564 07BB                             l2556 079E  
                           l2548 078C                             l1668 07F8                             l2732 0144  
                           l2724 0124                             l2716 010D                             l2708 00E7  
                           l2636 0276                             l2628 0246                             l2580 01BF  
                           l2660 0694                             l2652 0676                             l2644 062B  
                           l2820 03AE                             l2812 0399                             l2804 0384  
                           l2740 02EF                             l1766 0E65                             l1758 0E50  
                           l1598 070F                             l1774 04DE                             l2574 07D3  
                           l2566 07BC                             l2558 07A0                             l2734 0148  
                           l2726 0129                             l2718 0111                             l2590 01E0  
                           l2582 01C1                             l2670 06AF                             l2662 0699  
                           l2654 067F                             l2646 0635                             l2638 05EA  
                           l2830 03CC                             l2822 03B3                             l2806 038A  
                           l2814 039C                             l2750 030B                             l2742 02F2  
                           l1768 0E66                             l1784 04EB                             l1776 04E4  
                           l2568 07C3                             l2736 014A                             l2728 0132  
                           l2680 0032                             l2592 01E8                             l2584 01C5  
                           l2672 06B2                             l2664 069C                             l2656 0688  
                           l2648 0650                             l2840 03F3                             l2832 03D7  
                           l2824 03B7                             l2816 03A2                             l2808 0390  
                           l2760 032C                             l2752 0310                             l2744 02F7  
                           l1786 04F0                             l1778 04E9                             l2738 01AC  
                           l2690 0052                             l2682 0034                             l2594 01EE  
                           l2586 01CE                             l2578 01BA                             l2674 06C1  
                           l2666 069D                             l2658 068F                             l2834 03DC  
                           l2826 03BD                             l2818 03A8                             l2770 0344  
                           l2762 0331                             l2754 0313                             l2746 0300  
                           l1788 04F5                             l1796 04F7                             l2692 005C  
                           l2684 0037                             l2596 01F3                             l2588 01D7  
                           l2676 06C4                             l2668 06A6                             l2836 03E1  
                           l2828 03C3                             l2844 03F9                             l2780 0355  
                           l2756 0315                             l2764 0336                             l2748 0306  
                           l1798 04FC                             l2694 0066                             l2686 0040  
                           l2678 002D                             l2598 01F5                             l2838 03EA  
                           l2846 0416                             l2790 0367                             l2766 033C  
                           l2774 0347                             l2758 031E                             l2696 0070  
                           l2688 0049                             l2776 034D                             l2784 0358  
                           l2768 0341                             l2698 0074                             l2786 035E  
                           l2778 0352                             l2794 036A                             l2796 0370  
                           l2788 0363                             l2798 0376                             ?_isr 0070  
                           STR_1 056F                             STR_2 057C                             STR_3 0546  
                           STR_4 05B7                             STR_5 05AF                             STR_6 0562  
                           STR_7 05C7                             STR_8 0517                             STR_9 05CF  
                           u1000 0739                             u1001 0738                             u1010 073F  
                           u1011 073E                             u1020 0745                             u1100 07F8  
                           u1021 0744                             u1101 07F7                             u1030 075D  
                           u1031 075C                             u1040 0763                             u2000 0FF1  
                           u1200 0F6D                             u1041 0762                             u2001 0FF0  
                           u1201 0F6C                             u1050 0769                             u2010 0FF6  
                           u1051 0768                             u2011 0FF5                             u1060 076F  
                           u1220 0F7D                             u2020 0EF6                             u1061 076E  
                           u1221 0F7C                             u2021 0EF5                             u1070 07DE  
                           u1215 0F71                             u1071 07DD                             u1240 0F8E  
                           u2040 0F06                             u1241 0F8D                             u2041 0F05  
                           u1330 04E9                             u2050 0F10                             u1331 04E8  
                           u1235 0F7E                             u2051 0F0F                             u2035 0EFA  
                           u1340 04F0                             u1260 0FA2                             u1341 04EF  
                           u1261 0FA1                             u1245 0F8A                             u1085 07E5  
                           u1350 04F5                             u2070 0F23                             u3007 047C  
                           u1351 04F4                             u1255 0F96                             u2071 0F22  
                           u2055 0F0C                             u1095 07EC                             u1360 04FC  
                           u3017 0EC9                             u1361 04FB                             u2065 0F17  
                           u1370 049E                             u3027 0EDE                             u1371 049D  
                           u1380 04CE                             u2500 07B5                             u3037 0EE8  
                           u1381 04CD                             u2501 07B4                             u2520 07C9  
                           u2440 077A                             u2600 0224                             u2521 07C8  
                           u2505 07B1                             u2441 0779                             u2601 0223  
                           u2530 07CE                             u2450 0785                             u1810 0E1A  
                           u2610 0229                             u2531 07CD                             u2515 07BD  
                           u2451 0784                             u1811 0E19                             u2611 0228  
                           u2460 0794                             u2700 00E2                             u1820 0E25  
                           u2620 0236                             u2540 01BF                             u2461 0793  
                           u2701 00E1                             u1821 0E24                             u2621 0235  
                           u2541 01BE                             u2710 00E7                             u2630 0246  
                           u2550 01E8                             u2711 00E6                             u2631 0245  
                           u2551 01E7                             u2480 07A4                             u2720 00ED  
                           u2640 0276                             u2560 01EE                             u2800 034D  
                           u2481 07A3                             u2721 00EC                             u2641 0275  
                           u2561 01ED                             u2801 034C                             u1930 0FAE  
                           u2730 010D                             u2570 01F3                             u2650 068F  
                           u2810 035E                             u2475 0798                             u1931 0FAD  
                           u2731 010C                             u2571 01F2                             u2651 068E  
                           u2811 035D                             u1940 0FB9                             u2740 0117  
                           u2580 01FB                             u2660 0694                             u2820 0370  
                           u1941 0FB8                             u2741 0116                             u2581 01FA  
                           u2661 0693                             u2821 036F                             u1950 0FC4  
                           u2750 0120                             u2670 0032                             u2590 020F  
                           u2830 0376                             u2495 07A5                             u1951 0FC3  
                           u2751 011F                             u2671 0031                             u2591 020E  
                           u2831 0375                             u2760 01B3                             u2680 007B  
                           u2840 037B                             u2761 01B2                             u2681 007A  
                           u2841 037A                             u1970 0FD4                             u2690 00DC  
                           u2850 0384                             u2770 0306                             u1971 0FD3  
                           u2691 00DB                             u2851 0383                             u2907 0326  
                           u2771 0305                             _PEIE 005E                             u1980 0FDE  
                           u2860 0390                             u2780 030B                             u1981 0FDD  
                           u1965 0FC8                             u2917 06BA                             u2861 038F  
                           u2781 030A                             u2870 0399                             u2790 033C  
                           u2927 0E0E                             u2871 0398                             u2791 033B  
                           u2880 03A2                             u2937 04D6                             u1985 0FDA  
                           u2881 03A1                             u2890 03A8                             u2947 0421  
                           u1995 0FE5                             u2891 03A7                             u2957 0430  
                           u2967 043E                             u2977 0454                             u2987 0460  
                           u2997 046E                             _main 02EF                             btemp 007E  
                           start 000C                ___bmul@multiplier 0074             ??_init_matrix_keypad 0072  
                 clcd_write@byte 0075                   clcd_write@mode 0072          __end_of_power_on_screen 04DD  
                          ??_isr 0070                            ?_main 0070                  __end_of___awdiv 07D8  
                          STR_10 0506                            STR_11 059F                            STR_20 0588  
                          STR_12 0537                            STR_13 05A7                            STR_21 0594  
                          STR_22 05E4                            STR_14 05DD                            STR_15 05BF  
                          STR_16 0527                            STR_17 0555                            STR_18 05D6  
                          STR_19 0506                  __end_of___awmod 1000                  ___awdiv@divisor 0072  
                __end_of___lwdiv 0FA7                            i1l230 0F5D                            i1l234 0F5E  
                __end_of___lwmod 0F28                     ?_init_config 0070                  ___awdiv@counter 0020  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                   ?_init_timer2 0070             __end_of_clear_screen 0E14                            _nRBPU 040F  
             _read_matrix_keypad 04DD                            _count 0079                            pclath 000A  
            ?_read_matrix_keypad 0070                            status 0003                            wtemp0 007E  
                   ?_scan_keypad 0070                  __initialization 000F                     __end_of_main 041D  
           ??_read_matrix_keypad 0074                           ??_main 0031                 ___awdiv@dividend 0074  
                         i1l2130 0F44                           i1l2122 0F28                           i1l2140 0F59  
                         i1l2132 0F47                           i1l2124 0F2E                           i1l2142 0F5A  
                         i1l2134 0F4C                           i1l2126 0F3D                           i1l2136 0F4F  
                         i1l2128 0F3F                           i1l2144 0F5D                           i1l2138 0F54  
                         u180_20 0F59                           u180_21 0F58                           u175_20 0F2E  
                         u175_21 0F2D                           u176_20 0F3D                           u176_21 0F3C  
                         u177_20 0F44                           u177_21 0F43                           u178_20 0F4C  
                         u178_21 0F4B                           u179_20 0F54                           u179_21 0F53  
                         _TMR2IE 0461                           _TMR2IF 0061                           _TMR2ON 0092  
                         _TRISC1 0439                           _TRISC2 043A                           _TRISE1 0449  
                         _TRISE2 044A                           ___bmul 0E14          _init_display_controller 041D  
                         ___wmul 07D8                        ??___awdiv 0076                 ?_power_on_screen 0070  
                      ??___awmod 0076                        ??___lwdiv 0076                        ??___lwmod 0079  
               ___awdiv@quotient 0022                  ___awmod@divisor 0024                  ___awmod@counter 0076  
                   __pdataCOMMON 007B                 __end_of_set_temp 01B7                 __end_of_set_time 02EF  
                         saved_w 007E          __end_of__initialization 0026              ___bmul@multiplicand 0072  
                 __pcstackCOMMON 0070                     __pidataBANK0 07FE      __end_of_display_menu_screen 0EB8  
                     __pbssBANK0 0036        ??_init_display_controller 0076                       _clcd_print 0E6E  
                     _clcd_putch 0E3B                       _clcd_write 0EB8                       __pmaintext 02EF  
                   _clear_screen 0E03                          ?___bmul 0072                          ?___wmul 0072  
                     __pintentry 0004                          _T2CKPS0 0090                          _T2CKPS1 0091  
                        _TOUTPS0 0093                          _TOUTPS1 0094                          _TOUTPS2 0095  
                        _TOUTPS3 0096                       __stringtab 0500                __end_of_heat_food 0DE6  
                      ?_set_temp 002A                        ?_set_time 002A                          ___awdiv 0773  
                        ___awmod 0FA7                          ___lwdiv 0F65                          ___lwmod 0EEE  
                        __ptext1 05EA                          __ptext2 01B7                          __ptext3 0E14  
                        __ptext4 002A                          __ptext5 0E03                          __ptext6 07D8  
                        __ptext7 0EEE                          __ptext8 0F65                          __ptext9 0FA7  
__end_of_init_display_controller 0480                __end_of_init_clcd 0DF3                 ___awmod@dividend 0026  
                  ?_time_display 0070                          main@key 0035             end_of_initialization 0026  
                    set_temp@key 002E                      set_time@key 002E                      ?_clcd_print 0076  
                    ?_clcd_putch 0028                      ?_clcd_write 0072                       _reset_flag 003C  
                     ??_set_temp 002B                       ??_set_time 002B                   main@start_mode 0034  
                 ??_time_display 002A                    clcd_print@str 0076               set_temp@reset_flag 002A  
                 __end_of___bmul 0E27                   __end_of___wmul 07FD                    __pidataCOMMON 07FD  
            start_initialization 000F                     scan_keypad@i 0072           read_matrix_keypad@mode 0074  
         read_matrix_keypad@once 007B                      __end_of_isr 0F65                         ??___bmul 0073  
                       ??___wmul 0076                      __pdataBANK0 003F                    ??_init_config 0078  
                  ??_init_timer2 0072                      __pbssCOMMON 0079                        ___latbits 0002  
                  __pcstackBANK0 0020                    ??_scan_keypad 0072                 ___lwdiv@dividend 0074  
           __end_of_time_display 06C7                         ?___awdiv 0072                         ?___awmod 0024  
                      _heat_food 0DDC                         ?___lwdiv 0072                         ?___lwmod 0020  
                      __pstrings 0500               set_time@reset_flag 002A                    _pre_heat_time 003B  
               ___lwdiv@quotient 0076                        _init_clcd 0DE6              __end_of_init_config 0E6E  
              ??_power_on_screen 002A              __end_of_init_timer2 0E3B         ?_init_display_controller 0070  
              interrupt_function 0004                   ___wmul@product 0076                     ??_clcd_print 0078  
                   ??_clcd_putch 0079       __end_of_init_matrix_keypad 0E03                     ??_clcd_write 0073  
              set_temp@key_count 0038              __end_of_scan_keypad 0773                       ?_heat_food 0070  
                    __stringbase 0505                ___wmul@multiplier 0072               __end_of_clcd_print 0E93  
             __end_of_clcd_putch 0E50               __end_of_clcd_write 0EEE                       ?_init_clcd 0070  
          read_matrix_keypad@key 0075                set_time@blink_pos 003A       __end_of_read_matrix_keypad 0500  
             __end_of__stringtab 0506                set_time@key_count 0039                      _init_config 0E50  
               _operational_flag 003F                      _init_timer2 0E27                  ___lwdiv@divisor 0072  
                ___lwdiv@counter 0078                         __ptext10 0773                         __ptext11 04DD  
                       __ptext20 0DDC                         __ptext12 06C7                         __ptext21 0E93  
                       __ptext13 0480                         __ptext22 0E6E                         __ptext14 0E3B  
                       __ptext23 0EB8                         __ptext15 0E50                         __ptext24 0F28  
                       __ptext16 0E27                         __ptext17 0DF3                         __ptext18 0DE6  
                       __ptext19 041D                      _scan_keypad 06C7                    ?_clear_screen 0070  
                       _set_temp 002A                         _set_time 01B7                      ??_heat_food 0072  
            _display_menu_screen 0E93                     set_temp@temp 0036                     set_temp@wait 002D  
                   set_time@wait 002D                      ??_init_clcd 0078                     _time_display 05EA  
                       intlevel1 0000                 ___lwmod@dividend 0022             ?_display_menu_screen 0070  
                      stringcode 0500                   ??_clear_screen 0076                  _power_on_screen 0480  
                ___lwmod@divisor 0020                  ___lwmod@counter 0024                         stringdir 0500  
                       stringtab 0500                 power_on_screen@i 002D                 power_on_screen@j 002F  
          ??_display_menu_screen 0078  
